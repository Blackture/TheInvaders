id: cs.temp.dll
language: CSharp
name:
  Default: cs.temp.dll
qualifiedName:
  Default: cs.temp.dll
type: Assembly
modifiers: {}
items:
- id: CardBattle.Networking
  commentId: N:CardBattle.Networking
  language: CSharp
  name:
    CSharp: CardBattle.Networking
    VB: CardBattle.Networking
  nameWithType:
    CSharp: CardBattle.Networking
    VB: CardBattle.Networking
  qualifiedName:
    CSharp: CardBattle.Networking
    VB: CardBattle.Networking
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: CardBattle.Networking.Quit
    commentId: T:CardBattle.Networking.Quit
    language: CSharp
    name:
      CSharp: Quit
      VB: Quit
    nameWithType:
      CSharp: Quit
      VB: Quit
    qualifiedName:
      CSharp: CardBattle.Networking.Quit
      VB: CardBattle.Networking.Quit
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: CardBattle.Networking
    source:
      id: Quit
      path: ''
      startLine: 9
    syntax:
      content:
        CSharp: 'public class Quit : MonoBehaviourPunCallbacks'
        VB: >-
          Public Class Quit

              Inherits MonoBehaviourPunCallbacks
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: CardBattle.Networking.Quit.ExitRoom
      commentId: M:CardBattle.Networking.Quit.ExitRoom
      language: CSharp
      name:
        CSharp: ExitRoom()
        VB: ExitRoom()
      nameWithType:
        CSharp: Quit.ExitRoom()
        VB: Quit.ExitRoom()
      qualifiedName:
        CSharp: CardBattle.Networking.Quit.ExitRoom()
        VB: CardBattle.Networking.Quit.ExitRoom()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Networking
      source:
        id: ExitRoom
        path: ''
        startLine: 14
      syntax:
        content:
          CSharp: public void ExitRoom()
          VB: Public Sub ExitRoom
      overload: CardBattle.Networking.Quit.ExitRoom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Networking.Quit.Exit
      commentId: M:CardBattle.Networking.Quit.Exit
      language: CSharp
      name:
        CSharp: Exit()
        VB: Exit()
      nameWithType:
        CSharp: Quit.Exit()
        VB: Quit.Exit()
      qualifiedName:
        CSharp: CardBattle.Networking.Quit.Exit()
        VB: CardBattle.Networking.Quit.Exit()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Networking
      source:
        id: Exit
        path: ''
        startLine: 37
      syntax:
        content:
          CSharp: public void Exit()
          VB: Public Sub Exit
      overload: CardBattle.Networking.Quit.Exit*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Networking.Quit.OnLeftRoom
      commentId: M:CardBattle.Networking.Quit.OnLeftRoom
      language: CSharp
      name:
        CSharp: OnLeftRoom()
        VB: OnLeftRoom()
      nameWithType:
        CSharp: Quit.OnLeftRoom()
        VB: Quit.OnLeftRoom()
      qualifiedName:
        CSharp: CardBattle.Networking.Quit.OnLeftRoom()
        VB: CardBattle.Networking.Quit.OnLeftRoom()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Networking
      source:
        id: OnLeftRoom
        path: ''
        startLine: 52
      syntax:
        content:
          CSharp: public override void OnLeftRoom()
          VB: Public Overrides Sub OnLeftRoom
      overload: CardBattle.Networking.Quit.OnLeftRoom*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: CardBattle.Networking.Quit.OnLeftLobby
      commentId: M:CardBattle.Networking.Quit.OnLeftLobby
      language: CSharp
      name:
        CSharp: OnLeftLobby()
        VB: OnLeftLobby()
      nameWithType:
        CSharp: Quit.OnLeftLobby()
        VB: Quit.OnLeftLobby()
      qualifiedName:
        CSharp: CardBattle.Networking.Quit.OnLeftLobby()
        VB: CardBattle.Networking.Quit.OnLeftLobby()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Networking
      source:
        id: OnLeftLobby
        path: ''
        startLine: 58
      syntax:
        content:
          CSharp: public override void OnLeftLobby()
          VB: Public Overrides Sub OnLeftLobby
      overload: CardBattle.Networking.Quit.OnLeftLobby*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: CardBattle.Networking.Quit.OnDisconnected(DisconnectCause)
      commentId: M:CardBattle.Networking.Quit.OnDisconnected(DisconnectCause)
      language: CSharp
      name:
        CSharp: OnDisconnected(DisconnectCause)
        VB: OnDisconnected(DisconnectCause)
      nameWithType:
        CSharp: Quit.OnDisconnected(DisconnectCause)
        VB: Quit.OnDisconnected(DisconnectCause)
      qualifiedName:
        CSharp: CardBattle.Networking.Quit.OnDisconnected(DisconnectCause)
        VB: CardBattle.Networking.Quit.OnDisconnected(DisconnectCause)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Networking
      source:
        id: OnDisconnected
        path: ''
        startLine: 65
      syntax:
        content:
          CSharp: public override void OnDisconnected(DisconnectCause cause)
          VB: Public Overrides Sub OnDisconnected(cause As DisconnectCause)
        parameters:
        - id: cause
          type: DisconnectCause
      overload: CardBattle.Networking.Quit.OnDisconnected*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: CardBattle.Networking.ConnectToServer
    commentId: T:CardBattle.Networking.ConnectToServer
    language: CSharp
    name:
      CSharp: ConnectToServer
      VB: ConnectToServer
    nameWithType:
      CSharp: ConnectToServer
      VB: ConnectToServer
    qualifiedName:
      CSharp: CardBattle.Networking.ConnectToServer
      VB: CardBattle.Networking.ConnectToServer
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: CardBattle.Networking
    source:
      id: ConnectToServer
      path: ''
      startLine: 1091
    syntax:
      content:
        CSharp: 'public class ConnectToServer : MonoBehaviourPunCallbacks'
        VB: >-
          Public Class ConnectToServer

              Inherits MonoBehaviourPunCallbacks
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: CardBattle.Networking.ConnectToServer.OnConnectedToMaster
      commentId: M:CardBattle.Networking.ConnectToServer.OnConnectedToMaster
      language: CSharp
      name:
        CSharp: OnConnectedToMaster()
        VB: OnConnectedToMaster()
      nameWithType:
        CSharp: ConnectToServer.OnConnectedToMaster()
        VB: ConnectToServer.OnConnectedToMaster()
      qualifiedName:
        CSharp: CardBattle.Networking.ConnectToServer.OnConnectedToMaster()
        VB: CardBattle.Networking.ConnectToServer.OnConnectedToMaster()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Networking
      source:
        id: OnConnectedToMaster
        path: ''
        startLine: 1099
      syntax:
        content:
          CSharp: public override void OnConnectedToMaster()
          VB: Public Overrides Sub OnConnectedToMaster
      overload: CardBattle.Networking.ConnectToServer.OnConnectedToMaster*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: CardBattle.Networking.ConnectToServer.OnJoinedLobby
      commentId: M:CardBattle.Networking.ConnectToServer.OnJoinedLobby
      language: CSharp
      name:
        CSharp: OnJoinedLobby()
        VB: OnJoinedLobby()
      nameWithType:
        CSharp: ConnectToServer.OnJoinedLobby()
        VB: ConnectToServer.OnJoinedLobby()
      qualifiedName:
        CSharp: CardBattle.Networking.ConnectToServer.OnJoinedLobby()
        VB: CardBattle.Networking.ConnectToServer.OnJoinedLobby()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Networking
      source:
        id: OnJoinedLobby
        path: ''
        startLine: 1105
      syntax:
        content:
          CSharp: public override void OnJoinedLobby()
          VB: Public Overrides Sub OnJoinedLobby
      overload: CardBattle.Networking.ConnectToServer.OnJoinedLobby*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: CardBattle.Networking.CreateAndJoinRooms
    commentId: T:CardBattle.Networking.CreateAndJoinRooms
    language: CSharp
    name:
      CSharp: CreateAndJoinRooms
      VB: CreateAndJoinRooms
    nameWithType:
      CSharp: CreateAndJoinRooms
      VB: CreateAndJoinRooms
    qualifiedName:
      CSharp: CardBattle.Networking.CreateAndJoinRooms
      VB: CardBattle.Networking.CreateAndJoinRooms
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: CardBattle.Networking
    source:
      id: CreateAndJoinRooms
      path: ''
      startLine: 1124
    syntax:
      content:
        CSharp: 'public class CreateAndJoinRooms : MonoBehaviourPunCallbacks'
        VB: >-
          Public Class CreateAndJoinRooms

              Inherits MonoBehaviourPunCallbacks
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: CardBattle.Networking.CreateAndJoinRooms.roomNameInput
      commentId: F:CardBattle.Networking.CreateAndJoinRooms.roomNameInput
      language: CSharp
      name:
        CSharp: roomNameInput
        VB: roomNameInput
      nameWithType:
        CSharp: CreateAndJoinRooms.roomNameInput
        VB: CreateAndJoinRooms.roomNameInput
      qualifiedName:
        CSharp: CardBattle.Networking.CreateAndJoinRooms.roomNameInput
        VB: CardBattle.Networking.CreateAndJoinRooms.roomNameInput
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Networking
      source:
        id: roomNameInput
        path: ''
        startLine: 1126
      syntax:
        content:
          CSharp: public TMP_InputField roomNameInput
          VB: Public roomNameInput As TMP_InputField
        return:
          type: TMP_InputField
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Networking.CreateAndJoinRooms.nameInput
      commentId: F:CardBattle.Networking.CreateAndJoinRooms.nameInput
      language: CSharp
      name:
        CSharp: nameInput
        VB: nameInput
      nameWithType:
        CSharp: CreateAndJoinRooms.nameInput
        VB: CreateAndJoinRooms.nameInput
      qualifiedName:
        CSharp: CardBattle.Networking.CreateAndJoinRooms.nameInput
        VB: CardBattle.Networking.CreateAndJoinRooms.nameInput
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Networking
      source:
        id: nameInput
        path: ''
        startLine: 1127
      syntax:
        content:
          CSharp: public TMP_InputField nameInput
          VB: Public nameInput As TMP_InputField
        return:
          type: TMP_InputField
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Networking.CreateAndJoinRooms.BnJoin
      commentId: F:CardBattle.Networking.CreateAndJoinRooms.BnJoin
      language: CSharp
      name:
        CSharp: BnJoin
        VB: BnJoin
      nameWithType:
        CSharp: CreateAndJoinRooms.BnJoin
        VB: CreateAndJoinRooms.BnJoin
      qualifiedName:
        CSharp: CardBattle.Networking.CreateAndJoinRooms.BnJoin
        VB: CardBattle.Networking.CreateAndJoinRooms.BnJoin
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Networking
      source:
        id: BnJoin
        path: ''
        startLine: 1128
      syntax:
        content:
          CSharp: public Button BnJoin
          VB: Public BnJoin As Button
        return:
          type: Button
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Networking.CreateAndJoinRooms.BnCreate
      commentId: F:CardBattle.Networking.CreateAndJoinRooms.BnCreate
      language: CSharp
      name:
        CSharp: BnCreate
        VB: BnCreate
      nameWithType:
        CSharp: CreateAndJoinRooms.BnCreate
        VB: CreateAndJoinRooms.BnCreate
      qualifiedName:
        CSharp: CardBattle.Networking.CreateAndJoinRooms.BnCreate
        VB: CardBattle.Networking.CreateAndJoinRooms.BnCreate
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Networking
      source:
        id: BnCreate
        path: ''
        startLine: 1129
      syntax:
        content:
          CSharp: public Button BnCreate
          VB: Public BnCreate As Button
        return:
          type: Button
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Networking.CreateAndJoinRooms.GetLobbyMenuItems
      commentId: M:CardBattle.Networking.CreateAndJoinRooms.GetLobbyMenuItems
      language: CSharp
      name:
        CSharp: GetLobbyMenuItems()
        VB: GetLobbyMenuItems()
      nameWithType:
        CSharp: CreateAndJoinRooms.GetLobbyMenuItems()
        VB: CreateAndJoinRooms.GetLobbyMenuItems()
      qualifiedName:
        CSharp: CardBattle.Networking.CreateAndJoinRooms.GetLobbyMenuItems()
        VB: CardBattle.Networking.CreateAndJoinRooms.GetLobbyMenuItems()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Networking
      source:
        id: GetLobbyMenuItems
        path: ''
        startLine: 1149
      syntax:
        content:
          CSharp: public List<GameObject> GetLobbyMenuItems()
          VB: Public Function GetLobbyMenuItems As List(Of GameObject)
        return:
          type: System.Collections.Generic.List{GameObject}
      overload: CardBattle.Networking.CreateAndJoinRooms.GetLobbyMenuItems*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Networking.CreateAndJoinRooms.SetLobbyMenu(System.Boolean)
      commentId: M:CardBattle.Networking.CreateAndJoinRooms.SetLobbyMenu(System.Boolean)
      language: CSharp
      name:
        CSharp: SetLobbyMenu(Boolean)
        VB: SetLobbyMenu(Boolean)
      nameWithType:
        CSharp: CreateAndJoinRooms.SetLobbyMenu(Boolean)
        VB: CreateAndJoinRooms.SetLobbyMenu(Boolean)
      qualifiedName:
        CSharp: CardBattle.Networking.CreateAndJoinRooms.SetLobbyMenu(System.Boolean)
        VB: CardBattle.Networking.CreateAndJoinRooms.SetLobbyMenu(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Networking
      source:
        id: SetLobbyMenu
        path: ''
        startLine: 1167
      syntax:
        content:
          CSharp: public void SetLobbyMenu(bool active)
          VB: Public Sub SetLobbyMenu(active As Boolean)
        parameters:
        - id: active
          type: System.Boolean
      overload: CardBattle.Networking.CreateAndJoinRooms.SetLobbyMenu*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Networking.CreateAndJoinRooms.CreateRoom
      commentId: M:CardBattle.Networking.CreateAndJoinRooms.CreateRoom
      language: CSharp
      name:
        CSharp: CreateRoom()
        VB: CreateRoom()
      nameWithType:
        CSharp: CreateAndJoinRooms.CreateRoom()
        VB: CreateAndJoinRooms.CreateRoom()
      qualifiedName:
        CSharp: CardBattle.Networking.CreateAndJoinRooms.CreateRoom()
        VB: CardBattle.Networking.CreateAndJoinRooms.CreateRoom()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Networking
      source:
        id: CreateRoom
        path: ''
        startLine: 1193
      syntax:
        content:
          CSharp: public void CreateRoom()
          VB: Public Sub CreateRoom
      overload: CardBattle.Networking.CreateAndJoinRooms.CreateRoom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Networking.CreateAndJoinRooms.JoinRoom
      commentId: M:CardBattle.Networking.CreateAndJoinRooms.JoinRoom
      language: CSharp
      name:
        CSharp: JoinRoom()
        VB: JoinRoom()
      nameWithType:
        CSharp: CreateAndJoinRooms.JoinRoom()
        VB: CreateAndJoinRooms.JoinRoom()
      qualifiedName:
        CSharp: CardBattle.Networking.CreateAndJoinRooms.JoinRoom()
        VB: CardBattle.Networking.CreateAndJoinRooms.JoinRoom()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Networking
      source:
        id: JoinRoom
        path: ''
        startLine: 1200
      syntax:
        content:
          CSharp: public void JoinRoom()
          VB: Public Sub JoinRoom
      overload: CardBattle.Networking.CreateAndJoinRooms.JoinRoom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Networking.CreateAndJoinRooms.OnJoinRoomFailed(System.Int16,System.String)
      commentId: M:CardBattle.Networking.CreateAndJoinRooms.OnJoinRoomFailed(System.Int16,System.String)
      language: CSharp
      name:
        CSharp: OnJoinRoomFailed(Int16, String)
        VB: OnJoinRoomFailed(Int16, String)
      nameWithType:
        CSharp: CreateAndJoinRooms.OnJoinRoomFailed(Int16, String)
        VB: CreateAndJoinRooms.OnJoinRoomFailed(Int16, String)
      qualifiedName:
        CSharp: CardBattle.Networking.CreateAndJoinRooms.OnJoinRoomFailed(System.Int16, System.String)
        VB: CardBattle.Networking.CreateAndJoinRooms.OnJoinRoomFailed(System.Int16, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Networking
      source:
        id: OnJoinRoomFailed
        path: ''
        startLine: 1211
      syntax:
        content:
          CSharp: public override void OnJoinRoomFailed(short returnCode, string message)
          VB: Public Overrides Sub OnJoinRoomFailed(returnCode As Short, message As String)
        parameters:
        - id: returnCode
          type: System.Int16
        - id: message
          type: System.String
      overload: CardBattle.Networking.CreateAndJoinRooms.OnJoinRoomFailed*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: CardBattle.Networking.CreateAndJoinRooms.OnJoinedRoom
      commentId: M:CardBattle.Networking.CreateAndJoinRooms.OnJoinedRoom
      language: CSharp
      name:
        CSharp: OnJoinedRoom()
        VB: OnJoinedRoom()
      nameWithType:
        CSharp: CreateAndJoinRooms.OnJoinedRoom()
        VB: CreateAndJoinRooms.OnJoinedRoom()
      qualifiedName:
        CSharp: CardBattle.Networking.CreateAndJoinRooms.OnJoinedRoom()
        VB: CardBattle.Networking.CreateAndJoinRooms.OnJoinedRoom()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Networking
      source:
        id: OnJoinedRoom
        path: ''
        startLine: 1217
      syntax:
        content:
          CSharp: public override void OnJoinedRoom()
          VB: Public Overrides Sub OnJoinedRoom
      overload: CardBattle.Networking.CreateAndJoinRooms.OnJoinedRoom*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: CardBattle.Networking.CreateAndJoinRooms.CheckPlayersReady
      commentId: M:CardBattle.Networking.CreateAndJoinRooms.CheckPlayersReady
      language: CSharp
      name:
        CSharp: CheckPlayersReady()
        VB: CheckPlayersReady()
      nameWithType:
        CSharp: CreateAndJoinRooms.CheckPlayersReady()
        VB: CreateAndJoinRooms.CheckPlayersReady()
      qualifiedName:
        CSharp: CardBattle.Networking.CreateAndJoinRooms.CheckPlayersReady()
        VB: CardBattle.Networking.CreateAndJoinRooms.CheckPlayersReady()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Networking
      source:
        id: CheckPlayersReady
        path: ''
        startLine: 1246
      syntax:
        content:
          CSharp: public static bool CheckPlayersReady()
          VB: Public Shared Function CheckPlayersReady As Boolean
        return:
          type: System.Boolean
      overload: CardBattle.Networking.CreateAndJoinRooms.CheckPlayersReady*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: CardBattle.Networking.CreateAndJoinRooms.CheckPlayersIngame
      commentId: M:CardBattle.Networking.CreateAndJoinRooms.CheckPlayersIngame
      language: CSharp
      name:
        CSharp: CheckPlayersIngame()
        VB: CheckPlayersIngame()
      nameWithType:
        CSharp: CreateAndJoinRooms.CheckPlayersIngame()
        VB: CreateAndJoinRooms.CheckPlayersIngame()
      qualifiedName:
        CSharp: CardBattle.Networking.CreateAndJoinRooms.CheckPlayersIngame()
        VB: CardBattle.Networking.CreateAndJoinRooms.CheckPlayersIngame()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Networking
      source:
        id: CheckPlayersIngame
        path: ''
        startLine: 1259
      syntax:
        content:
          CSharp: public static bool CheckPlayersIngame()
          VB: Public Shared Function CheckPlayersIngame As Boolean
        return:
          type: System.Boolean
      overload: CardBattle.Networking.CreateAndJoinRooms.CheckPlayersIngame*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: CardBattle.Networking.LevelChanger
    commentId: T:CardBattle.Networking.LevelChanger
    language: CSharp
    name:
      CSharp: LevelChanger
      VB: LevelChanger
    nameWithType:
      CSharp: LevelChanger
      VB: LevelChanger
    qualifiedName:
      CSharp: CardBattle.Networking.LevelChanger
      VB: CardBattle.Networking.LevelChanger
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: CardBattle.Networking
    source:
      id: LevelChanger
      path: ''
      startLine: 1282
    syntax:
      content:
        CSharp: 'public class LevelChanger : MonoBehaviour'
        VB: >-
          Public Class LevelChanger

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: CardBattle.Networking.LevelChanger.anim
      commentId: F:CardBattle.Networking.LevelChanger.anim
      language: CSharp
      name:
        CSharp: anim
        VB: anim
      nameWithType:
        CSharp: LevelChanger.anim
        VB: LevelChanger.anim
      qualifiedName:
        CSharp: CardBattle.Networking.LevelChanger.anim
        VB: CardBattle.Networking.LevelChanger.anim
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Networking
      source:
        id: anim
        path: ''
        startLine: 1284
      syntax:
        content:
          CSharp: public Animator anim
          VB: Public anim As Animator
        return:
          type: Animator
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Networking.LevelChanger.FadeToLevel(System.String)
      commentId: M:CardBattle.Networking.LevelChanger.FadeToLevel(System.String)
      language: CSharp
      name:
        CSharp: FadeToLevel(String)
        VB: FadeToLevel(String)
      nameWithType:
        CSharp: LevelChanger.FadeToLevel(String)
        VB: LevelChanger.FadeToLevel(String)
      qualifiedName:
        CSharp: CardBattle.Networking.LevelChanger.FadeToLevel(System.String)
        VB: CardBattle.Networking.LevelChanger.FadeToLevel(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Networking
      source:
        id: FadeToLevel
        path: ''
        startLine: 1288
      syntax:
        content:
          CSharp: public void FadeToLevel(string levelName)
          VB: Public Sub FadeToLevel(levelName As String)
        parameters:
        - id: levelName
          type: System.String
      overload: CardBattle.Networking.LevelChanger.FadeToLevel*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Networking.LevelChanger.OnFadeComplete
      commentId: M:CardBattle.Networking.LevelChanger.OnFadeComplete
      language: CSharp
      name:
        CSharp: OnFadeComplete()
        VB: OnFadeComplete()
      nameWithType:
        CSharp: LevelChanger.OnFadeComplete()
        VB: LevelChanger.OnFadeComplete()
      qualifiedName:
        CSharp: CardBattle.Networking.LevelChanger.OnFadeComplete()
        VB: CardBattle.Networking.LevelChanger.OnFadeComplete()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Networking
      source:
        id: OnFadeComplete
        path: ''
        startLine: 1294
      syntax:
        content:
          CSharp: public void OnFadeComplete()
          VB: Public Sub OnFadeComplete
      overload: CardBattle.Networking.LevelChanger.OnFadeComplete*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Networking.LevelChanger.OnFadeCompleteNetwork
      commentId: M:CardBattle.Networking.LevelChanger.OnFadeCompleteNetwork
      language: CSharp
      name:
        CSharp: OnFadeCompleteNetwork()
        VB: OnFadeCompleteNetwork()
      nameWithType:
        CSharp: LevelChanger.OnFadeCompleteNetwork()
        VB: LevelChanger.OnFadeCompleteNetwork()
      qualifiedName:
        CSharp: CardBattle.Networking.LevelChanger.OnFadeCompleteNetwork()
        VB: CardBattle.Networking.LevelChanger.OnFadeCompleteNetwork()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Networking
      source:
        id: OnFadeCompleteNetwork
        path: ''
        startLine: 1299
      syntax:
        content:
          CSharp: public void OnFadeCompleteNetwork()
          VB: Public Sub OnFadeCompleteNetwork
      overload: CardBattle.Networking.LevelChanger.OnFadeCompleteNetwork*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: CardBattle.Networking.SpawnPlayers
    commentId: T:CardBattle.Networking.SpawnPlayers
    language: CSharp
    name:
      CSharp: SpawnPlayers
      VB: SpawnPlayers
    nameWithType:
      CSharp: SpawnPlayers
      VB: SpawnPlayers
    qualifiedName:
      CSharp: CardBattle.Networking.SpawnPlayers
      VB: CardBattle.Networking.SpawnPlayers
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: CardBattle.Networking
    source:
      id: SpawnPlayers
      path: ''
      startLine: 1339
    syntax:
      content:
        CSharp: 'public class SpawnPlayers : MonoBehaviour'
        VB: >-
          Public Class SpawnPlayers

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
- id: CardBattle.Core
  commentId: N:CardBattle.Core
  language: CSharp
  name:
    CSharp: CardBattle.Core
    VB: CardBattle.Core
  nameWithType:
    CSharp: CardBattle.Core
    VB: CardBattle.Core
  qualifiedName:
    CSharp: CardBattle.Core
    VB: CardBattle.Core
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: CardBattle.Core.COLOR
    commentId: T:CardBattle.Core.COLOR
    language: CSharp
    name:
      CSharp: COLOR
      VB: COLOR
    nameWithType:
      CSharp: COLOR
      VB: COLOR
    qualifiedName:
      CSharp: CardBattle.Core.COLOR
      VB: CardBattle.Core.COLOR
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: CardBattle.Core
    source:
      id: COLOR
      path: ''
      startLine: 96
    syntax:
      content:
        CSharp: public enum COLOR
        VB: Public Enum COLOR
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: CardBattle.Core.COLOR.WHITE
      commentId: F:CardBattle.Core.COLOR.WHITE
      language: CSharp
      name:
        CSharp: WHITE
        VB: WHITE
      nameWithType:
        CSharp: COLOR.WHITE
        VB: COLOR.WHITE
      qualifiedName:
        CSharp: CardBattle.Core.COLOR.WHITE
        VB: CardBattle.Core.COLOR.WHITE
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core
      source:
        id: WHITE
        path: ''
        startLine: 98
      syntax:
        content:
          CSharp: WHITE = 0
          VB: WHITE = 0
        return:
          type: CardBattle.Core.COLOR
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: CardBattle.Core.COLOR.RED
      commentId: F:CardBattle.Core.COLOR.RED
      language: CSharp
      name:
        CSharp: RED
        VB: RED
      nameWithType:
        CSharp: COLOR.RED
        VB: COLOR.RED
      qualifiedName:
        CSharp: CardBattle.Core.COLOR.RED
        VB: CardBattle.Core.COLOR.RED
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core
      source:
        id: RED
        path: ''
        startLine: 99
      syntax:
        content:
          CSharp: RED = 1
          VB: RED = 1
        return:
          type: CardBattle.Core.COLOR
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: CardBattle.Core.COLOR.BLUE
      commentId: F:CardBattle.Core.COLOR.BLUE
      language: CSharp
      name:
        CSharp: BLUE
        VB: BLUE
      nameWithType:
        CSharp: COLOR.BLUE
        VB: COLOR.BLUE
      qualifiedName:
        CSharp: CardBattle.Core.COLOR.BLUE
        VB: CardBattle.Core.COLOR.BLUE
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core
      source:
        id: BLUE
        path: ''
        startLine: 100
      syntax:
        content:
          CSharp: BLUE = 2
          VB: BLUE = 2
        return:
          type: CardBattle.Core.COLOR
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: CardBattle.Core.COLOR.GREEN
      commentId: F:CardBattle.Core.COLOR.GREEN
      language: CSharp
      name:
        CSharp: GREEN
        VB: GREEN
      nameWithType:
        CSharp: COLOR.GREEN
        VB: COLOR.GREEN
      qualifiedName:
        CSharp: CardBattle.Core.COLOR.GREEN
        VB: CardBattle.Core.COLOR.GREEN
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core
      source:
        id: GREEN
        path: ''
        startLine: 101
      syntax:
        content:
          CSharp: GREEN = 3
          VB: GREEN = 3
        return:
          type: CardBattle.Core.COLOR
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: CardBattle.Core.MULTIPLIER
    commentId: T:CardBattle.Core.MULTIPLIER
    language: CSharp
    name:
      CSharp: MULTIPLIER
      VB: MULTIPLIER
    nameWithType:
      CSharp: MULTIPLIER
      VB: MULTIPLIER
    qualifiedName:
      CSharp: CardBattle.Core.MULTIPLIER
      VB: CardBattle.Core.MULTIPLIER
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: CardBattle.Core
    source:
      id: MULTIPLIER
      path: ''
      startLine: 104
    syntax:
      content:
        CSharp: public enum MULTIPLIER
        VB: Public Enum MULTIPLIER
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: CardBattle.Core.MULTIPLIER.ZERO
      commentId: F:CardBattle.Core.MULTIPLIER.ZERO
      language: CSharp
      name:
        CSharp: ZERO
        VB: ZERO
      nameWithType:
        CSharp: MULTIPLIER.ZERO
        VB: MULTIPLIER.ZERO
      qualifiedName:
        CSharp: CardBattle.Core.MULTIPLIER.ZERO
        VB: CardBattle.Core.MULTIPLIER.ZERO
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core
      source:
        id: ZERO
        path: ''
        startLine: 106
      syntax:
        content:
          CSharp: ZERO = 0
          VB: ZERO = 0
        return:
          type: CardBattle.Core.MULTIPLIER
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: CardBattle.Core.MULTIPLIER.NONE
      commentId: F:CardBattle.Core.MULTIPLIER.NONE
      language: CSharp
      name:
        CSharp: NONE
        VB: NONE
      nameWithType:
        CSharp: MULTIPLIER.NONE
        VB: MULTIPLIER.NONE
      qualifiedName:
        CSharp: CardBattle.Core.MULTIPLIER.NONE
        VB: CardBattle.Core.MULTIPLIER.NONE
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core
      source:
        id: NONE
        path: ''
        startLine: 107
      syntax:
        content:
          CSharp: NONE = 1
          VB: NONE = 1
        return:
          type: CardBattle.Core.MULTIPLIER
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: CardBattle.Core.MULTIPLIER.DOUBLE
      commentId: F:CardBattle.Core.MULTIPLIER.DOUBLE
      language: CSharp
      name:
        CSharp: DOUBLE
        VB: DOUBLE
      nameWithType:
        CSharp: MULTIPLIER.DOUBLE
        VB: MULTIPLIER.DOUBLE
      qualifiedName:
        CSharp: CardBattle.Core.MULTIPLIER.DOUBLE
        VB: CardBattle.Core.MULTIPLIER.DOUBLE
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core
      source:
        id: DOUBLE
        path: ''
        startLine: 108
      syntax:
        content:
          CSharp: DOUBLE = 2
          VB: DOUBLE = 2
        return:
          type: CardBattle.Core.MULTIPLIER
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: CardBattle.Core.MULTIPLIER.QUADRUPLE
      commentId: F:CardBattle.Core.MULTIPLIER.QUADRUPLE
      language: CSharp
      name:
        CSharp: QUADRUPLE
        VB: QUADRUPLE
      nameWithType:
        CSharp: MULTIPLIER.QUADRUPLE
        VB: MULTIPLIER.QUADRUPLE
      qualifiedName:
        CSharp: CardBattle.Core.MULTIPLIER.QUADRUPLE
        VB: CardBattle.Core.MULTIPLIER.QUADRUPLE
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core
      source:
        id: QUADRUPLE
        path: ''
        startLine: 109
      syntax:
        content:
          CSharp: QUADRUPLE = 3
          VB: QUADRUPLE = 3
        return:
          type: CardBattle.Core.MULTIPLIER
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: CardBattle.Core.GameManager
    commentId: T:CardBattle.Core.GameManager
    language: CSharp
    name:
      CSharp: GameManager
      VB: GameManager
    nameWithType:
      CSharp: GameManager
      VB: GameManager
    qualifiedName:
      CSharp: CardBattle.Core.GameManager
      VB: CardBattle.Core.GameManager
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: CardBattle.Core
    source:
      id: GameManager
      path: ''
      startLine: 121
    syntax:
      content:
        CSharp: 'public class GameManager : MonoBehaviour'
        VB: >-
          Public Class GameManager

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: CardBattle.Core.GameManager.instance
      commentId: F:CardBattle.Core.GameManager.instance
      language: CSharp
      name:
        CSharp: instance
        VB: instance
      nameWithType:
        CSharp: GameManager.instance
        VB: GameManager.instance
      qualifiedName:
        CSharp: CardBattle.Core.GameManager.instance
        VB: CardBattle.Core.GameManager.instance
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core
      source:
        id: instance
        path: ''
        startLine: 124
      syntax:
        content:
          CSharp: public static GameManager instance
          VB: Public Shared instance As GameManager
        return:
          type: CardBattle.Core.GameManager
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: CardBattle.Core.GameManager.turnManager
      commentId: F:CardBattle.Core.GameManager.turnManager
      language: CSharp
      name:
        CSharp: turnManager
        VB: turnManager
      nameWithType:
        CSharp: GameManager.turnManager
        VB: GameManager.turnManager
      qualifiedName:
        CSharp: CardBattle.Core.GameManager.turnManager
        VB: CardBattle.Core.GameManager.turnManager
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core
      source:
        id: turnManager
        path: ''
        startLine: 125
      syntax:
        content:
          CSharp: public static TurnManager turnManager
          VB: Public Shared turnManager As TurnManager
        return:
          type: TurnManager
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: CardBattle.Core.GameManager.players
      commentId: F:CardBattle.Core.GameManager.players
      language: CSharp
      name:
        CSharp: players
        VB: players
      nameWithType:
        CSharp: GameManager.players
        VB: GameManager.players
      qualifiedName:
        CSharp: CardBattle.Core.GameManager.players
        VB: CardBattle.Core.GameManager.players
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core
      source:
        id: players
        path: ''
        startLine: 127
      syntax:
        content:
          CSharp: public List<Player> players
          VB: Public players As List(Of Player)
        return:
          type: System.Collections.Generic.List{Player}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.GameManager.bot
      commentId: F:CardBattle.Core.GameManager.bot
      language: CSharp
      name:
        CSharp: bot
        VB: bot
      nameWithType:
        CSharp: GameManager.bot
        VB: GameManager.bot
      qualifiedName:
        CSharp: CardBattle.Core.GameManager.bot
        VB: CardBattle.Core.GameManager.bot
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core
      source:
        id: bot
        path: ''
        startLine: 128
      syntax:
        content:
          CSharp: public Bot bot
          VB: Public bot As Bot
        return:
          type: CardBattle.Core.AI.Bot
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.GameManager.Awake
      commentId: M:CardBattle.Core.GameManager.Awake
      language: CSharp
      name:
        CSharp: Awake()
        VB: Awake()
      nameWithType:
        CSharp: GameManager.Awake()
        VB: GameManager.Awake()
      qualifiedName:
        CSharp: CardBattle.Core.GameManager.Awake()
        VB: CardBattle.Core.GameManager.Awake()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core
      source:
        id: Awake
        path: ''
        startLine: 130
      syntax:
        content:
          CSharp: public void Awake()
          VB: Public Sub Awake
      overload: CardBattle.Core.GameManager.Awake*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.GameManager.Start
      commentId: M:CardBattle.Core.GameManager.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: GameManager.Start()
        VB: GameManager.Start()
      qualifiedName:
        CSharp: CardBattle.Core.GameManager.Start()
        VB: CardBattle.Core.GameManager.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core
      source:
        id: Start
        path: ''
        startLine: 138
      syntax:
        content:
          CSharp: public void Start()
          VB: Public Sub Start
      overload: CardBattle.Core.GameManager.Start*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.GameManager.InstantiatePlayers(System.Collections.Generic.List{GameObject})
      commentId: M:CardBattle.Core.GameManager.InstantiatePlayers(System.Collections.Generic.List{GameObject})
      language: CSharp
      name:
        CSharp: InstantiatePlayers(List<GameObject>)
        VB: InstantiatePlayers(List(Of GameObject))
      nameWithType:
        CSharp: GameManager.InstantiatePlayers(List<GameObject>)
        VB: GameManager.InstantiatePlayers(List(Of GameObject))
      qualifiedName:
        CSharp: CardBattle.Core.GameManager.InstantiatePlayers(System.Collections.Generic.List<GameObject>)
        VB: CardBattle.Core.GameManager.InstantiatePlayers(System.Collections.Generic.List(Of GameObject))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core
      source:
        id: InstantiatePlayers
        path: ''
        startLine: 143
      syntax:
        content:
          CSharp: public void InstantiatePlayers(List<GameObject> attachTos)
          VB: Public Sub InstantiatePlayers(attachTos As List(Of GameObject))
        parameters:
        - id: attachTos
          type: System.Collections.Generic.List{GameObject}
      overload: CardBattle.Core.GameManager.InstantiatePlayers*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: CardBattle.Core.GameController
    commentId: T:CardBattle.Core.GameController
    language: CSharp
    name:
      CSharp: GameController
      VB: GameController
    nameWithType:
      CSharp: GameController
      VB: GameController
    qualifiedName:
      CSharp: CardBattle.Core.GameController
      VB: CardBattle.Core.GameController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: CardBattle.Core
    source:
      id: GameController
      path: ''
      startLine: 161
    syntax:
      content:
        CSharp: 'public class GameController : MonoBehaviour'
        VB: >-
          Public Class GameController

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
- id: CardBattle.Core.Actions
  commentId: N:CardBattle.Core.Actions
  language: CSharp
  name:
    CSharp: CardBattle.Core.Actions
    VB: CardBattle.Core.Actions
  nameWithType:
    CSharp: CardBattle.Core.Actions
    VB: CardBattle.Core.Actions
  qualifiedName:
    CSharp: CardBattle.Core.Actions
    VB: CardBattle.Core.Actions
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: CardBattle.Core.Actions.Action
    commentId: T:CardBattle.Core.Actions.Action
    language: CSharp
    name:
      CSharp: Action
      VB: Action
    nameWithType:
      CSharp: Action
      VB: Action
    qualifiedName:
      CSharp: CardBattle.Core.Actions.Action
      VB: CardBattle.Core.Actions.Action
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: CardBattle.Core.Actions
    source:
      id: Action
      path: ''
      startLine: 185
    syntax:
      content:
        CSharp: public abstract class Action
        VB: Public MustInherit Class Action
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: CardBattle.Core.Actions.Action.isOptional
      commentId: F:CardBattle.Core.Actions.Action.isOptional
      language: CSharp
      name:
        CSharp: isOptional
        VB: isOptional
      nameWithType:
        CSharp: Action.isOptional
        VB: Action.isOptional
      qualifiedName:
        CSharp: CardBattle.Core.Actions.Action.isOptional
        VB: CardBattle.Core.Actions.Action.isOptional
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Actions
      source:
        id: isOptional
        path: ''
        startLine: 187
      syntax:
        content:
          CSharp: public readonly bool isOptional
          VB: Public ReadOnly isOptional As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        - readonly
        VB:
        - Public
        - ReadOnly
    - id: CardBattle.Core.Actions.Action.#ctor
      commentId: M:CardBattle.Core.Actions.Action.#ctor
      language: CSharp
      name:
        CSharp: Action()
        VB: Action()
      nameWithType:
        CSharp: Action.Action()
        VB: Action.Action()
      qualifiedName:
        CSharp: CardBattle.Core.Actions.Action.Action()
        VB: CardBattle.Core.Actions.Action.Action()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Actions
      source:
        id: .ctor
        path: ''
        startLine: 192
      summary: "\nAutomatically sets the action&apos;s optionality to false\n"
      example: []
      syntax:
        content:
          CSharp: public Action()
          VB: Public Sub New
      overload: CardBattle.Core.Actions.Action.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Actions.Action.#ctor(System.Boolean)
      commentId: M:CardBattle.Core.Actions.Action.#ctor(System.Boolean)
      language: CSharp
      name:
        CSharp: Action(Boolean)
        VB: Action(Boolean)
      nameWithType:
        CSharp: Action.Action(Boolean)
        VB: Action.Action(Boolean)
      qualifiedName:
        CSharp: CardBattle.Core.Actions.Action.Action(System.Boolean)
        VB: CardBattle.Core.Actions.Action.Action(System.Boolean)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Actions
      source:
        id: .ctor
        path: ''
        startLine: 196
      syntax:
        content:
          CSharp: public Action(bool isOptional)
          VB: Public Sub New(isOptional As Boolean)
        parameters:
        - id: isOptional
          type: System.Boolean
      overload: CardBattle.Core.Actions.Action.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Actions.Action.Execute
      commentId: M:CardBattle.Core.Actions.Action.Execute
      language: CSharp
      name:
        CSharp: Execute()
        VB: Execute()
      nameWithType:
        CSharp: Action.Execute()
        VB: Action.Execute()
      qualifiedName:
        CSharp: CardBattle.Core.Actions.Action.Execute()
        VB: CardBattle.Core.Actions.Action.Execute()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Actions
      source:
        id: Execute
        path: ''
        startLine: 201
      syntax:
        content:
          CSharp: public abstract void Execute()
          VB: Public MustOverride Sub Execute
      overload: CardBattle.Core.Actions.Action.Execute*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
- id: CardBattle.Core.Actions.Derived
  commentId: N:CardBattle.Core.Actions.Derived
  language: CSharp
  name:
    CSharp: CardBattle.Core.Actions.Derived
    VB: CardBattle.Core.Actions.Derived
  nameWithType:
    CSharp: CardBattle.Core.Actions.Derived
    VB: CardBattle.Core.Actions.Derived
  qualifiedName:
    CSharp: CardBattle.Core.Actions.Derived
    VB: CardBattle.Core.Actions.Derived
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: CardBattle.Core.Actions.Derived.Card
    commentId: T:CardBattle.Core.Actions.Derived.Card
    language: CSharp
    name:
      CSharp: Card
      VB: Card
    nameWithType:
      CSharp: Card
      VB: Card
    qualifiedName:
      CSharp: CardBattle.Core.Actions.Derived.Card
      VB: CardBattle.Core.Actions.Derived.Card
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: CardBattle.Core.Actions.Derived
    source:
      id: Card
      path: ''
      startLine: 211
    syntax:
      content:
        CSharp: public class Card
        VB: Public Class Card
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: CardBattle.Core.Actions.Derived.Card.CardTitle
      commentId: P:CardBattle.Core.Actions.Derived.Card.CardTitle
      language: CSharp
      name:
        CSharp: CardTitle
        VB: CardTitle
      nameWithType:
        CSharp: Card.CardTitle
        VB: Card.CardTitle
      qualifiedName:
        CSharp: CardBattle.Core.Actions.Derived.Card.CardTitle
        VB: CardBattle.Core.Actions.Derived.Card.CardTitle
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Actions.Derived
      source:
        id: CardTitle
        path: ''
        startLine: 218
      syntax:
        content:
          CSharp: public string CardTitle { get; }
          VB: Public ReadOnly Property CardTitle As String
        parameters: []
        return:
          type: System.String
      overload: CardBattle.Core.Actions.Derived.Card.CardTitle*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: CardBattle.Core.Actions.Derived.Card.Description
      commentId: P:CardBattle.Core.Actions.Derived.Card.Description
      language: CSharp
      name:
        CSharp: Description
        VB: Description
      nameWithType:
        CSharp: Card.Description
        VB: Card.Description
      qualifiedName:
        CSharp: CardBattle.Core.Actions.Derived.Card.Description
        VB: CardBattle.Core.Actions.Derived.Card.Description
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Actions.Derived
      source:
        id: Description
        path: ''
        startLine: 219
      syntax:
        content:
          CSharp: public string Description { get; }
          VB: Public ReadOnly Property Description As String
        parameters: []
        return:
          type: System.String
      overload: CardBattle.Core.Actions.Derived.Card.Description*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: CardBattle.Core.Actions.Derived.Card.Materials
      commentId: P:CardBattle.Core.Actions.Derived.Card.Materials
      language: CSharp
      name:
        CSharp: Materials
        VB: Materials
      nameWithType:
        CSharp: Card.Materials
        VB: Card.Materials
      qualifiedName:
        CSharp: CardBattle.Core.Actions.Derived.Card.Materials
        VB: CardBattle.Core.Actions.Derived.Card.Materials
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Actions.Derived
      source:
        id: Materials
        path: ''
        startLine: 221
      syntax:
        content:
          CSharp: public List<Material> Materials { get; }
          VB: Public ReadOnly Property Materials As List(Of Material)
        parameters: []
        return:
          type: System.Collections.Generic.List{Material}
      overload: CardBattle.Core.Actions.Derived.Card.Materials*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: CardBattle.Core.Actions.Derived.Card.#ctor(System.String,CardBattle.Core.Actions.Action,System.Collections.Generic.List{Material})
      commentId: M:CardBattle.Core.Actions.Derived.Card.#ctor(System.String,CardBattle.Core.Actions.Action,System.Collections.Generic.List{Material})
      language: CSharp
      name:
        CSharp: Card(String, Action, List<Material>)
        VB: Card(String, Action, List(Of Material))
      nameWithType:
        CSharp: Card.Card(String, Action, List<Material>)
        VB: Card.Card(String, Action, List(Of Material))
      qualifiedName:
        CSharp: CardBattle.Core.Actions.Derived.Card.Card(System.String, CardBattle.Core.Actions.Action, System.Collections.Generic.List<Material>)
        VB: CardBattle.Core.Actions.Derived.Card.Card(System.String, CardBattle.Core.Actions.Action, System.Collections.Generic.List(Of Material))
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Actions.Derived
      source:
        id: .ctor
        path: ''
        startLine: 233
      syntax:
        content:
          CSharp: public Card(string cardTitle, Action action, List<Material> materials)
          VB: Public Sub New(cardTitle As String, action As Action, materials As List(Of Material))
        parameters:
        - id: cardTitle
          type: System.String
        - id: action
          type: CardBattle.Core.Actions.Action
        - id: materials
          type: System.Collections.Generic.List{Material}
      overload: CardBattle.Core.Actions.Derived.Card.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Actions.Derived.Card.Execute
      commentId: M:CardBattle.Core.Actions.Derived.Card.Execute
      language: CSharp
      name:
        CSharp: Execute()
        VB: Execute()
      nameWithType:
        CSharp: Card.Execute()
        VB: Card.Execute()
      qualifiedName:
        CSharp: CardBattle.Core.Actions.Derived.Card.Execute()
        VB: CardBattle.Core.Actions.Derived.Card.Execute()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Actions.Derived
      source:
        id: Execute
        path: ''
        startLine: 240
      syntax:
        content:
          CSharp: public void Execute()
          VB: Public Sub Execute
      overload: CardBattle.Core.Actions.Derived.Card.Execute*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: CardBattle.Core.Actions.Derived.CardStack`1
    commentId: T:CardBattle.Core.Actions.Derived.CardStack`1
    language: CSharp
    name:
      CSharp: CardStack<T>
      VB: CardStack(Of T)
    nameWithType:
      CSharp: CardStack<T>
      VB: CardStack(Of T)
    qualifiedName:
      CSharp: CardBattle.Core.Actions.Derived.CardStack<T>
      VB: CardBattle.Core.Actions.Derived.CardStack(Of T)
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: CardBattle.Core.Actions.Derived
    source:
      id: CardStack
      path: ''
      startLine: 251
    syntax:
      content:
        CSharp: 'public class CardStack<T> : Action where T : Card'
        VB: >-
          Public Class CardStack(Of T As Card)

              Inherits Action
      typeParameters:
      - id: T
    inheritance:
    - System.Object
    - CardBattle.Core.Actions.Action
    inheritedMembers:
    - CardBattle.Core.Actions.Action.isOptional
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: CardBattle.Core.Actions.Derived.CardStack`1.#ctor(System.Collections.Generic.List{`0},System.Boolean)
      commentId: M:CardBattle.Core.Actions.Derived.CardStack`1.#ctor(System.Collections.Generic.List{`0},System.Boolean)
      language: CSharp
      name:
        CSharp: CardStack(List<T>, Boolean)
        VB: CardStack(List(Of T), Boolean)
      nameWithType:
        CSharp: CardStack<T>.CardStack(List<T>, Boolean)
        VB: CardStack(Of T).CardStack(List(Of T), Boolean)
      qualifiedName:
        CSharp: CardBattle.Core.Actions.Derived.CardStack<T>.CardStack(System.Collections.Generic.List<T>, System.Boolean)
        VB: CardBattle.Core.Actions.Derived.CardStack(Of T).CardStack(System.Collections.Generic.List(Of T), System.Boolean)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Actions.Derived
      source:
        id: .ctor
        path: ''
        startLine: 255
      syntax:
        content:
          CSharp: public CardStack(List<T> cards, bool isOptional = false)
          VB: Public Sub New(cards As List(Of T), isOptional As Boolean = False)
        parameters:
        - id: cards
          type: System.Collections.Generic.List{{T}}
        - id: isOptional
          type: System.Boolean
      overload: CardBattle.Core.Actions.Derived.CardStack`1.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Actions.Derived.CardStack`1.Shuffle
      commentId: M:CardBattle.Core.Actions.Derived.CardStack`1.Shuffle
      language: CSharp
      name:
        CSharp: Shuffle()
        VB: Shuffle()
      nameWithType:
        CSharp: CardStack<T>.Shuffle()
        VB: CardStack(Of T).Shuffle()
      qualifiedName:
        CSharp: CardBattle.Core.Actions.Derived.CardStack<T>.Shuffle()
        VB: CardBattle.Core.Actions.Derived.CardStack(Of T).Shuffle()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Actions.Derived
      source:
        id: Shuffle
        path: ''
        startLine: 264
      summary: "\nShuffles this stack of cards\n"
      example: []
      syntax:
        content:
          CSharp: public List<T> Shuffle()
          VB: Public Function Shuffle As List(Of T)
        return:
          type: System.Collections.Generic.List{{T}}
          description: Returns this stack shuffled
      overload: CardBattle.Core.Actions.Derived.CardStack`1.Shuffle*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Actions.Derived.CardStack`1.Shuffle(System.Collections.Generic.List{`0})
      commentId: M:CardBattle.Core.Actions.Derived.CardStack`1.Shuffle(System.Collections.Generic.List{`0})
      language: CSharp
      name:
        CSharp: Shuffle(List<T>)
        VB: Shuffle(List(Of T))
      nameWithType:
        CSharp: CardStack<T>.Shuffle(List<T>)
        VB: CardStack(Of T).Shuffle(List(Of T))
      qualifiedName:
        CSharp: CardBattle.Core.Actions.Derived.CardStack<T>.Shuffle(System.Collections.Generic.List<T>)
        VB: CardBattle.Core.Actions.Derived.CardStack(Of T).Shuffle(System.Collections.Generic.List(Of T))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Actions.Derived
      source:
        id: Shuffle
        path: ''
        startLine: 281
      summary: "\nShuffles the stack of cards (<code data-dev-comment-type=\"paramref\" class=\"paramref\">cards</code>) inputted.\n"
      example: []
      syntax:
        content:
          CSharp: public List<T> Shuffle(List<T> cards)
          VB: Public Function Shuffle(cards As List(Of T)) As List(Of T)
        parameters:
        - id: cards
          type: System.Collections.Generic.List{{T}}
          description: ''
        return:
          type: System.Collections.Generic.List{{T}}
          description: Return the shuffled stack of cards
      overload: CardBattle.Core.Actions.Derived.CardStack`1.Shuffle*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Actions.Derived.CardStack`1.DrawCard
      commentId: M:CardBattle.Core.Actions.Derived.CardStack`1.DrawCard
      language: CSharp
      name:
        CSharp: DrawCard()
        VB: DrawCard()
      nameWithType:
        CSharp: CardStack<T>.DrawCard()
        VB: CardStack(Of T).DrawCard()
      qualifiedName:
        CSharp: CardBattle.Core.Actions.Derived.CardStack<T>.DrawCard()
        VB: CardBattle.Core.Actions.Derived.CardStack(Of T).DrawCard()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Actions.Derived
      source:
        id: DrawCard
        path: ''
        startLine: 298
      summary: "\nDraws a card and puts it back under the stack of cards\n"
      example: []
      syntax:
        content:
          CSharp: public T DrawCard()
          VB: Public Function DrawCard As T
        return:
          type: '{T}'
          description: Returns the card that was drawn.
      overload: CardBattle.Core.Actions.Derived.CardStack`1.DrawCard*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Actions.Derived.CardStack`1.Execute
      commentId: M:CardBattle.Core.Actions.Derived.CardStack`1.Execute
      language: CSharp
      name:
        CSharp: Execute()
        VB: Execute()
      nameWithType:
        CSharp: CardStack<T>.Execute()
        VB: CardStack(Of T).Execute()
      qualifiedName:
        CSharp: CardBattle.Core.Actions.Derived.CardStack<T>.Execute()
        VB: CardBattle.Core.Actions.Derived.CardStack(Of T).Execute()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Actions.Derived
      source:
        id: Execute
        path: ''
        startLine: 309
      summary: "\nDraws a card and executes the card\n"
      example: []
      syntax:
        content:
          CSharp: public override void Execute()
          VB: Public Overrides Sub Execute
      overload: CardBattle.Core.Actions.Derived.CardStack`1.Execute*
      overridden: CardBattle.Core.Actions.Action.Execute
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: CardBattle.Core.Actions.Derived.ColorDice
    commentId: T:CardBattle.Core.Actions.Derived.ColorDice
    language: CSharp
    name:
      CSharp: ColorDice
      VB: ColorDice
    nameWithType:
      CSharp: ColorDice
      VB: ColorDice
    qualifiedName:
      CSharp: CardBattle.Core.Actions.Derived.ColorDice
      VB: CardBattle.Core.Actions.Derived.ColorDice
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: CardBattle.Core.Actions.Derived
    source:
      id: ColorDice
      path: ''
      startLine: 325
    syntax:
      content:
        CSharp: 'public class ColorDice : Action'
        VB: >-
          Public Class ColorDice

              Inherits Action
    inheritance:
    - System.Object
    - CardBattle.Core.Actions.Action
    inheritedMembers:
    - CardBattle.Core.Actions.Action.isOptional
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: CardBattle.Core.Actions.Derived.ColorDice.#ctor
      commentId: M:CardBattle.Core.Actions.Derived.ColorDice.#ctor
      language: CSharp
      name:
        CSharp: ColorDice()
        VB: ColorDice()
      nameWithType:
        CSharp: ColorDice.ColorDice()
        VB: ColorDice.ColorDice()
      qualifiedName:
        CSharp: CardBattle.Core.Actions.Derived.ColorDice.ColorDice()
        VB: CardBattle.Core.Actions.Derived.ColorDice.ColorDice()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Actions.Derived
      source:
        id: .ctor
        path: ''
        startLine: 330
      syntax:
        content:
          CSharp: public ColorDice()
          VB: Public Sub New
      overload: CardBattle.Core.Actions.Derived.ColorDice.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Actions.Derived.ColorDice.Execute
      commentId: M:CardBattle.Core.Actions.Derived.ColorDice.Execute
      language: CSharp
      name:
        CSharp: Execute()
        VB: Execute()
      nameWithType:
        CSharp: ColorDice.Execute()
        VB: ColorDice.Execute()
      qualifiedName:
        CSharp: CardBattle.Core.Actions.Derived.ColorDice.Execute()
        VB: CardBattle.Core.Actions.Derived.ColorDice.Execute()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Actions.Derived
      source:
        id: Execute
        path: ''
        startLine: 337
      syntax:
        content:
          CSharp: public override void Execute()
          VB: Public Overrides Sub Execute
      overload: CardBattle.Core.Actions.Derived.ColorDice.Execute*
      overridden: CardBattle.Core.Actions.Action.Execute
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: CardBattle.Core.Actions.Derived.Dice
    commentId: T:CardBattle.Core.Actions.Derived.Dice
    language: CSharp
    name:
      CSharp: Dice
      VB: Dice
    nameWithType:
      CSharp: Dice
      VB: Dice
    qualifiedName:
      CSharp: CardBattle.Core.Actions.Derived.Dice
      VB: CardBattle.Core.Actions.Derived.Dice
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: CardBattle.Core.Actions.Derived
    source:
      id: Dice
      path: ''
      startLine: 397
    syntax:
      content:
        CSharp: 'public class Dice : Action'
        VB: >-
          Public Class Dice

              Inherits Action
    inheritance:
    - System.Object
    - CardBattle.Core.Actions.Action
    inheritedMembers:
    - CardBattle.Core.Actions.Action.isOptional
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: CardBattle.Core.Actions.Derived.Dice.actions
      commentId: F:CardBattle.Core.Actions.Derived.Dice.actions
      language: CSharp
      name:
        CSharp: actions
        VB: actions
      nameWithType:
        CSharp: Dice.actions
        VB: Dice.actions
      qualifiedName:
        CSharp: CardBattle.Core.Actions.Derived.Dice.actions
        VB: CardBattle.Core.Actions.Derived.Dice.actions
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Actions.Derived
      source:
        id: actions
        path: ''
        startLine: 399
      syntax:
        content:
          CSharp: protected Action[] actions
          VB: Protected actions As Action()
        return:
          type: CardBattle.Core.Actions.Action[]
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: CardBattle.Core.Actions.Derived.Dice.#ctor(System.Boolean)
      commentId: M:CardBattle.Core.Actions.Derived.Dice.#ctor(System.Boolean)
      language: CSharp
      name:
        CSharp: Dice(Boolean)
        VB: Dice(Boolean)
      nameWithType:
        CSharp: Dice.Dice(Boolean)
        VB: Dice.Dice(Boolean)
      qualifiedName:
        CSharp: CardBattle.Core.Actions.Derived.Dice.Dice(System.Boolean)
        VB: CardBattle.Core.Actions.Derived.Dice.Dice(System.Boolean)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Actions.Derived
      source:
        id: .ctor
        path: ''
        startLine: 401
      syntax:
        content:
          CSharp: public Dice(bool isOptional = false)
          VB: Public Sub New(isOptional As Boolean = False)
        parameters:
        - id: isOptional
          type: System.Boolean
      overload: CardBattle.Core.Actions.Derived.Dice.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Actions.Derived.Dice.#ctor(CardBattle.Core.Actions.Action[],System.Boolean)
      commentId: M:CardBattle.Core.Actions.Derived.Dice.#ctor(CardBattle.Core.Actions.Action[],System.Boolean)
      language: CSharp
      name:
        CSharp: Dice(Action[], Boolean)
        VB: Dice(Action(), Boolean)
      nameWithType:
        CSharp: Dice.Dice(Action[], Boolean)
        VB: Dice.Dice(Action(), Boolean)
      qualifiedName:
        CSharp: CardBattle.Core.Actions.Derived.Dice.Dice(CardBattle.Core.Actions.Action[], System.Boolean)
        VB: CardBattle.Core.Actions.Derived.Dice.Dice(CardBattle.Core.Actions.Action(), System.Boolean)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Actions.Derived
      source:
        id: .ctor
        path: ''
        startLine: 406
      syntax:
        content:
          CSharp: public Dice(Action[] actions, bool isOptional = false)
          VB: Public Sub New(actions As Action(), isOptional As Boolean = False)
        parameters:
        - id: actions
          type: CardBattle.Core.Actions.Action[]
        - id: isOptional
          type: System.Boolean
      overload: CardBattle.Core.Actions.Derived.Dice.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Actions.Derived.Dice.Throw
      commentId: M:CardBattle.Core.Actions.Derived.Dice.Throw
      language: CSharp
      name:
        CSharp: Throw()
        VB: Throw()
      nameWithType:
        CSharp: Dice.Throw()
        VB: Dice.Throw()
      qualifiedName:
        CSharp: CardBattle.Core.Actions.Derived.Dice.Throw()
        VB: CardBattle.Core.Actions.Derived.Dice.Throw()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Actions.Derived
      source:
        id: Throw
        path: ''
        startLine: 412
      syntax:
        content:
          CSharp: public int Throw()
          VB: Public Function Throw As Integer
        return:
          type: System.Int32
      overload: CardBattle.Core.Actions.Derived.Dice.Throw*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Actions.Derived.Dice.Execute
      commentId: M:CardBattle.Core.Actions.Derived.Dice.Execute
      language: CSharp
      name:
        CSharp: Execute()
        VB: Execute()
      nameWithType:
        CSharp: Dice.Execute()
        VB: Dice.Execute()
      qualifiedName:
        CSharp: CardBattle.Core.Actions.Derived.Dice.Execute()
        VB: CardBattle.Core.Actions.Derived.Dice.Execute()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Actions.Derived
      source:
        id: Execute
        path: ''
        startLine: 418
      syntax:
        content:
          CSharp: public override void Execute()
          VB: Public Overrides Sub Execute
      overload: CardBattle.Core.Actions.Derived.Dice.Execute*
      overridden: CardBattle.Core.Actions.Action.Execute
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: CardBattle.Core.Actions.Derived.DiceBox
    commentId: T:CardBattle.Core.Actions.Derived.DiceBox
    language: CSharp
    name:
      CSharp: DiceBox
      VB: DiceBox
    nameWithType:
      CSharp: DiceBox
      VB: DiceBox
    qualifiedName:
      CSharp: CardBattle.Core.Actions.Derived.DiceBox
      VB: CardBattle.Core.Actions.Derived.DiceBox
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: CardBattle.Core.Actions.Derived
    source:
      id: DiceBox
      path: ''
      startLine: 431
    syntax:
      content:
        CSharp: 'public class DiceBox : Action'
        VB: >-
          Public Class DiceBox

              Inherits Action
    inheritance:
    - System.Object
    - CardBattle.Core.Actions.Action
    inheritedMembers:
    - CardBattle.Core.Actions.Action.isOptional
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: CardBattle.Core.Actions.Derived.DiceBox.OnThrow
      commentId: F:CardBattle.Core.Actions.Derived.DiceBox.OnThrow
      language: CSharp
      name:
        CSharp: OnThrow
        VB: OnThrow
      nameWithType:
        CSharp: DiceBox.OnThrow
        VB: DiceBox.OnThrow
      qualifiedName:
        CSharp: CardBattle.Core.Actions.Derived.DiceBox.OnThrow
        VB: CardBattle.Core.Actions.Derived.DiceBox.OnThrow
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Actions.Derived
      source:
        id: OnThrow
        path: ''
        startLine: 433
      syntax:
        content:
          CSharp: public UnityEvent<int> OnThrow
          VB: Public OnThrow As UnityEvent(Of Integer)
        return:
          type: UnityEvent{System.Int32}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Actions.Derived.DiceBox.#ctor(System.Int32,System.Boolean)
      commentId: M:CardBattle.Core.Actions.Derived.DiceBox.#ctor(System.Int32,System.Boolean)
      language: CSharp
      name:
        CSharp: DiceBox(Int32, Boolean)
        VB: DiceBox(Int32, Boolean)
      nameWithType:
        CSharp: DiceBox.DiceBox(Int32, Boolean)
        VB: DiceBox.DiceBox(Int32, Boolean)
      qualifiedName:
        CSharp: CardBattle.Core.Actions.Derived.DiceBox.DiceBox(System.Int32, System.Boolean)
        VB: CardBattle.Core.Actions.Derived.DiceBox.DiceBox(System.Int32, System.Boolean)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Actions.Derived
      source:
        id: .ctor
        path: ''
        startLine: 436
      syntax:
        content:
          CSharp: public DiceBox(int diceAmount, bool isOptional = false)
          VB: Public Sub New(diceAmount As Integer, isOptional As Boolean = False)
        parameters:
        - id: diceAmount
          type: System.Int32
        - id: isOptional
          type: System.Boolean
      overload: CardBattle.Core.Actions.Derived.DiceBox.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Actions.Derived.DiceBox.Execute
      commentId: M:CardBattle.Core.Actions.Derived.DiceBox.Execute
      language: CSharp
      name:
        CSharp: Execute()
        VB: Execute()
      nameWithType:
        CSharp: DiceBox.Execute()
        VB: DiceBox.Execute()
      qualifiedName:
        CSharp: CardBattle.Core.Actions.Derived.DiceBox.Execute()
        VB: CardBattle.Core.Actions.Derived.DiceBox.Execute()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Actions.Derived
      source:
        id: Execute
        path: ''
        startLine: 444
      syntax:
        content:
          CSharp: public override void Execute()
          VB: Public Overrides Sub Execute
      overload: CardBattle.Core.Actions.Derived.DiceBox.Execute*
      overridden: CardBattle.Core.Actions.Action.Execute
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: CardBattle.Core.Actions.Derived.FinanceAction
    commentId: T:CardBattle.Core.Actions.Derived.FinanceAction
    language: CSharp
    name:
      CSharp: FinanceAction
      VB: FinanceAction
    nameWithType:
      CSharp: FinanceAction
      VB: FinanceAction
    qualifiedName:
      CSharp: CardBattle.Core.Actions.Derived.FinanceAction
      VB: CardBattle.Core.Actions.Derived.FinanceAction
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: CardBattle.Core.Actions.Derived
    source:
      id: FinanceAction
      path: ''
      startLine: 463
    syntax:
      content:
        CSharp: 'public class FinanceAction : Action'
        VB: >-
          Public Class FinanceAction

              Inherits Action
    inheritance:
    - System.Object
    - CardBattle.Core.Actions.Action
    inheritedMembers:
    - CardBattle.Core.Actions.Action.isOptional
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: CardBattle.Core.Actions.Derived.FinanceAction.multiplier
      commentId: F:CardBattle.Core.Actions.Derived.FinanceAction.multiplier
      language: CSharp
      name:
        CSharp: multiplier
        VB: multiplier
      nameWithType:
        CSharp: FinanceAction.multiplier
        VB: FinanceAction.multiplier
      qualifiedName:
        CSharp: CardBattle.Core.Actions.Derived.FinanceAction.multiplier
        VB: CardBattle.Core.Actions.Derived.FinanceAction.multiplier
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Actions.Derived
      source:
        id: multiplier
        path: ''
        startLine: 465
      syntax:
        content:
          CSharp: public MULTIPLIER multiplier
          VB: Public multiplier As MULTIPLIER
        return:
          type: CardBattle.Core.MULTIPLIER
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Actions.Derived.FinanceAction.additionalMoney
      commentId: F:CardBattle.Core.Actions.Derived.FinanceAction.additionalMoney
      language: CSharp
      name:
        CSharp: additionalMoney
        VB: additionalMoney
      nameWithType:
        CSharp: FinanceAction.additionalMoney
        VB: FinanceAction.additionalMoney
      qualifiedName:
        CSharp: CardBattle.Core.Actions.Derived.FinanceAction.additionalMoney
        VB: CardBattle.Core.Actions.Derived.FinanceAction.additionalMoney
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Actions.Derived
      source:
        id: additionalMoney
        path: ''
        startLine: 466
      syntax:
        content:
          CSharp: public int additionalMoney
          VB: Public additionalMoney As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Actions.Derived.FinanceAction.enemyAdditionalMoney
      commentId: F:CardBattle.Core.Actions.Derived.FinanceAction.enemyAdditionalMoney
      language: CSharp
      name:
        CSharp: enemyAdditionalMoney
        VB: enemyAdditionalMoney
      nameWithType:
        CSharp: FinanceAction.enemyAdditionalMoney
        VB: FinanceAction.enemyAdditionalMoney
      qualifiedName:
        CSharp: CardBattle.Core.Actions.Derived.FinanceAction.enemyAdditionalMoney
        VB: CardBattle.Core.Actions.Derived.FinanceAction.enemyAdditionalMoney
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Actions.Derived
      source:
        id: enemyAdditionalMoney
        path: ''
        startLine: 467
      syntax:
        content:
          CSharp: public int enemyAdditionalMoney
          VB: Public enemyAdditionalMoney As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Actions.Derived.FinanceAction.stealMoney
      commentId: F:CardBattle.Core.Actions.Derived.FinanceAction.stealMoney
      language: CSharp
      name:
        CSharp: stealMoney
        VB: stealMoney
      nameWithType:
        CSharp: FinanceAction.stealMoney
        VB: FinanceAction.stealMoney
      qualifiedName:
        CSharp: CardBattle.Core.Actions.Derived.FinanceAction.stealMoney
        VB: CardBattle.Core.Actions.Derived.FinanceAction.stealMoney
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Actions.Derived
      source:
        id: stealMoney
        path: ''
        startLine: 468
      syntax:
        content:
          CSharp: public int stealMoney
          VB: Public stealMoney As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Actions.Derived.FinanceAction.enemyMultiplier
      commentId: F:CardBattle.Core.Actions.Derived.FinanceAction.enemyMultiplier
      language: CSharp
      name:
        CSharp: enemyMultiplier
        VB: enemyMultiplier
      nameWithType:
        CSharp: FinanceAction.enemyMultiplier
        VB: FinanceAction.enemyMultiplier
      qualifiedName:
        CSharp: CardBattle.Core.Actions.Derived.FinanceAction.enemyMultiplier
        VB: CardBattle.Core.Actions.Derived.FinanceAction.enemyMultiplier
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Actions.Derived
      source:
        id: enemyMultiplier
        path: ''
        startLine: 469
      syntax:
        content:
          CSharp: public MULTIPLIER enemyMultiplier
          VB: Public enemyMultiplier As MULTIPLIER
        return:
          type: CardBattle.Core.MULTIPLIER
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Actions.Derived.FinanceAction.#ctor(CardBattle.Core.MULTIPLIER,System.Int32,System.Int32,CardBattle.Core.MULTIPLIER,System.Int32,System.Boolean)
      commentId: M:CardBattle.Core.Actions.Derived.FinanceAction.#ctor(CardBattle.Core.MULTIPLIER,System.Int32,System.Int32,CardBattle.Core.MULTIPLIER,System.Int32,System.Boolean)
      language: CSharp
      name:
        CSharp: FinanceAction(MULTIPLIER, Int32, Int32, MULTIPLIER, Int32, Boolean)
        VB: FinanceAction(MULTIPLIER, Int32, Int32, MULTIPLIER, Int32, Boolean)
      nameWithType:
        CSharp: FinanceAction.FinanceAction(MULTIPLIER, Int32, Int32, MULTIPLIER, Int32, Boolean)
        VB: FinanceAction.FinanceAction(MULTIPLIER, Int32, Int32, MULTIPLIER, Int32, Boolean)
      qualifiedName:
        CSharp: CardBattle.Core.Actions.Derived.FinanceAction.FinanceAction(CardBattle.Core.MULTIPLIER, System.Int32, System.Int32, CardBattle.Core.MULTIPLIER, System.Int32, System.Boolean)
        VB: CardBattle.Core.Actions.Derived.FinanceAction.FinanceAction(CardBattle.Core.MULTIPLIER, System.Int32, System.Int32, CardBattle.Core.MULTIPLIER, System.Int32, System.Boolean)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Actions.Derived
      source:
        id: .ctor
        path: ''
        startLine: 480
      summary: "\nOpponent player as enemy\n"
      example: []
      syntax:
        content:
          CSharp: public FinanceAction(MULTIPLIER multiplier = MULTIPLIER.NONE, int additionalMoney = 0, int stealMoney = 0, MULTIPLIER enemyMultiplier = MULTIPLIER.NONE, int enemyAdditionalMoney = 0, bool isOptional = false)
          VB: Public Sub New(multiplier As MULTIPLIER = MULTIPLIER.NONE, additionalMoney As Integer = 0, stealMoney As Integer = 0, enemyMultiplier As MULTIPLIER = MULTIPLIER.NONE, enemyAdditionalMoney As Integer = 0, isOptional As Boolean = False)
        parameters:
        - id: multiplier
          type: CardBattle.Core.MULTIPLIER
          description: ''
        - id: additionalMoney
          type: System.Int32
          description: ''
        - id: stealMoney
          type: System.Int32
          description: ''
        - id: enemyMultiplier
          type: CardBattle.Core.MULTIPLIER
          description: ''
        - id: enemyAdditionalMoney
          type: System.Int32
        - id: isOptional
          type: System.Boolean
      overload: CardBattle.Core.Actions.Derived.FinanceAction.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Actions.Derived.FinanceAction.#ctor(Bot,CardBattle.Core.MULTIPLIER,System.Int32,System.Int32,CardBattle.Core.MULTIPLIER,System.Int32,System.Boolean)
      commentId: M:CardBattle.Core.Actions.Derived.FinanceAction.#ctor(Bot,CardBattle.Core.MULTIPLIER,System.Int32,System.Int32,CardBattle.Core.MULTIPLIER,System.Int32,System.Boolean)
      language: CSharp
      name:
        CSharp: FinanceAction(Bot, MULTIPLIER, Int32, Int32, MULTIPLIER, Int32, Boolean)
        VB: FinanceAction(Bot, MULTIPLIER, Int32, Int32, MULTIPLIER, Int32, Boolean)
      nameWithType:
        CSharp: FinanceAction.FinanceAction(Bot, MULTIPLIER, Int32, Int32, MULTIPLIER, Int32, Boolean)
        VB: FinanceAction.FinanceAction(Bot, MULTIPLIER, Int32, Int32, MULTIPLIER, Int32, Boolean)
      qualifiedName:
        CSharp: CardBattle.Core.Actions.Derived.FinanceAction.FinanceAction(Bot, CardBattle.Core.MULTIPLIER, System.Int32, System.Int32, CardBattle.Core.MULTIPLIER, System.Int32, System.Boolean)
        VB: CardBattle.Core.Actions.Derived.FinanceAction.FinanceAction(Bot, CardBattle.Core.MULTIPLIER, System.Int32, System.Int32, CardBattle.Core.MULTIPLIER, System.Int32, System.Boolean)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Actions.Derived
      source:
        id: .ctor
        path: ''
        startLine: 499
      summary: "\nBot as enemy (Bot of the neutral villages)\n"
      example: []
      syntax:
        content:
          CSharp: public FinanceAction(Bot bot, MULTIPLIER multiplier = MULTIPLIER.NONE, int additionalMoney = 0, int stealMoney = 0, MULTIPLIER enemyMultiplier = MULTIPLIER.NONE, int enemyAdditionalMoney = 0, bool isOptional = false)
          VB: Public Sub New(bot As Bot, multiplier As MULTIPLIER = MULTIPLIER.NONE, additionalMoney As Integer = 0, stealMoney As Integer = 0, enemyMultiplier As MULTIPLIER = MULTIPLIER.NONE, enemyAdditionalMoney As Integer = 0, isOptional As Boolean = False)
        parameters:
        - id: bot
          type: Bot
          description: ''
        - id: multiplier
          type: CardBattle.Core.MULTIPLIER
          description: ''
        - id: additionalMoney
          type: System.Int32
          description: ''
        - id: stealMoney
          type: System.Int32
          description: ''
        - id: enemyMultiplier
          type: CardBattle.Core.MULTIPLIER
          description: ''
        - id: enemyAdditionalMoney
          type: System.Int32
        - id: isOptional
          type: System.Boolean
      overload: CardBattle.Core.Actions.Derived.FinanceAction.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Actions.Derived.FinanceAction.Execute
      commentId: M:CardBattle.Core.Actions.Derived.FinanceAction.Execute
      language: CSharp
      name:
        CSharp: Execute()
        VB: Execute()
      nameWithType:
        CSharp: FinanceAction.Execute()
        VB: FinanceAction.Execute()
      qualifiedName:
        CSharp: CardBattle.Core.Actions.Derived.FinanceAction.Execute()
        VB: CardBattle.Core.Actions.Derived.FinanceAction.Execute()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Actions.Derived
      source:
        id: Execute
        path: ''
        startLine: 510
      syntax:
        content:
          CSharp: public override void Execute()
          VB: Public Overrides Sub Execute
      overload: CardBattle.Core.Actions.Derived.FinanceAction.Execute*
      overridden: CardBattle.Core.Actions.Action.Execute
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: CardBattle.Core.Actions.Derived.FinanceBox
    commentId: T:CardBattle.Core.Actions.Derived.FinanceBox
    language: CSharp
    name:
      CSharp: FinanceBox
      VB: FinanceBox
    nameWithType:
      CSharp: FinanceBox
      VB: FinanceBox
    qualifiedName:
      CSharp: CardBattle.Core.Actions.Derived.FinanceBox
      VB: CardBattle.Core.Actions.Derived.FinanceBox
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: CardBattle.Core.Actions.Derived
    source:
      id: FinanceBox
      path: ''
      startLine: 568
    syntax:
      content:
        CSharp: 'public class FinanceBox : Action'
        VB: >-
          Public Class FinanceBox

              Inherits Action
    inheritance:
    - System.Object
    - CardBattle.Core.Actions.Action
    inheritedMembers:
    - CardBattle.Core.Actions.Action.isOptional
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: CardBattle.Core.Actions.Derived.FinanceBox.financeAction
      commentId: F:CardBattle.Core.Actions.Derived.FinanceBox.financeAction
      language: CSharp
      name:
        CSharp: financeAction
        VB: financeAction
      nameWithType:
        CSharp: FinanceBox.financeAction
        VB: FinanceBox.financeAction
      qualifiedName:
        CSharp: CardBattle.Core.Actions.Derived.FinanceBox.financeAction
        VB: CardBattle.Core.Actions.Derived.FinanceBox.financeAction
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Actions.Derived
      source:
        id: financeAction
        path: ''
        startLine: 579
      summary: "\n<table><tbody><tr></tr><tr></tr><tr></tr></tbody></table>\n"
      example: []
      syntax:
        content:
          CSharp: public FinanceAction financeAction
          VB: Public financeAction As FinanceAction
        return:
          type: CardBattle.Core.Actions.Derived.FinanceAction
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Actions.Derived.FinanceBox.#ctor(CardBattle.Core.Actions.Derived.FinanceAction,System.Boolean)
      commentId: M:CardBattle.Core.Actions.Derived.FinanceBox.#ctor(CardBattle.Core.Actions.Derived.FinanceAction,System.Boolean)
      language: CSharp
      name:
        CSharp: FinanceBox(FinanceAction, Boolean)
        VB: FinanceBox(FinanceAction, Boolean)
      nameWithType:
        CSharp: FinanceBox.FinanceBox(FinanceAction, Boolean)
        VB: FinanceBox.FinanceBox(FinanceAction, Boolean)
      qualifiedName:
        CSharp: CardBattle.Core.Actions.Derived.FinanceBox.FinanceBox(CardBattle.Core.Actions.Derived.FinanceAction, System.Boolean)
        VB: CardBattle.Core.Actions.Derived.FinanceBox.FinanceBox(CardBattle.Core.Actions.Derived.FinanceAction, System.Boolean)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Actions.Derived
      source:
        id: .ctor
        path: ''
        startLine: 590
      summary: "\n<table><tbody><tr></tr><tr></tr><tr></tr></tbody></table>\n"
      example: []
      syntax:
        content:
          CSharp: public FinanceBox(FinanceAction financeAction, bool isOptional = false)
          VB: Public Sub New(financeAction As FinanceAction, isOptional As Boolean = False)
        parameters:
        - id: financeAction
          type: CardBattle.Core.Actions.Derived.FinanceAction
          description: ''
        - id: isOptional
          type: System.Boolean
          description: ''
      overload: CardBattle.Core.Actions.Derived.FinanceBox.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Actions.Derived.FinanceBox.Execute
      commentId: M:CardBattle.Core.Actions.Derived.FinanceBox.Execute
      language: CSharp
      name:
        CSharp: Execute()
        VB: Execute()
      nameWithType:
        CSharp: FinanceBox.Execute()
        VB: FinanceBox.Execute()
      qualifiedName:
        CSharp: CardBattle.Core.Actions.Derived.FinanceBox.Execute()
        VB: CardBattle.Core.Actions.Derived.FinanceBox.Execute()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Actions.Derived
      source:
        id: Execute
        path: ''
        startLine: 597
      syntax:
        content:
          CSharp: public override void Execute()
          VB: Public Overrides Sub Execute
      overload: CardBattle.Core.Actions.Derived.FinanceBox.Execute*
      overridden: CardBattle.Core.Actions.Action.Execute
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
- id: CardBattle.Core.AI
  commentId: N:CardBattle.Core.AI
  language: CSharp
  name:
    CSharp: CardBattle.Core.AI
    VB: CardBattle.Core.AI
  nameWithType:
    CSharp: CardBattle.Core.AI
    VB: CardBattle.Core.AI
  qualifiedName:
    CSharp: CardBattle.Core.AI
    VB: CardBattle.Core.AI
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: CardBattle.Core.AI.Bot
    commentId: T:CardBattle.Core.AI.Bot
    language: CSharp
    name:
      CSharp: Bot
      VB: Bot
    nameWithType:
      CSharp: Bot
      VB: Bot
    qualifiedName:
      CSharp: CardBattle.Core.AI.Bot
      VB: CardBattle.Core.AI.Bot
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: CardBattle.Core.AI
    source:
      id: Bot
      path: ''
      startLine: 618
    syntax:
      content:
        CSharp: 'public class Bot : PlayerStats'
        VB: >-
          Public Class Bot

              Inherits PlayerStats
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: CardBattle.Core.AI.Bot.AddComponentTo(GameObject)
      commentId: M:CardBattle.Core.AI.Bot.AddComponentTo(GameObject)
      language: CSharp
      name:
        CSharp: AddComponentTo(GameObject)
        VB: AddComponentTo(GameObject)
      nameWithType:
        CSharp: Bot.AddComponentTo(GameObject)
        VB: Bot.AddComponentTo(GameObject)
      qualifiedName:
        CSharp: CardBattle.Core.AI.Bot.AddComponentTo(GameObject)
        VB: CardBattle.Core.AI.Bot.AddComponentTo(GameObject)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.AI
      source:
        id: AddComponentTo
        path: ''
        startLine: 621
      syntax:
        content:
          CSharp: public static Bot AddComponentTo(GameObject attachTo)
          VB: Public Shared Function AddComponentTo(attachTo As GameObject) As Bot
        parameters:
        - id: attachTo
          type: GameObject
        return:
          type: CardBattle.Core.AI.Bot
      overload: CardBattle.Core.AI.Bot.AddComponentTo*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: CardBattle.Core.AI.Bot.StartTurn
      commentId: M:CardBattle.Core.AI.Bot.StartTurn
      language: CSharp
      name:
        CSharp: StartTurn()
        VB: StartTurn()
      nameWithType:
        CSharp: Bot.StartTurn()
        VB: Bot.StartTurn()
      qualifiedName:
        CSharp: CardBattle.Core.AI.Bot.StartTurn()
        VB: CardBattle.Core.AI.Bot.StartTurn()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.AI
      source:
        id: StartTurn
        path: ''
        startLine: 629
      syntax:
        content:
          CSharp: public void StartTurn()
          VB: Public Sub StartTurn
      overload: CardBattle.Core.AI.Bot.StartTurn*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: CardBattle.Core.Players
  commentId: N:CardBattle.Core.Players
  language: CSharp
  name:
    CSharp: CardBattle.Core.Players
    VB: CardBattle.Core.Players
  nameWithType:
    CSharp: CardBattle.Core.Players
    VB: CardBattle.Core.Players
  qualifiedName:
    CSharp: CardBattle.Core.Players
    VB: CardBattle.Core.Players
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: CardBattle.Core.Players.Debt
    commentId: T:CardBattle.Core.Players.Debt
    language: CSharp
    name:
      CSharp: Debt
      VB: Debt
    nameWithType:
      CSharp: Debt
      VB: Debt
    qualifiedName:
      CSharp: CardBattle.Core.Players.Debt
      VB: CardBattle.Core.Players.Debt
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: CardBattle.Core.Players
    source:
      id: Debt
      path: ''
      startLine: 637
    syntax:
      content:
        CSharp: public class Debt
        VB: Public Class Debt
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: CardBattle.Core.Players.Debt.Amount
      commentId: P:CardBattle.Core.Players.Debt.Amount
      language: CSharp
      name:
        CSharp: Amount
        VB: Amount
      nameWithType:
        CSharp: Debt.Amount
        VB: Debt.Amount
      qualifiedName:
        CSharp: CardBattle.Core.Players.Debt.Amount
        VB: CardBattle.Core.Players.Debt.Amount
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Players
      source:
        id: Amount
        path: ''
        startLine: 644
      syntax:
        content:
          CSharp: public int Amount { get; }
          VB: Public ReadOnly Property Amount As Integer
        parameters: []
        return:
          type: System.Int32
      overload: CardBattle.Core.Players.Debt.Amount*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: CardBattle.Core.Players.Debt.Time
      commentId: P:CardBattle.Core.Players.Debt.Time
      language: CSharp
      name:
        CSharp: Time
        VB: Time
      nameWithType:
        CSharp: Debt.Time
        VB: Debt.Time
      qualifiedName:
        CSharp: CardBattle.Core.Players.Debt.Time
        VB: CardBattle.Core.Players.Debt.Time
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Players
      source:
        id: Time
        path: ''
        startLine: 645
      syntax:
        content:
          CSharp: public int Time { get; }
          VB: Public ReadOnly Property Time As Integer
        parameters: []
        return:
          type: System.Int32
      overload: CardBattle.Core.Players.Debt.Time*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: CardBattle.Core.Players.Debt.Creditor
      commentId: P:CardBattle.Core.Players.Debt.Creditor
      language: CSharp
      name:
        CSharp: Creditor
        VB: Creditor
      nameWithType:
        CSharp: Debt.Creditor
        VB: Debt.Creditor
      qualifiedName:
        CSharp: CardBattle.Core.Players.Debt.Creditor
        VB: CardBattle.Core.Players.Debt.Creditor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Players
      source:
        id: Creditor
        path: ''
        startLine: 646
      syntax:
        content:
          CSharp: public PlayerStats Creditor { get; }
          VB: Public ReadOnly Property Creditor As PlayerStats
        parameters: []
        return:
          type: CardBattle.Core.Players.PlayerStats
      overload: CardBattle.Core.Players.Debt.Creditor*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: CardBattle.Core.Players.Debt.Debtor
      commentId: P:CardBattle.Core.Players.Debt.Debtor
      language: CSharp
      name:
        CSharp: Debtor
        VB: Debtor
      nameWithType:
        CSharp: Debt.Debtor
        VB: Debt.Debtor
      qualifiedName:
        CSharp: CardBattle.Core.Players.Debt.Debtor
        VB: CardBattle.Core.Players.Debt.Debtor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Players
      source:
        id: Debtor
        path: ''
        startLine: 647
      syntax:
        content:
          CSharp: public PlayerStats Debtor { get; }
          VB: Public ReadOnly Property Debtor As PlayerStats
        parameters: []
        return:
          type: CardBattle.Core.Players.PlayerStats
      overload: CardBattle.Core.Players.Debt.Debtor*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: CardBattle.Core.Players.Debt.#ctor(System.Int32,System.Int32,CardBattle.Core.Players.PlayerStats,CardBattle.Core.Players.PlayerStats)
      commentId: M:CardBattle.Core.Players.Debt.#ctor(System.Int32,System.Int32,CardBattle.Core.Players.PlayerStats,CardBattle.Core.Players.PlayerStats)
      language: CSharp
      name:
        CSharp: Debt(Int32, Int32, PlayerStats, PlayerStats)
        VB: Debt(Int32, Int32, PlayerStats, PlayerStats)
      nameWithType:
        CSharp: Debt.Debt(Int32, Int32, PlayerStats, PlayerStats)
        VB: Debt.Debt(Int32, Int32, PlayerStats, PlayerStats)
      qualifiedName:
        CSharp: CardBattle.Core.Players.Debt.Debt(System.Int32, System.Int32, CardBattle.Core.Players.PlayerStats, CardBattle.Core.Players.PlayerStats)
        VB: CardBattle.Core.Players.Debt.Debt(System.Int32, System.Int32, CardBattle.Core.Players.PlayerStats, CardBattle.Core.Players.PlayerStats)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Players
      source:
        id: .ctor
        path: ''
        startLine: 649
      syntax:
        content:
          CSharp: public Debt(int amount, int time, PlayerStats creditor, PlayerStats debtor)
          VB: Public Sub New(amount As Integer, time As Integer, creditor As PlayerStats, debtor As PlayerStats)
        parameters:
        - id: amount
          type: System.Int32
        - id: time
          type: System.Int32
        - id: creditor
          type: CardBattle.Core.Players.PlayerStats
        - id: debtor
          type: CardBattle.Core.Players.PlayerStats
      overload: CardBattle.Core.Players.Debt.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Players.Debt.#ctor(CardBattle.Core.Players.PlayerStats,CardBattle.Core.Players.PlayerStats)
      commentId: M:CardBattle.Core.Players.Debt.#ctor(CardBattle.Core.Players.PlayerStats,CardBattle.Core.Players.PlayerStats)
      language: CSharp
      name:
        CSharp: Debt(PlayerStats, PlayerStats)
        VB: Debt(PlayerStats, PlayerStats)
      nameWithType:
        CSharp: Debt.Debt(PlayerStats, PlayerStats)
        VB: Debt.Debt(PlayerStats, PlayerStats)
      qualifiedName:
        CSharp: CardBattle.Core.Players.Debt.Debt(CardBattle.Core.Players.PlayerStats, CardBattle.Core.Players.PlayerStats)
        VB: CardBattle.Core.Players.Debt.Debt(CardBattle.Core.Players.PlayerStats, CardBattle.Core.Players.PlayerStats)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Players
      source:
        id: .ctor
        path: ''
        startLine: 657
      syntax:
        content:
          CSharp: public Debt(PlayerStats creditor, PlayerStats debtor)
          VB: Public Sub New(creditor As PlayerStats, debtor As PlayerStats)
        parameters:
        - id: creditor
          type: CardBattle.Core.Players.PlayerStats
        - id: debtor
          type: CardBattle.Core.Players.PlayerStats
      overload: CardBattle.Core.Players.Debt.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Players.Debt.UpdateTime
      commentId: M:CardBattle.Core.Players.Debt.UpdateTime
      language: CSharp
      name:
        CSharp: UpdateTime()
        VB: UpdateTime()
      nameWithType:
        CSharp: Debt.UpdateTime()
        VB: Debt.UpdateTime()
      qualifiedName:
        CSharp: CardBattle.Core.Players.Debt.UpdateTime()
        VB: CardBattle.Core.Players.Debt.UpdateTime()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Players
      source:
        id: UpdateTime
        path: ''
        startLine: 664
      syntax:
        content:
          CSharp: public void UpdateTime()
          VB: Public Sub UpdateTime
      overload: CardBattle.Core.Players.Debt.UpdateTime*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Players.Debt.AddDebt(System.Int32)
      commentId: M:CardBattle.Core.Players.Debt.AddDebt(System.Int32)
      language: CSharp
      name:
        CSharp: AddDebt(Int32)
        VB: AddDebt(Int32)
      nameWithType:
        CSharp: Debt.AddDebt(Int32)
        VB: Debt.AddDebt(Int32)
      qualifiedName:
        CSharp: CardBattle.Core.Players.Debt.AddDebt(System.Int32)
        VB: CardBattle.Core.Players.Debt.AddDebt(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Players
      source:
        id: AddDebt
        path: ''
        startLine: 669
      syntax:
        content:
          CSharp: public void AddDebt(int amount)
          VB: Public Sub AddDebt(amount As Integer)
        parameters:
        - id: amount
          type: System.Int32
      overload: CardBattle.Core.Players.Debt.AddDebt*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Players.Debt.PayDebt
      commentId: M:CardBattle.Core.Players.Debt.PayDebt
      language: CSharp
      name:
        CSharp: PayDebt()
        VB: PayDebt()
      nameWithType:
        CSharp: Debt.PayDebt()
        VB: Debt.PayDebt()
      qualifiedName:
        CSharp: CardBattle.Core.Players.Debt.PayDebt()
        VB: CardBattle.Core.Players.Debt.PayDebt()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Players
      source:
        id: PayDebt
        path: ''
        startLine: 674
      summary: "\nPays the debts\n"
      example: []
      syntax:
        content:
          CSharp: public bool PayDebt()
          VB: Public Function PayDebt As Boolean
        return:
          type: System.Boolean
          description: True if the payment was successful.
      overload: CardBattle.Core.Players.Debt.PayDebt*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: CardBattle.Core.Players.IPlayerStats
    commentId: T:CardBattle.Core.Players.IPlayerStats
    language: CSharp
    name:
      CSharp: IPlayerStats
      VB: IPlayerStats
    nameWithType:
      CSharp: IPlayerStats
      VB: IPlayerStats
    qualifiedName:
      CSharp: CardBattle.Core.Players.IPlayerStats
      VB: CardBattle.Core.Players.IPlayerStats
    type: Interface
    assemblies:
    - cs.temp.dll
    namespace: CardBattle.Core.Players
    source:
      id: IPlayerStats
      path: ''
      startLine: 700
    syntax:
      content:
        CSharp: public interface IPlayerStats
        VB: Public Interface IPlayerStats
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: CardBattle.Core.Players.IPlayerStats.Money
      commentId: P:CardBattle.Core.Players.IPlayerStats.Money
      language: CSharp
      name:
        CSharp: Money
        VB: Money
      nameWithType:
        CSharp: IPlayerStats.Money
        VB: IPlayerStats.Money
      qualifiedName:
        CSharp: CardBattle.Core.Players.IPlayerStats.Money
        VB: CardBattle.Core.Players.IPlayerStats.Money
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Players
      source:
        id: Money
        path: ''
        startLine: 702
      syntax:
        content:
          CSharp: int Money { get; set; }
          VB: Property Money As Integer
        parameters: []
        return:
          type: System.Int32
      overload: CardBattle.Core.Players.IPlayerStats.Money*
      modifiers:
        CSharp:
        - get
        - set
        VB: []
    - id: CardBattle.Core.Players.IPlayerStats.Debts
      commentId: P:CardBattle.Core.Players.IPlayerStats.Debts
      language: CSharp
      name:
        CSharp: Debts
        VB: Debts
      nameWithType:
        CSharp: IPlayerStats.Debts
        VB: IPlayerStats.Debts
      qualifiedName:
        CSharp: CardBattle.Core.Players.IPlayerStats.Debts
        VB: CardBattle.Core.Players.IPlayerStats.Debts
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Players
      source:
        id: Debts
        path: ''
        startLine: 703
      syntax:
        content:
          CSharp: List<Debt> Debts { get; }
          VB: ReadOnly Property Debts As List(Of Debt)
        parameters: []
        return:
          type: System.Collections.Generic.List{CardBattle.Core.Players.Debt}
      overload: CardBattle.Core.Players.IPlayerStats.Debts*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - id: CardBattle.Core.Players.IPlayerStats.VillageCount
      commentId: P:CardBattle.Core.Players.IPlayerStats.VillageCount
      language: CSharp
      name:
        CSharp: VillageCount
        VB: VillageCount
      nameWithType:
        CSharp: IPlayerStats.VillageCount
        VB: IPlayerStats.VillageCount
      qualifiedName:
        CSharp: CardBattle.Core.Players.IPlayerStats.VillageCount
        VB: CardBattle.Core.Players.IPlayerStats.VillageCount
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Players
      source:
        id: VillageCount
        path: ''
        startLine: 704
      syntax:
        content:
          CSharp: int VillageCount { get; }
          VB: ReadOnly Property VillageCount As Integer
        parameters: []
        return:
          type: System.Int32
      overload: CardBattle.Core.Players.IPlayerStats.VillageCount*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - id: CardBattle.Core.Players.IPlayerStats.TownCount
      commentId: P:CardBattle.Core.Players.IPlayerStats.TownCount
      language: CSharp
      name:
        CSharp: TownCount
        VB: TownCount
      nameWithType:
        CSharp: IPlayerStats.TownCount
        VB: IPlayerStats.TownCount
      qualifiedName:
        CSharp: CardBattle.Core.Players.IPlayerStats.TownCount
        VB: CardBattle.Core.Players.IPlayerStats.TownCount
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Players
      source:
        id: TownCount
        path: ''
        startLine: 705
      syntax:
        content:
          CSharp: int TownCount { get; }
          VB: ReadOnly Property TownCount As Integer
        parameters: []
        return:
          type: System.Int32
      overload: CardBattle.Core.Players.IPlayerStats.TownCount*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
  - id: CardBattle.Core.Players.Player
    commentId: T:CardBattle.Core.Players.Player
    language: CSharp
    name:
      CSharp: Player
      VB: Player
    nameWithType:
      CSharp: Player
      VB: Player
    qualifiedName:
      CSharp: CardBattle.Core.Players.Player
      VB: CardBattle.Core.Players.Player
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: CardBattle.Core.Players
    source:
      id: Player
      path: ''
      startLine: 715
    syntax:
      content:
        CSharp: 'public class Player : PlayerStats, IPlayerStats'
        VB: >-
          Public Class Player

              Inherits PlayerStats

              Implements IPlayerStats
    inheritance:
    - System.Object
    - CardBattle.Core.Players.PlayerStats
    implements:
    - CardBattle.Core.Players.IPlayerStats
    inheritedMembers:
    - CardBattle.Core.Players.PlayerStats.debts
    - CardBattle.Core.Players.PlayerStats.revenue
    - CardBattle.Core.Players.PlayerStats.Money
    - CardBattle.Core.Players.PlayerStats.Debts
    - CardBattle.Core.Players.PlayerStats.VillageCount
    - CardBattle.Core.Players.PlayerStats.TownCount
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: CardBattle.Core.Players.Player.isItHisTurn
      commentId: F:CardBattle.Core.Players.Player.isItHisTurn
      language: CSharp
      name:
        CSharp: isItHisTurn
        VB: isItHisTurn
      nameWithType:
        CSharp: Player.isItHisTurn
        VB: Player.isItHisTurn
      qualifiedName:
        CSharp: CardBattle.Core.Players.Player.isItHisTurn
        VB: CardBattle.Core.Players.Player.isItHisTurn
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Players
      source:
        id: isItHisTurn
        path: ''
        startLine: 719
      syntax:
        content:
          CSharp: public bool isItHisTurn
          VB: Public isItHisTurn As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Players.Player.PlayerIndex
      commentId: P:CardBattle.Core.Players.Player.PlayerIndex
      language: CSharp
      name:
        CSharp: PlayerIndex
        VB: PlayerIndex
      nameWithType:
        CSharp: Player.PlayerIndex
        VB: Player.PlayerIndex
      qualifiedName:
        CSharp: CardBattle.Core.Players.Player.PlayerIndex
        VB: CardBattle.Core.Players.Player.PlayerIndex
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Players
      source:
        id: PlayerIndex
        path: ''
        startLine: 721
      syntax:
        content:
          CSharp: public int PlayerIndex { get; }
          VB: Public ReadOnly Property PlayerIndex As Integer
        parameters: []
        return:
          type: System.Int32
      overload: CardBattle.Core.Players.Player.PlayerIndex*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: CardBattle.Core.Players.Player.AddComponentTo(GameObject)
      commentId: M:CardBattle.Core.Players.Player.AddComponentTo(GameObject)
      language: CSharp
      name:
        CSharp: AddComponentTo(GameObject)
        VB: AddComponentTo(GameObject)
      nameWithType:
        CSharp: Player.AddComponentTo(GameObject)
        VB: Player.AddComponentTo(GameObject)
      qualifiedName:
        CSharp: CardBattle.Core.Players.Player.AddComponentTo(GameObject)
        VB: CardBattle.Core.Players.Player.AddComponentTo(GameObject)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Players
      source:
        id: AddComponentTo
        path: ''
        startLine: 723
      syntax:
        content:
          CSharp: public static Player AddComponentTo(GameObject attachTo)
          VB: Public Shared Function AddComponentTo(attachTo As GameObject) As Player
        parameters:
        - id: attachTo
          type: GameObject
        return:
          type: CardBattle.Core.Players.Player
      overload: CardBattle.Core.Players.Player.AddComponentTo*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: CardBattle.Core.Players.PlayerStats
    commentId: T:CardBattle.Core.Players.PlayerStats
    language: CSharp
    name:
      CSharp: PlayerStats
      VB: PlayerStats
    nameWithType:
      CSharp: PlayerStats
      VB: PlayerStats
    qualifiedName:
      CSharp: CardBattle.Core.Players.PlayerStats
      VB: CardBattle.Core.Players.PlayerStats
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: CardBattle.Core.Players
    source:
      id: PlayerStats
      path: ''
      startLine: 740
    syntax:
      content:
        CSharp: 'public class PlayerStats : MonoBehaviour, IPlayerStats'
        VB: >-
          Public Class PlayerStats

              Inherits MonoBehaviour

              Implements IPlayerStats
    inheritance:
    - System.Object
    implements:
    - CardBattle.Core.Players.IPlayerStats
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: CardBattle.Core.Players.PlayerStats.debts
      commentId: F:CardBattle.Core.Players.PlayerStats.debts
      language: CSharp
      name:
        CSharp: debts
        VB: debts
      nameWithType:
        CSharp: PlayerStats.debts
        VB: PlayerStats.debts
      qualifiedName:
        CSharp: CardBattle.Core.Players.PlayerStats.debts
        VB: CardBattle.Core.Players.PlayerStats.debts
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Players
      source:
        id: debts
        path: ''
        startLine: 743
      syntax:
        content:
          CSharp: protected List<Debt> debts
          VB: Protected debts As List(Of Debt)
        return:
          type: System.Collections.Generic.List{CardBattle.Core.Players.Debt}
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: CardBattle.Core.Players.PlayerStats.revenue
      commentId: F:CardBattle.Core.Players.PlayerStats.revenue
      language: CSharp
      name:
        CSharp: revenue
        VB: revenue
      nameWithType:
        CSharp: PlayerStats.revenue
        VB: PlayerStats.revenue
      qualifiedName:
        CSharp: CardBattle.Core.Players.PlayerStats.revenue
        VB: CardBattle.Core.Players.PlayerStats.revenue
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Players
      source:
        id: revenue
        path: ''
        startLine: 747
      syntax:
        content:
          CSharp: public Revenue revenue
          VB: Public revenue As Revenue
        return:
          type: CardBattle.Core.Players.Revenue
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Players.PlayerStats.Money
      commentId: P:CardBattle.Core.Players.PlayerStats.Money
      language: CSharp
      name:
        CSharp: Money
        VB: Money
      nameWithType:
        CSharp: PlayerStats.Money
        VB: PlayerStats.Money
      qualifiedName:
        CSharp: CardBattle.Core.Players.PlayerStats.Money
        VB: CardBattle.Core.Players.PlayerStats.Money
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Players
      source:
        id: Money
        path: ''
        startLine: 749
      syntax:
        content:
          CSharp: public int Money { get; set; }
          VB: Public Property Money As Integer
        parameters: []
        return:
          type: System.Int32
      overload: CardBattle.Core.Players.PlayerStats.Money*
      implements:
      - CardBattle.Core.Players.IPlayerStats.Money
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: CardBattle.Core.Players.PlayerStats.Debts
      commentId: P:CardBattle.Core.Players.PlayerStats.Debts
      language: CSharp
      name:
        CSharp: Debts
        VB: Debts
      nameWithType:
        CSharp: PlayerStats.Debts
        VB: PlayerStats.Debts
      qualifiedName:
        CSharp: CardBattle.Core.Players.PlayerStats.Debts
        VB: CardBattle.Core.Players.PlayerStats.Debts
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Players
      source:
        id: Debts
        path: ''
        startLine: 754
      syntax:
        content:
          CSharp: public List<Debt> Debts { get; }
          VB: Public ReadOnly Property Debts As List(Of Debt)
        parameters: []
        return:
          type: System.Collections.Generic.List{CardBattle.Core.Players.Debt}
      overload: CardBattle.Core.Players.PlayerStats.Debts*
      implements:
      - CardBattle.Core.Players.IPlayerStats.Debts
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: CardBattle.Core.Players.PlayerStats.VillageCount
      commentId: P:CardBattle.Core.Players.PlayerStats.VillageCount
      language: CSharp
      name:
        CSharp: VillageCount
        VB: VillageCount
      nameWithType:
        CSharp: PlayerStats.VillageCount
        VB: PlayerStats.VillageCount
      qualifiedName:
        CSharp: CardBattle.Core.Players.PlayerStats.VillageCount
        VB: CardBattle.Core.Players.PlayerStats.VillageCount
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Players
      source:
        id: VillageCount
        path: ''
        startLine: 759
      syntax:
        content:
          CSharp: public int VillageCount { get; }
          VB: Public ReadOnly Property VillageCount As Integer
        parameters: []
        return:
          type: System.Int32
      overload: CardBattle.Core.Players.PlayerStats.VillageCount*
      implements:
      - CardBattle.Core.Players.IPlayerStats.VillageCount
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: CardBattle.Core.Players.PlayerStats.TownCount
      commentId: P:CardBattle.Core.Players.PlayerStats.TownCount
      language: CSharp
      name:
        CSharp: TownCount
        VB: TownCount
      nameWithType:
        CSharp: PlayerStats.TownCount
        VB: PlayerStats.TownCount
      qualifiedName:
        CSharp: CardBattle.Core.Players.PlayerStats.TownCount
        VB: CardBattle.Core.Players.PlayerStats.TownCount
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Players
      source:
        id: TownCount
        path: ''
        startLine: 760
      syntax:
        content:
          CSharp: public int TownCount { get; }
          VB: Public ReadOnly Property TownCount As Integer
        parameters: []
        return:
          type: System.Int32
      overload: CardBattle.Core.Players.PlayerStats.TownCount*
      implements:
      - CardBattle.Core.Players.IPlayerStats.TownCount
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
  - id: CardBattle.Core.Players.Revenue
    commentId: T:CardBattle.Core.Players.Revenue
    language: CSharp
    name:
      CSharp: Revenue
      VB: Revenue
    nameWithType:
      CSharp: Revenue
      VB: Revenue
    qualifiedName:
      CSharp: CardBattle.Core.Players.Revenue
      VB: CardBattle.Core.Players.Revenue
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: CardBattle.Core.Players
    source:
      id: Revenue
      path: ''
      startLine: 769
    syntax:
      content:
        CSharp: public class Revenue
        VB: Public Class Revenue
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: CardBattle.Core.Players.Revenue.influencers
      commentId: F:CardBattle.Core.Players.Revenue.influencers
      language: CSharp
      name:
        CSharp: influencers
        VB: influencers
      nameWithType:
        CSharp: Revenue.influencers
        VB: Revenue.influencers
      qualifiedName:
        CSharp: CardBattle.Core.Players.Revenue.influencers
        VB: CardBattle.Core.Players.Revenue.influencers
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Players
      source:
        id: influencers
        path: ''
        startLine: 772
      syntax:
        content:
          CSharp: public Dictionary<PlayerStats, int> influencers
          VB: Public influencers As Dictionary(Of PlayerStats, Integer)
        return:
          type: System.Collections.Generic.Dictionary{CardBattle.Core.Players.PlayerStats,System.Int32}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Players.Revenue.additionalIncome
      commentId: F:CardBattle.Core.Players.Revenue.additionalIncome
      language: CSharp
      name:
        CSharp: additionalIncome
        VB: additionalIncome
      nameWithType:
        CSharp: Revenue.additionalIncome
        VB: Revenue.additionalIncome
      qualifiedName:
        CSharp: CardBattle.Core.Players.Revenue.additionalIncome
        VB: CardBattle.Core.Players.Revenue.additionalIncome
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Players
      source:
        id: additionalIncome
        path: ''
        startLine: 775
      syntax:
        content:
          CSharp: public int additionalIncome
          VB: Public additionalIncome As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Players.Revenue.Multiplier
      commentId: P:CardBattle.Core.Players.Revenue.Multiplier
      language: CSharp
      name:
        CSharp: Multiplier
        VB: Multiplier
      nameWithType:
        CSharp: Revenue.Multiplier
        VB: Revenue.Multiplier
      qualifiedName:
        CSharp: CardBattle.Core.Players.Revenue.Multiplier
        VB: CardBattle.Core.Players.Revenue.Multiplier
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Players
      source:
        id: Multiplier
        path: ''
        startLine: 777
      syntax:
        content:
          CSharp: public int Multiplier { get; }
          VB: Public ReadOnly Property Multiplier As Integer
        parameters: []
        return:
          type: System.Int32
      overload: CardBattle.Core.Players.Revenue.Multiplier*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: CardBattle.Core.Players.Revenue.#ctor(CardBattle.Core.Players.PlayerStats)
      commentId: M:CardBattle.Core.Players.Revenue.#ctor(CardBattle.Core.Players.PlayerStats)
      language: CSharp
      name:
        CSharp: Revenue(PlayerStats)
        VB: Revenue(PlayerStats)
      nameWithType:
        CSharp: Revenue.Revenue(PlayerStats)
        VB: Revenue.Revenue(PlayerStats)
      qualifiedName:
        CSharp: CardBattle.Core.Players.Revenue.Revenue(CardBattle.Core.Players.PlayerStats)
        VB: CardBattle.Core.Players.Revenue.Revenue(CardBattle.Core.Players.PlayerStats)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Players
      source:
        id: .ctor
        path: ''
        startLine: 779
      syntax:
        content:
          CSharp: public Revenue(PlayerStats player)
          VB: Public Sub New(player As PlayerStats)
        parameters:
        - id: player
          type: CardBattle.Core.Players.PlayerStats
      overload: CardBattle.Core.Players.Revenue.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Players.Revenue.DoubleMultiplier
      commentId: M:CardBattle.Core.Players.Revenue.DoubleMultiplier
      language: CSharp
      name:
        CSharp: DoubleMultiplier()
        VB: DoubleMultiplier()
      nameWithType:
        CSharp: Revenue.DoubleMultiplier()
        VB: Revenue.DoubleMultiplier()
      qualifiedName:
        CSharp: CardBattle.Core.Players.Revenue.DoubleMultiplier()
        VB: CardBattle.Core.Players.Revenue.DoubleMultiplier()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Players
      source:
        id: DoubleMultiplier
        path: ''
        startLine: 784
      syntax:
        content:
          CSharp: public void DoubleMultiplier()
          VB: Public Sub DoubleMultiplier
      overload: CardBattle.Core.Players.Revenue.DoubleMultiplier*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Players.Revenue.QuadrupleMultiplier
      commentId: M:CardBattle.Core.Players.Revenue.QuadrupleMultiplier
      language: CSharp
      name:
        CSharp: QuadrupleMultiplier()
        VB: QuadrupleMultiplier()
      nameWithType:
        CSharp: Revenue.QuadrupleMultiplier()
        VB: Revenue.QuadrupleMultiplier()
      qualifiedName:
        CSharp: CardBattle.Core.Players.Revenue.QuadrupleMultiplier()
        VB: CardBattle.Core.Players.Revenue.QuadrupleMultiplier()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Players
      source:
        id: QuadrupleMultiplier
        path: ''
        startLine: 785
      syntax:
        content:
          CSharp: public void QuadrupleMultiplier()
          VB: Public Sub QuadrupleMultiplier
      overload: CardBattle.Core.Players.Revenue.QuadrupleMultiplier*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Players.Revenue.ZeroMultiplier
      commentId: M:CardBattle.Core.Players.Revenue.ZeroMultiplier
      language: CSharp
      name:
        CSharp: ZeroMultiplier()
        VB: ZeroMultiplier()
      nameWithType:
        CSharp: Revenue.ZeroMultiplier()
        VB: Revenue.ZeroMultiplier()
      qualifiedName:
        CSharp: CardBattle.Core.Players.Revenue.ZeroMultiplier()
        VB: CardBattle.Core.Players.Revenue.ZeroMultiplier()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Players
      source:
        id: ZeroMultiplier
        path: ''
        startLine: 786
      syntax:
        content:
          CSharp: public void ZeroMultiplier()
          VB: Public Sub ZeroMultiplier
      overload: CardBattle.Core.Players.Revenue.ZeroMultiplier*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Players.Revenue.ResetMultiplier
      commentId: M:CardBattle.Core.Players.Revenue.ResetMultiplier
      language: CSharp
      name:
        CSharp: ResetMultiplier()
        VB: ResetMultiplier()
      nameWithType:
        CSharp: Revenue.ResetMultiplier()
        VB: Revenue.ResetMultiplier()
      qualifiedName:
        CSharp: CardBattle.Core.Players.Revenue.ResetMultiplier()
        VB: CardBattle.Core.Players.Revenue.ResetMultiplier()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Players
      source:
        id: ResetMultiplier
        path: ''
        startLine: 787
      syntax:
        content:
          CSharp: public void ResetMultiplier()
          VB: Public Sub ResetMultiplier
      overload: CardBattle.Core.Players.Revenue.ResetMultiplier*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Players.Revenue.GetRevenue
      commentId: M:CardBattle.Core.Players.Revenue.GetRevenue
      language: CSharp
      name:
        CSharp: GetRevenue()
        VB: GetRevenue()
      nameWithType:
        CSharp: Revenue.GetRevenue()
        VB: Revenue.GetRevenue()
      qualifiedName:
        CSharp: CardBattle.Core.Players.Revenue.GetRevenue()
        VB: CardBattle.Core.Players.Revenue.GetRevenue()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Players
      source:
        id: GetRevenue
        path: ''
        startLine: 801
      syntax:
        content:
          CSharp: public int GetRevenue()
          VB: Public Function GetRevenue As Integer
        return:
          type: System.Int32
      overload: CardBattle.Core.Players.Revenue.GetRevenue*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: CardBattle.Core.Turns
  commentId: N:CardBattle.Core.Turns
  language: CSharp
  name:
    CSharp: CardBattle.Core.Turns
    VB: CardBattle.Core.Turns
  nameWithType:
    CSharp: CardBattle.Core.Turns
    VB: CardBattle.Core.Turns
  qualifiedName:
    CSharp: CardBattle.Core.Turns
    VB: CardBattle.Core.Turns
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: CardBattle.Core.Turns.Turn
    commentId: T:CardBattle.Core.Turns.Turn
    language: CSharp
    name:
      CSharp: Turn
      VB: Turn
    nameWithType:
      CSharp: Turn
      VB: Turn
    qualifiedName:
      CSharp: CardBattle.Core.Turns.Turn
      VB: CardBattle.Core.Turns.Turn
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: CardBattle.Core.Turns
    source:
      id: Turn
      path: ''
      startLine: 893
    syntax:
      content:
        CSharp: public class Turn
        VB: Public Class Turn
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: CardBattle.Core.Turns.Turn.turnActions
      commentId: F:CardBattle.Core.Turns.Turn.turnActions
      language: CSharp
      name:
        CSharp: turnActions
        VB: turnActions
      nameWithType:
        CSharp: Turn.turnActions
        VB: Turn.turnActions
      qualifiedName:
        CSharp: CardBattle.Core.Turns.Turn.turnActions
        VB: CardBattle.Core.Turns.Turn.turnActions
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Turns
      source:
        id: turnActions
        path: ''
        startLine: 896
      syntax:
        content:
          CSharp: public static readonly List<Action> turnActions
          VB: Public Shared ReadOnly turnActions As List(Of Action)
        return:
          type: System.Collections.Generic.List{Action}
      modifiers:
        CSharp:
        - public
        - static
        - readonly
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: CardBattle.Core.Turns.Turn.#ctor(Player)
      commentId: M:CardBattle.Core.Turns.Turn.#ctor(Player)
      language: CSharp
      name:
        CSharp: Turn(Player)
        VB: Turn(Player)
      nameWithType:
        CSharp: Turn.Turn(Player)
        VB: Turn.Turn(Player)
      qualifiedName:
        CSharp: CardBattle.Core.Turns.Turn.Turn(Player)
        VB: CardBattle.Core.Turns.Turn.Turn(Player)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Turns
      source:
        id: .ctor
        path: ''
        startLine: 898
      syntax:
        content:
          CSharp: public Turn(Player player)
          VB: Public Sub New(player As Player)
        parameters:
        - id: player
          type: Player
      overload: CardBattle.Core.Turns.Turn.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Turns.Turn.Reset
      commentId: M:CardBattle.Core.Turns.Turn.Reset
      language: CSharp
      name:
        CSharp: Reset()
        VB: Reset()
      nameWithType:
        CSharp: Turn.Reset()
        VB: Turn.Reset()
      qualifiedName:
        CSharp: CardBattle.Core.Turns.Turn.Reset()
        VB: CardBattle.Core.Turns.Turn.Reset()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Turns
      source:
        id: Reset
        path: ''
        startLine: 904
      syntax:
        content:
          CSharp: public void Reset()
          VB: Public Sub Reset
      overload: CardBattle.Core.Turns.Turn.Reset*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: CardBattle.Core.Turns.TurnManager
    commentId: T:CardBattle.Core.Turns.TurnManager
    language: CSharp
    name:
      CSharp: TurnManager
      VB: TurnManager
    nameWithType:
      CSharp: TurnManager
      VB: TurnManager
    qualifiedName:
      CSharp: CardBattle.Core.Turns.TurnManager
      VB: CardBattle.Core.Turns.TurnManager
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: CardBattle.Core.Turns
    source:
      id: TurnManager
      path: ''
      startLine: 923
    syntax:
      content:
        CSharp: 'public class TurnManager : MonoBehaviour'
        VB: >-
          Public Class TurnManager

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: CardBattle.Core.Turns.TurnManager.financeCards
      commentId: F:CardBattle.Core.Turns.TurnManager.financeCards
      language: CSharp
      name:
        CSharp: financeCards
        VB: financeCards
      nameWithType:
        CSharp: TurnManager.financeCards
        VB: TurnManager.financeCards
      qualifiedName:
        CSharp: CardBattle.Core.Turns.TurnManager.financeCards
        VB: CardBattle.Core.Turns.TurnManager.financeCards
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Turns
      source:
        id: financeCards
        path: ''
        startLine: 925
      syntax:
        content:
          CSharp: public CardStack<Card> financeCards
          VB: Public financeCards As CardStack(Of Card)
        return:
          type: CardStack{Card}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Turns.TurnManager.Init(Bot)
      commentId: M:CardBattle.Core.Turns.TurnManager.Init(Bot)
      language: CSharp
      name:
        CSharp: Init(Bot)
        VB: Init(Bot)
      nameWithType:
        CSharp: TurnManager.Init(Bot)
        VB: TurnManager.Init(Bot)
      qualifiedName:
        CSharp: CardBattle.Core.Turns.TurnManager.Init(Bot)
        VB: CardBattle.Core.Turns.TurnManager.Init(Bot)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Turns
      source:
        id: Init
        path: ''
        startLine: 927
      syntax:
        content:
          CSharp: public void Init(Bot bot)
          VB: Public Sub Init(bot As Bot)
        parameters:
        - id: bot
          type: Bot
      overload: CardBattle.Core.Turns.TurnManager.Init*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Turns.TurnManager.CurrentPlayer
      commentId: P:CardBattle.Core.Turns.TurnManager.CurrentPlayer
      language: CSharp
      name:
        CSharp: CurrentPlayer
        VB: CurrentPlayer
      nameWithType:
        CSharp: TurnManager.CurrentPlayer
        VB: TurnManager.CurrentPlayer
      qualifiedName:
        CSharp: CardBattle.Core.Turns.TurnManager.CurrentPlayer
        VB: CardBattle.Core.Turns.TurnManager.CurrentPlayer
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Turns
      source:
        id: CurrentPlayer
        path: ''
        startLine: 980
      syntax:
        content:
          CSharp: public Player CurrentPlayer { get; }
          VB: Public ReadOnly Property CurrentPlayer As Player
        parameters: []
        return:
          type: Player
      overload: CardBattle.Core.Turns.TurnManager.CurrentPlayer*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: CardBattle.Core.Turns.TurnManager.OpponentPlayer
      commentId: P:CardBattle.Core.Turns.TurnManager.OpponentPlayer
      language: CSharp
      name:
        CSharp: OpponentPlayer
        VB: OpponentPlayer
      nameWithType:
        CSharp: TurnManager.OpponentPlayer
        VB: TurnManager.OpponentPlayer
      qualifiedName:
        CSharp: CardBattle.Core.Turns.TurnManager.OpponentPlayer
        VB: CardBattle.Core.Turns.TurnManager.OpponentPlayer
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Turns
      source:
        id: OpponentPlayer
        path: ''
        startLine: 982
      syntax:
        content:
          CSharp: public Player OpponentPlayer { get; }
          VB: Public ReadOnly Property OpponentPlayer As Player
        parameters: []
        return:
          type: Player
      overload: CardBattle.Core.Turns.TurnManager.OpponentPlayer*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: CardBattle.Core.Turns.TurnManager.Bot
      commentId: P:CardBattle.Core.Turns.TurnManager.Bot
      language: CSharp
      name:
        CSharp: Bot
        VB: Bot
      nameWithType:
        CSharp: TurnManager.Bot
        VB: TurnManager.Bot
      qualifiedName:
        CSharp: CardBattle.Core.Turns.TurnManager.Bot
        VB: CardBattle.Core.Turns.TurnManager.Bot
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Turns
      source:
        id: Bot
        path: ''
        startLine: 984
      syntax:
        content:
          CSharp: public Bot Bot { get; }
          VB: Public ReadOnly Property Bot As Bot
        parameters: []
        return:
          type: Bot
      overload: CardBattle.Core.Turns.TurnManager.Bot*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: CardBattle.Core.Turns.TurnManager.FirstTurn
      commentId: M:CardBattle.Core.Turns.TurnManager.FirstTurn
      language: CSharp
      name:
        CSharp: FirstTurn()
        VB: FirstTurn()
      nameWithType:
        CSharp: TurnManager.FirstTurn()
        VB: TurnManager.FirstTurn()
      qualifiedName:
        CSharp: CardBattle.Core.Turns.TurnManager.FirstTurn()
        VB: CardBattle.Core.Turns.TurnManager.FirstTurn()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Turns
      source:
        id: FirstTurn
        path: ''
        startLine: 986
      syntax:
        content:
          CSharp: public Player FirstTurn()
          VB: Public Function FirstTurn As Player
        return:
          type: Player
      overload: CardBattle.Core.Turns.TurnManager.FirstTurn*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Turns.TurnManager.NextTurn
      commentId: M:CardBattle.Core.Turns.TurnManager.NextTurn
      language: CSharp
      name:
        CSharp: NextTurn()
        VB: NextTurn()
      nameWithType:
        CSharp: TurnManager.NextTurn()
        VB: TurnManager.NextTurn()
      qualifiedName:
        CSharp: CardBattle.Core.Turns.TurnManager.NextTurn()
        VB: CardBattle.Core.Turns.TurnManager.NextTurn()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Turns
      source:
        id: NextTurn
        path: ''
        startLine: 996
      syntax:
        content:
          CSharp: public Player NextTurn()
          VB: Public Function NextTurn As Player
        return:
          type: Player
      overload: CardBattle.Core.Turns.TurnManager.NextTurn*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: CardBattle.Display
  commentId: N:CardBattle.Display
  language: CSharp
  name:
    CSharp: CardBattle.Display
    VB: CardBattle.Display
  nameWithType:
    CSharp: CardBattle.Display
    VB: CardBattle.Display
  qualifiedName:
    CSharp: CardBattle.Display
    VB: CardBattle.Display
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: CardBattle.Display.HUD
    commentId: T:CardBattle.Display.HUD
    language: CSharp
    name:
      CSharp: HUD
      VB: HUD
    nameWithType:
      CSharp: HUD
      VB: HUD
    qualifiedName:
      CSharp: CardBattle.Display.HUD
      VB: CardBattle.Display.HUD
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: CardBattle.Display
    source:
      id: HUD
      path: ''
      startLine: 1025
    syntax:
      content:
        CSharp: 'public class HUD : MonoBehaviour'
        VB: >-
          Public Class HUD

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: CardBattle.Display.ReplaceWith
    commentId: T:CardBattle.Display.ReplaceWith
    language: CSharp
    name:
      CSharp: ReplaceWith
      VB: ReplaceWith
    nameWithType:
      CSharp: ReplaceWith
      VB: ReplaceWith
    qualifiedName:
      CSharp: CardBattle.Display.ReplaceWith
      VB: CardBattle.Display.ReplaceWith
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: CardBattle.Display
    source:
      id: ReplaceWith
      path: ''
      startLine: 1049
    syntax:
      content:
        CSharp: 'public class ReplaceWith : MonoBehaviour'
        VB: >-
          Public Class ReplaceWith

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
references:
  CardBattle.Networking.Quit.ExitRoom*:
    name:
      CSharp:
      - id: CardBattle.Networking.Quit.ExitRoom*
        name: ExitRoom
        nameWithType: Quit.ExitRoom
        qualifiedName: CardBattle.Networking.Quit.ExitRoom
      VB:
      - id: CardBattle.Networking.Quit.ExitRoom*
        name: ExitRoom
        nameWithType: Quit.ExitRoom
        qualifiedName: CardBattle.Networking.Quit.ExitRoom
    isDefinition: true
    commentId: Overload:CardBattle.Networking.Quit.ExitRoom
  CardBattle.Networking.Quit.Exit*:
    name:
      CSharp:
      - id: CardBattle.Networking.Quit.Exit*
        name: Exit
        nameWithType: Quit.Exit
        qualifiedName: CardBattle.Networking.Quit.Exit
      VB:
      - id: CardBattle.Networking.Quit.Exit*
        name: Exit
        nameWithType: Quit.Exit
        qualifiedName: CardBattle.Networking.Quit.Exit
    isDefinition: true
    commentId: Overload:CardBattle.Networking.Quit.Exit
  CardBattle.Networking.Quit.OnLeftRoom*:
    name:
      CSharp:
      - id: CardBattle.Networking.Quit.OnLeftRoom*
        name: OnLeftRoom
        nameWithType: Quit.OnLeftRoom
        qualifiedName: CardBattle.Networking.Quit.OnLeftRoom
      VB:
      - id: CardBattle.Networking.Quit.OnLeftRoom*
        name: OnLeftRoom
        nameWithType: Quit.OnLeftRoom
        qualifiedName: CardBattle.Networking.Quit.OnLeftRoom
    isDefinition: true
    commentId: Overload:CardBattle.Networking.Quit.OnLeftRoom
  CardBattle.Networking.Quit.OnLeftLobby*:
    name:
      CSharp:
      - id: CardBattle.Networking.Quit.OnLeftLobby*
        name: OnLeftLobby
        nameWithType: Quit.OnLeftLobby
        qualifiedName: CardBattle.Networking.Quit.OnLeftLobby
      VB:
      - id: CardBattle.Networking.Quit.OnLeftLobby*
        name: OnLeftLobby
        nameWithType: Quit.OnLeftLobby
        qualifiedName: CardBattle.Networking.Quit.OnLeftLobby
    isDefinition: true
    commentId: Overload:CardBattle.Networking.Quit.OnLeftLobby
  DisconnectCause:
    name:
      CSharp:
      - id: DisconnectCause
        name: DisconnectCause
        nameWithType: DisconnectCause
        qualifiedName: DisconnectCause
        isExternal: true
      VB:
      - id: DisconnectCause
        name: DisconnectCause
        nameWithType: DisconnectCause
        qualifiedName: DisconnectCause
        isExternal: true
    isDefinition: true
    commentId: '!:DisconnectCause'
  CardBattle.Networking.Quit.OnDisconnected*:
    name:
      CSharp:
      - id: CardBattle.Networking.Quit.OnDisconnected*
        name: OnDisconnected
        nameWithType: Quit.OnDisconnected
        qualifiedName: CardBattle.Networking.Quit.OnDisconnected
      VB:
      - id: CardBattle.Networking.Quit.OnDisconnected*
        name: OnDisconnected
        nameWithType: Quit.OnDisconnected
        qualifiedName: CardBattle.Networking.Quit.OnDisconnected
    isDefinition: true
    commentId: Overload:CardBattle.Networking.Quit.OnDisconnected
  CardBattle.Networking.Quit:
    name:
      CSharp:
      - id: CardBattle.Networking.Quit
        name: Quit
        nameWithType: Quit
        qualifiedName: CardBattle.Networking.Quit
      VB:
      - id: CardBattle.Networking.Quit
        name: Quit
        nameWithType: Quit
        qualifiedName: CardBattle.Networking.Quit
    isDefinition: true
    commentId: T:CardBattle.Networking.Quit
  CardBattle.Networking.ConnectToServer.OnConnectedToMaster*:
    name:
      CSharp:
      - id: CardBattle.Networking.ConnectToServer.OnConnectedToMaster*
        name: OnConnectedToMaster
        nameWithType: ConnectToServer.OnConnectedToMaster
        qualifiedName: CardBattle.Networking.ConnectToServer.OnConnectedToMaster
      VB:
      - id: CardBattle.Networking.ConnectToServer.OnConnectedToMaster*
        name: OnConnectedToMaster
        nameWithType: ConnectToServer.OnConnectedToMaster
        qualifiedName: CardBattle.Networking.ConnectToServer.OnConnectedToMaster
    isDefinition: true
    commentId: Overload:CardBattle.Networking.ConnectToServer.OnConnectedToMaster
  CardBattle.Networking.ConnectToServer.OnJoinedLobby*:
    name:
      CSharp:
      - id: CardBattle.Networking.ConnectToServer.OnJoinedLobby*
        name: OnJoinedLobby
        nameWithType: ConnectToServer.OnJoinedLobby
        qualifiedName: CardBattle.Networking.ConnectToServer.OnJoinedLobby
      VB:
      - id: CardBattle.Networking.ConnectToServer.OnJoinedLobby*
        name: OnJoinedLobby
        nameWithType: ConnectToServer.OnJoinedLobby
        qualifiedName: CardBattle.Networking.ConnectToServer.OnJoinedLobby
    isDefinition: true
    commentId: Overload:CardBattle.Networking.ConnectToServer.OnJoinedLobby
  CardBattle.Networking.ConnectToServer:
    name:
      CSharp:
      - id: CardBattle.Networking.ConnectToServer
        name: ConnectToServer
        nameWithType: ConnectToServer
        qualifiedName: CardBattle.Networking.ConnectToServer
      VB:
      - id: CardBattle.Networking.ConnectToServer
        name: ConnectToServer
        nameWithType: ConnectToServer
        qualifiedName: CardBattle.Networking.ConnectToServer
    isDefinition: true
    commentId: T:CardBattle.Networking.ConnectToServer
  TMP_InputField:
    name:
      CSharp:
      - id: TMP_InputField
        name: TMP_InputField
        nameWithType: TMP_InputField
        qualifiedName: TMP_InputField
        isExternal: true
      VB:
      - id: TMP_InputField
        name: TMP_InputField
        nameWithType: TMP_InputField
        qualifiedName: TMP_InputField
        isExternal: true
    isDefinition: true
  Button:
    name:
      CSharp:
      - id: Button
        name: Button
        nameWithType: Button
        qualifiedName: Button
        isExternal: true
      VB:
      - id: Button
        name: Button
        nameWithType: Button
        qualifiedName: Button
        isExternal: true
    isDefinition: true
  System.Collections.Generic.List`1:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.List`1
  System.Collections.Generic:
    name:
      CSharp:
      - name: System.Collections.Generic
        nameWithType: System.Collections.Generic
        qualifiedName: System.Collections.Generic
        isExternal: true
      VB:
      - name: System.Collections.Generic
        nameWithType: System.Collections.Generic
        qualifiedName: System.Collections.Generic
    isDefinition: true
    commentId: N:System.Collections.Generic
  System.Collections.Generic.List{GameObject}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{GameObject}
  CardBattle.Networking.CreateAndJoinRooms.GetLobbyMenuItems*:
    name:
      CSharp:
      - id: CardBattle.Networking.CreateAndJoinRooms.GetLobbyMenuItems*
        name: GetLobbyMenuItems
        nameWithType: CreateAndJoinRooms.GetLobbyMenuItems
        qualifiedName: CardBattle.Networking.CreateAndJoinRooms.GetLobbyMenuItems
      VB:
      - id: CardBattle.Networking.CreateAndJoinRooms.GetLobbyMenuItems*
        name: GetLobbyMenuItems
        nameWithType: CreateAndJoinRooms.GetLobbyMenuItems
        qualifiedName: CardBattle.Networking.CreateAndJoinRooms.GetLobbyMenuItems
    isDefinition: true
    commentId: Overload:CardBattle.Networking.CreateAndJoinRooms.GetLobbyMenuItems
  System:
    name:
      CSharp:
      - name: System
        nameWithType: System
        qualifiedName: System
        isExternal: true
      VB:
      - name: System
        nameWithType: System
        qualifiedName: System
    isDefinition: true
    commentId: N:System
  System.Boolean:
    name:
      CSharp:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      VB:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Boolean
  CardBattle.Networking.CreateAndJoinRooms.SetLobbyMenu*:
    name:
      CSharp:
      - id: CardBattle.Networking.CreateAndJoinRooms.SetLobbyMenu*
        name: SetLobbyMenu
        nameWithType: CreateAndJoinRooms.SetLobbyMenu
        qualifiedName: CardBattle.Networking.CreateAndJoinRooms.SetLobbyMenu
      VB:
      - id: CardBattle.Networking.CreateAndJoinRooms.SetLobbyMenu*
        name: SetLobbyMenu
        nameWithType: CreateAndJoinRooms.SetLobbyMenu
        qualifiedName: CardBattle.Networking.CreateAndJoinRooms.SetLobbyMenu
    isDefinition: true
    commentId: Overload:CardBattle.Networking.CreateAndJoinRooms.SetLobbyMenu
  CardBattle.Networking.CreateAndJoinRooms.CreateRoom*:
    name:
      CSharp:
      - id: CardBattle.Networking.CreateAndJoinRooms.CreateRoom*
        name: CreateRoom
        nameWithType: CreateAndJoinRooms.CreateRoom
        qualifiedName: CardBattle.Networking.CreateAndJoinRooms.CreateRoom
      VB:
      - id: CardBattle.Networking.CreateAndJoinRooms.CreateRoom*
        name: CreateRoom
        nameWithType: CreateAndJoinRooms.CreateRoom
        qualifiedName: CardBattle.Networking.CreateAndJoinRooms.CreateRoom
    isDefinition: true
    commentId: Overload:CardBattle.Networking.CreateAndJoinRooms.CreateRoom
  CardBattle.Networking.CreateAndJoinRooms.JoinRoom*:
    name:
      CSharp:
      - id: CardBattle.Networking.CreateAndJoinRooms.JoinRoom*
        name: JoinRoom
        nameWithType: CreateAndJoinRooms.JoinRoom
        qualifiedName: CardBattle.Networking.CreateAndJoinRooms.JoinRoom
      VB:
      - id: CardBattle.Networking.CreateAndJoinRooms.JoinRoom*
        name: JoinRoom
        nameWithType: CreateAndJoinRooms.JoinRoom
        qualifiedName: CardBattle.Networking.CreateAndJoinRooms.JoinRoom
    isDefinition: true
    commentId: Overload:CardBattle.Networking.CreateAndJoinRooms.JoinRoom
  System.Int16:
    name:
      CSharp:
      - id: System.Int16
        name: Int16
        nameWithType: Int16
        qualifiedName: System.Int16
        isExternal: true
      VB:
      - id: System.Int16
        name: Int16
        nameWithType: Int16
        qualifiedName: System.Int16
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Int16
  System.String:
    name:
      CSharp:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      VB:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.String
  CardBattle.Networking.CreateAndJoinRooms.OnJoinRoomFailed*:
    name:
      CSharp:
      - id: CardBattle.Networking.CreateAndJoinRooms.OnJoinRoomFailed*
        name: OnJoinRoomFailed
        nameWithType: CreateAndJoinRooms.OnJoinRoomFailed
        qualifiedName: CardBattle.Networking.CreateAndJoinRooms.OnJoinRoomFailed
      VB:
      - id: CardBattle.Networking.CreateAndJoinRooms.OnJoinRoomFailed*
        name: OnJoinRoomFailed
        nameWithType: CreateAndJoinRooms.OnJoinRoomFailed
        qualifiedName: CardBattle.Networking.CreateAndJoinRooms.OnJoinRoomFailed
    isDefinition: true
    commentId: Overload:CardBattle.Networking.CreateAndJoinRooms.OnJoinRoomFailed
  CardBattle.Networking.CreateAndJoinRooms.OnJoinedRoom*:
    name:
      CSharp:
      - id: CardBattle.Networking.CreateAndJoinRooms.OnJoinedRoom*
        name: OnJoinedRoom
        nameWithType: CreateAndJoinRooms.OnJoinedRoom
        qualifiedName: CardBattle.Networking.CreateAndJoinRooms.OnJoinedRoom
      VB:
      - id: CardBattle.Networking.CreateAndJoinRooms.OnJoinedRoom*
        name: OnJoinedRoom
        nameWithType: CreateAndJoinRooms.OnJoinedRoom
        qualifiedName: CardBattle.Networking.CreateAndJoinRooms.OnJoinedRoom
    isDefinition: true
    commentId: Overload:CardBattle.Networking.CreateAndJoinRooms.OnJoinedRoom
  CardBattle.Networking.CreateAndJoinRooms.CheckPlayersReady*:
    name:
      CSharp:
      - id: CardBattle.Networking.CreateAndJoinRooms.CheckPlayersReady*
        name: CheckPlayersReady
        nameWithType: CreateAndJoinRooms.CheckPlayersReady
        qualifiedName: CardBattle.Networking.CreateAndJoinRooms.CheckPlayersReady
      VB:
      - id: CardBattle.Networking.CreateAndJoinRooms.CheckPlayersReady*
        name: CheckPlayersReady
        nameWithType: CreateAndJoinRooms.CheckPlayersReady
        qualifiedName: CardBattle.Networking.CreateAndJoinRooms.CheckPlayersReady
    isDefinition: true
    commentId: Overload:CardBattle.Networking.CreateAndJoinRooms.CheckPlayersReady
  CardBattle.Networking.CreateAndJoinRooms.CheckPlayersIngame*:
    name:
      CSharp:
      - id: CardBattle.Networking.CreateAndJoinRooms.CheckPlayersIngame*
        name: CheckPlayersIngame
        nameWithType: CreateAndJoinRooms.CheckPlayersIngame
        qualifiedName: CardBattle.Networking.CreateAndJoinRooms.CheckPlayersIngame
      VB:
      - id: CardBattle.Networking.CreateAndJoinRooms.CheckPlayersIngame*
        name: CheckPlayersIngame
        nameWithType: CreateAndJoinRooms.CheckPlayersIngame
        qualifiedName: CardBattle.Networking.CreateAndJoinRooms.CheckPlayersIngame
    isDefinition: true
    commentId: Overload:CardBattle.Networking.CreateAndJoinRooms.CheckPlayersIngame
  CardBattle.Networking.CreateAndJoinRooms:
    name:
      CSharp:
      - id: CardBattle.Networking.CreateAndJoinRooms
        name: CreateAndJoinRooms
        nameWithType: CreateAndJoinRooms
        qualifiedName: CardBattle.Networking.CreateAndJoinRooms
      VB:
      - id: CardBattle.Networking.CreateAndJoinRooms
        name: CreateAndJoinRooms
        nameWithType: CreateAndJoinRooms
        qualifiedName: CardBattle.Networking.CreateAndJoinRooms
    isDefinition: true
    commentId: T:CardBattle.Networking.CreateAndJoinRooms
  Animator:
    name:
      CSharp:
      - id: Animator
        name: Animator
        nameWithType: Animator
        qualifiedName: Animator
        isExternal: true
      VB:
      - id: Animator
        name: Animator
        nameWithType: Animator
        qualifiedName: Animator
        isExternal: true
    isDefinition: true
    commentId: '!:Animator'
  CardBattle.Networking.LevelChanger.FadeToLevel*:
    name:
      CSharp:
      - id: CardBattle.Networking.LevelChanger.FadeToLevel*
        name: FadeToLevel
        nameWithType: LevelChanger.FadeToLevel
        qualifiedName: CardBattle.Networking.LevelChanger.FadeToLevel
      VB:
      - id: CardBattle.Networking.LevelChanger.FadeToLevel*
        name: FadeToLevel
        nameWithType: LevelChanger.FadeToLevel
        qualifiedName: CardBattle.Networking.LevelChanger.FadeToLevel
    isDefinition: true
    commentId: Overload:CardBattle.Networking.LevelChanger.FadeToLevel
  CardBattle.Networking.LevelChanger.OnFadeComplete*:
    name:
      CSharp:
      - id: CardBattle.Networking.LevelChanger.OnFadeComplete*
        name: OnFadeComplete
        nameWithType: LevelChanger.OnFadeComplete
        qualifiedName: CardBattle.Networking.LevelChanger.OnFadeComplete
      VB:
      - id: CardBattle.Networking.LevelChanger.OnFadeComplete*
        name: OnFadeComplete
        nameWithType: LevelChanger.OnFadeComplete
        qualifiedName: CardBattle.Networking.LevelChanger.OnFadeComplete
    isDefinition: true
    commentId: Overload:CardBattle.Networking.LevelChanger.OnFadeComplete
  CardBattle.Networking.LevelChanger.OnFadeCompleteNetwork*:
    name:
      CSharp:
      - id: CardBattle.Networking.LevelChanger.OnFadeCompleteNetwork*
        name: OnFadeCompleteNetwork
        nameWithType: LevelChanger.OnFadeCompleteNetwork
        qualifiedName: CardBattle.Networking.LevelChanger.OnFadeCompleteNetwork
      VB:
      - id: CardBattle.Networking.LevelChanger.OnFadeCompleteNetwork*
        name: OnFadeCompleteNetwork
        nameWithType: LevelChanger.OnFadeCompleteNetwork
        qualifiedName: CardBattle.Networking.LevelChanger.OnFadeCompleteNetwork
    isDefinition: true
    commentId: Overload:CardBattle.Networking.LevelChanger.OnFadeCompleteNetwork
  CardBattle.Networking.LevelChanger:
    name:
      CSharp:
      - id: CardBattle.Networking.LevelChanger
        name: LevelChanger
        nameWithType: LevelChanger
        qualifiedName: CardBattle.Networking.LevelChanger
      VB:
      - id: CardBattle.Networking.LevelChanger
        name: LevelChanger
        nameWithType: LevelChanger
        qualifiedName: CardBattle.Networking.LevelChanger
    isDefinition: true
    commentId: T:CardBattle.Networking.LevelChanger
  CardBattle.Networking.SpawnPlayers:
    name:
      CSharp:
      - id: CardBattle.Networking.SpawnPlayers
        name: SpawnPlayers
        nameWithType: SpawnPlayers
        qualifiedName: CardBattle.Networking.SpawnPlayers
      VB:
      - id: CardBattle.Networking.SpawnPlayers
        name: SpawnPlayers
        nameWithType: SpawnPlayers
        qualifiedName: CardBattle.Networking.SpawnPlayers
    isDefinition: true
    commentId: T:CardBattle.Networking.SpawnPlayers
  CardBattle.Networking:
    name:
      CSharp:
      - name: CardBattle.Networking
        nameWithType: CardBattle.Networking
        qualifiedName: CardBattle.Networking
      VB:
      - name: CardBattle.Networking
        nameWithType: CardBattle.Networking
        qualifiedName: CardBattle.Networking
    isDefinition: true
    commentId: N:CardBattle.Networking
  CardBattle.Core:
    name:
      CSharp:
      - name: CardBattle.Core
        nameWithType: CardBattle.Core
        qualifiedName: CardBattle.Core
      VB:
      - name: CardBattle.Core
        nameWithType: CardBattle.Core
        qualifiedName: CardBattle.Core
    isDefinition: true
    commentId: N:CardBattle.Core
  CardBattle.Core.COLOR:
    name:
      CSharp:
      - id: CardBattle.Core.COLOR
        name: COLOR
        nameWithType: COLOR
        qualifiedName: CardBattle.Core.COLOR
      VB:
      - id: CardBattle.Core.COLOR
        name: COLOR
        nameWithType: COLOR
        qualifiedName: CardBattle.Core.COLOR
    isDefinition: true
    parent: CardBattle.Core
    commentId: T:CardBattle.Core.COLOR
  CardBattle.Core.MULTIPLIER:
    name:
      CSharp:
      - id: CardBattle.Core.MULTIPLIER
        name: MULTIPLIER
        nameWithType: MULTIPLIER
        qualifiedName: CardBattle.Core.MULTIPLIER
      VB:
      - id: CardBattle.Core.MULTIPLIER
        name: MULTIPLIER
        nameWithType: MULTIPLIER
        qualifiedName: CardBattle.Core.MULTIPLIER
    isDefinition: true
    parent: CardBattle.Core
    commentId: T:CardBattle.Core.MULTIPLIER
  CardBattle.Core.GameManager:
    name:
      CSharp:
      - id: CardBattle.Core.GameManager
        name: GameManager
        nameWithType: GameManager
        qualifiedName: CardBattle.Core.GameManager
      VB:
      - id: CardBattle.Core.GameManager
        name: GameManager
        nameWithType: GameManager
        qualifiedName: CardBattle.Core.GameManager
    isDefinition: true
    parent: CardBattle.Core
    commentId: T:CardBattle.Core.GameManager
  TurnManager:
    name:
      CSharp:
      - id: TurnManager
        name: TurnManager
        nameWithType: TurnManager
        qualifiedName: TurnManager
        isExternal: true
      VB:
      - id: TurnManager
        name: TurnManager
        nameWithType: TurnManager
        qualifiedName: TurnManager
        isExternal: true
    isDefinition: true
    commentId: '!:TurnManager'
  System.Collections.Generic.List{Player}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Player
        name: Player
        nameWithType: Player
        qualifiedName: Player
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Player
        name: Player
        nameWithType: Player
        qualifiedName: Player
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Player}
  CardBattle.Core.AI:
    name:
      CSharp:
      - name: CardBattle.Core.AI
        nameWithType: CardBattle.Core.AI
        qualifiedName: CardBattle.Core.AI
      VB:
      - name: CardBattle.Core.AI
        nameWithType: CardBattle.Core.AI
        qualifiedName: CardBattle.Core.AI
    isDefinition: true
    commentId: N:CardBattle.Core.AI
  CardBattle.Core.AI.Bot:
    name:
      CSharp:
      - id: CardBattle.Core.AI.Bot
        name: Bot
        nameWithType: Bot
        qualifiedName: CardBattle.Core.AI.Bot
      VB:
      - id: CardBattle.Core.AI.Bot
        name: Bot
        nameWithType: Bot
        qualifiedName: CardBattle.Core.AI.Bot
    isDefinition: true
    parent: CardBattle.Core.AI
    commentId: T:CardBattle.Core.AI.Bot
  CardBattle.Core.GameManager.Awake*:
    name:
      CSharp:
      - id: CardBattle.Core.GameManager.Awake*
        name: Awake
        nameWithType: GameManager.Awake
        qualifiedName: CardBattle.Core.GameManager.Awake
      VB:
      - id: CardBattle.Core.GameManager.Awake*
        name: Awake
        nameWithType: GameManager.Awake
        qualifiedName: CardBattle.Core.GameManager.Awake
    isDefinition: true
    commentId: Overload:CardBattle.Core.GameManager.Awake
  CardBattle.Core.GameManager.Start*:
    name:
      CSharp:
      - id: CardBattle.Core.GameManager.Start*
        name: Start
        nameWithType: GameManager.Start
        qualifiedName: CardBattle.Core.GameManager.Start
      VB:
      - id: CardBattle.Core.GameManager.Start*
        name: Start
        nameWithType: GameManager.Start
        qualifiedName: CardBattle.Core.GameManager.Start
    isDefinition: true
    commentId: Overload:CardBattle.Core.GameManager.Start
  CardBattle.Core.GameManager.InstantiatePlayers*:
    name:
      CSharp:
      - id: CardBattle.Core.GameManager.InstantiatePlayers*
        name: InstantiatePlayers
        nameWithType: GameManager.InstantiatePlayers
        qualifiedName: CardBattle.Core.GameManager.InstantiatePlayers
      VB:
      - id: CardBattle.Core.GameManager.InstantiatePlayers*
        name: InstantiatePlayers
        nameWithType: GameManager.InstantiatePlayers
        qualifiedName: CardBattle.Core.GameManager.InstantiatePlayers
    isDefinition: true
    commentId: Overload:CardBattle.Core.GameManager.InstantiatePlayers
  CardBattle.Core.GameController:
    name:
      CSharp:
      - id: CardBattle.Core.GameController
        name: GameController
        nameWithType: GameController
        qualifiedName: CardBattle.Core.GameController
      VB:
      - id: CardBattle.Core.GameController
        name: GameController
        nameWithType: GameController
        qualifiedName: CardBattle.Core.GameController
    isDefinition: true
    commentId: T:CardBattle.Core.GameController
  System.Object:
    name:
      CSharp:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      VB:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Object
  System.Object.ToString:
    name:
      CSharp:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ToString
  System.Object.Equals(System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object)
  System.Object.Equals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object,System.Object)
  System.Object.ReferenceEquals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  System.Object.GetHashCode:
    name:
      CSharp:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetHashCode
  System.Object.GetType:
    name:
      CSharp:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetType
  System.Object.MemberwiseClone:
    name:
      CSharp:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.MemberwiseClone
  CardBattle.Core.Actions.Action.#ctor*:
    name:
      CSharp:
      - id: CardBattle.Core.Actions.Action.#ctor*
        name: Action
        nameWithType: Action.Action
        qualifiedName: CardBattle.Core.Actions.Action.Action
      VB:
      - id: CardBattle.Core.Actions.Action.#ctor*
        name: Action
        nameWithType: Action.Action
        qualifiedName: CardBattle.Core.Actions.Action.Action
    isDefinition: true
    commentId: Overload:CardBattle.Core.Actions.Action.#ctor
  CardBattle.Core.Actions.Action.Execute*:
    name:
      CSharp:
      - id: CardBattle.Core.Actions.Action.Execute*
        name: Execute
        nameWithType: Action.Execute
        qualifiedName: CardBattle.Core.Actions.Action.Execute
      VB:
      - id: CardBattle.Core.Actions.Action.Execute*
        name: Execute
        nameWithType: Action.Execute
        qualifiedName: CardBattle.Core.Actions.Action.Execute
    isDefinition: true
    commentId: Overload:CardBattle.Core.Actions.Action.Execute
  CardBattle.Core.Actions.Action:
    name:
      CSharp:
      - id: CardBattle.Core.Actions.Action
        name: Action
        nameWithType: Action
        qualifiedName: CardBattle.Core.Actions.Action
      VB:
      - id: CardBattle.Core.Actions.Action
        name: Action
        nameWithType: Action
        qualifiedName: CardBattle.Core.Actions.Action
    isDefinition: true
    parent: CardBattle.Core.Actions
    commentId: T:CardBattle.Core.Actions.Action
  CardBattle.Core.Actions:
    name:
      CSharp:
      - name: CardBattle.Core.Actions
        nameWithType: CardBattle.Core.Actions
        qualifiedName: CardBattle.Core.Actions
      VB:
      - name: CardBattle.Core.Actions
        nameWithType: CardBattle.Core.Actions
        qualifiedName: CardBattle.Core.Actions
    isDefinition: true
    commentId: N:CardBattle.Core.Actions
  CardBattle.Core.Actions.Derived.Card.CardTitle*:
    name:
      CSharp:
      - id: CardBattle.Core.Actions.Derived.Card.CardTitle*
        name: CardTitle
        nameWithType: Card.CardTitle
        qualifiedName: CardBattle.Core.Actions.Derived.Card.CardTitle
      VB:
      - id: CardBattle.Core.Actions.Derived.Card.CardTitle*
        name: CardTitle
        nameWithType: Card.CardTitle
        qualifiedName: CardBattle.Core.Actions.Derived.Card.CardTitle
    isDefinition: true
    commentId: Overload:CardBattle.Core.Actions.Derived.Card.CardTitle
  CardBattle.Core.Actions.Derived.Card.Description*:
    name:
      CSharp:
      - id: CardBattle.Core.Actions.Derived.Card.Description*
        name: Description
        nameWithType: Card.Description
        qualifiedName: CardBattle.Core.Actions.Derived.Card.Description
      VB:
      - id: CardBattle.Core.Actions.Derived.Card.Description*
        name: Description
        nameWithType: Card.Description
        qualifiedName: CardBattle.Core.Actions.Derived.Card.Description
    isDefinition: true
    commentId: Overload:CardBattle.Core.Actions.Derived.Card.Description
  System.Collections.Generic.List{Material}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Material
        name: Material
        nameWithType: Material
        qualifiedName: Material
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Material
        name: Material
        nameWithType: Material
        qualifiedName: Material
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Material}
  CardBattle.Core.Actions.Derived.Card.Materials*:
    name:
      CSharp:
      - id: CardBattle.Core.Actions.Derived.Card.Materials*
        name: Materials
        nameWithType: Card.Materials
        qualifiedName: CardBattle.Core.Actions.Derived.Card.Materials
      VB:
      - id: CardBattle.Core.Actions.Derived.Card.Materials*
        name: Materials
        nameWithType: Card.Materials
        qualifiedName: CardBattle.Core.Actions.Derived.Card.Materials
    isDefinition: true
    commentId: Overload:CardBattle.Core.Actions.Derived.Card.Materials
  CardBattle.Core.Actions.Derived.Card.#ctor*:
    name:
      CSharp:
      - id: CardBattle.Core.Actions.Derived.Card.#ctor*
        name: Card
        nameWithType: Card.Card
        qualifiedName: CardBattle.Core.Actions.Derived.Card.Card
      VB:
      - id: CardBattle.Core.Actions.Derived.Card.#ctor*
        name: Card
        nameWithType: Card.Card
        qualifiedName: CardBattle.Core.Actions.Derived.Card.Card
    isDefinition: true
    commentId: Overload:CardBattle.Core.Actions.Derived.Card.#ctor
  CardBattle.Core.Actions.Derived.Card.Execute*:
    name:
      CSharp:
      - id: CardBattle.Core.Actions.Derived.Card.Execute*
        name: Execute
        nameWithType: Card.Execute
        qualifiedName: CardBattle.Core.Actions.Derived.Card.Execute
      VB:
      - id: CardBattle.Core.Actions.Derived.Card.Execute*
        name: Execute
        nameWithType: Card.Execute
        qualifiedName: CardBattle.Core.Actions.Derived.Card.Execute
    isDefinition: true
    commentId: Overload:CardBattle.Core.Actions.Derived.Card.Execute
  CardBattle.Core.Actions.Derived.Card:
    name:
      CSharp:
      - id: CardBattle.Core.Actions.Derived.Card
        name: Card
        nameWithType: Card
        qualifiedName: CardBattle.Core.Actions.Derived.Card
      VB:
      - id: CardBattle.Core.Actions.Derived.Card
        name: Card
        nameWithType: Card
        qualifiedName: CardBattle.Core.Actions.Derived.Card
    isDefinition: true
    commentId: T:CardBattle.Core.Actions.Derived.Card
  CardBattle.Core.Actions.Action.isOptional:
    name:
      CSharp:
      - id: CardBattle.Core.Actions.Action.isOptional
        name: isOptional
        nameWithType: Action.isOptional
        qualifiedName: CardBattle.Core.Actions.Action.isOptional
      VB:
      - id: CardBattle.Core.Actions.Action.isOptional
        name: isOptional
        nameWithType: Action.isOptional
        qualifiedName: CardBattle.Core.Actions.Action.isOptional
    isDefinition: true
    parent: CardBattle.Core.Actions.Action
    commentId: F:CardBattle.Core.Actions.Action.isOptional
  System.Collections.Generic.List{{T}}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{`0}
  CardBattle.Core.Actions.Derived.CardStack`1.#ctor*:
    name:
      CSharp:
      - id: CardBattle.Core.Actions.Derived.CardStack`1.#ctor*
        name: CardStack
        nameWithType: CardStack<T>.CardStack
        qualifiedName: CardBattle.Core.Actions.Derived.CardStack<T>.CardStack
      VB:
      - id: CardBattle.Core.Actions.Derived.CardStack`1.#ctor*
        name: CardStack
        nameWithType: CardStack(Of T).CardStack
        qualifiedName: CardBattle.Core.Actions.Derived.CardStack(Of T).CardStack
    isDefinition: true
    commentId: Overload:CardBattle.Core.Actions.Derived.CardStack`1.#ctor
  CardBattle.Core.Actions.Derived.CardStack`1.Shuffle*:
    name:
      CSharp:
      - id: CardBattle.Core.Actions.Derived.CardStack`1.Shuffle*
        name: Shuffle
        nameWithType: CardStack<T>.Shuffle
        qualifiedName: CardBattle.Core.Actions.Derived.CardStack<T>.Shuffle
      VB:
      - id: CardBattle.Core.Actions.Derived.CardStack`1.Shuffle*
        name: Shuffle
        nameWithType: CardStack(Of T).Shuffle
        qualifiedName: CardBattle.Core.Actions.Derived.CardStack(Of T).Shuffle
    isDefinition: true
    commentId: Overload:CardBattle.Core.Actions.Derived.CardStack`1.Shuffle
  T:
    name:
      CSharp:
      - name: T
        nameWithType: T
        qualifiedName: T
      VB:
      - name: T
        nameWithType: T
        qualifiedName: T
    isDefinition: true
    commentId: '!:T'
  '{T}':
    name:
      CSharp:
      - name: T
        nameWithType: T
        qualifiedName: T
      VB:
      - name: T
        nameWithType: T
        qualifiedName: T
    isDefinition: false
    definition: T
    commentId: '!:T'
  CardBattle.Core.Actions.Derived.CardStack`1.DrawCard*:
    name:
      CSharp:
      - id: CardBattle.Core.Actions.Derived.CardStack`1.DrawCard*
        name: DrawCard
        nameWithType: CardStack<T>.DrawCard
        qualifiedName: CardBattle.Core.Actions.Derived.CardStack<T>.DrawCard
      VB:
      - id: CardBattle.Core.Actions.Derived.CardStack`1.DrawCard*
        name: DrawCard
        nameWithType: CardStack(Of T).DrawCard
        qualifiedName: CardBattle.Core.Actions.Derived.CardStack(Of T).DrawCard
    isDefinition: true
    commentId: Overload:CardBattle.Core.Actions.Derived.CardStack`1.DrawCard
  CardBattle.Core.Actions.Action.Execute:
    name:
      CSharp:
      - id: CardBattle.Core.Actions.Action.Execute
        name: Execute
        nameWithType: Action.Execute
        qualifiedName: CardBattle.Core.Actions.Action.Execute
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: CardBattle.Core.Actions.Action.Execute
        name: Execute
        nameWithType: Action.Execute
        qualifiedName: CardBattle.Core.Actions.Action.Execute
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: CardBattle.Core.Actions.Action
    commentId: M:CardBattle.Core.Actions.Action.Execute
  CardBattle.Core.Actions.Derived.CardStack`1.Execute*:
    name:
      CSharp:
      - id: CardBattle.Core.Actions.Derived.CardStack`1.Execute*
        name: Execute
        nameWithType: CardStack<T>.Execute
        qualifiedName: CardBattle.Core.Actions.Derived.CardStack<T>.Execute
      VB:
      - id: CardBattle.Core.Actions.Derived.CardStack`1.Execute*
        name: Execute
        nameWithType: CardStack(Of T).Execute
        qualifiedName: CardBattle.Core.Actions.Derived.CardStack(Of T).Execute
    isDefinition: true
    commentId: Overload:CardBattle.Core.Actions.Derived.CardStack`1.Execute
  CardBattle.Core.Actions.Derived.CardStack`1:
    name:
      CSharp:
      - id: CardBattle.Core.Actions.Derived.CardStack`1
        name: CardStack
        nameWithType: CardStack
        qualifiedName: CardBattle.Core.Actions.Derived.CardStack
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: CardBattle.Core.Actions.Derived.CardStack`1
        name: CardStack
        nameWithType: CardStack
        qualifiedName: CardBattle.Core.Actions.Derived.CardStack
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:CardBattle.Core.Actions.Derived.CardStack`1
  CardBattle.Core.Actions.Derived.ColorDice.#ctor*:
    name:
      CSharp:
      - id: CardBattle.Core.Actions.Derived.ColorDice.#ctor*
        name: ColorDice
        nameWithType: ColorDice.ColorDice
        qualifiedName: CardBattle.Core.Actions.Derived.ColorDice.ColorDice
      VB:
      - id: CardBattle.Core.Actions.Derived.ColorDice.#ctor*
        name: ColorDice
        nameWithType: ColorDice.ColorDice
        qualifiedName: CardBattle.Core.Actions.Derived.ColorDice.ColorDice
    isDefinition: true
    commentId: Overload:CardBattle.Core.Actions.Derived.ColorDice.#ctor
  CardBattle.Core.Actions.Derived.ColorDice.Execute*:
    name:
      CSharp:
      - id: CardBattle.Core.Actions.Derived.ColorDice.Execute*
        name: Execute
        nameWithType: ColorDice.Execute
        qualifiedName: CardBattle.Core.Actions.Derived.ColorDice.Execute
      VB:
      - id: CardBattle.Core.Actions.Derived.ColorDice.Execute*
        name: Execute
        nameWithType: ColorDice.Execute
        qualifiedName: CardBattle.Core.Actions.Derived.ColorDice.Execute
    isDefinition: true
    commentId: Overload:CardBattle.Core.Actions.Derived.ColorDice.Execute
  CardBattle.Core.Actions.Derived.ColorDice:
    name:
      CSharp:
      - id: CardBattle.Core.Actions.Derived.ColorDice
        name: ColorDice
        nameWithType: ColorDice
        qualifiedName: CardBattle.Core.Actions.Derived.ColorDice
      VB:
      - id: CardBattle.Core.Actions.Derived.ColorDice
        name: ColorDice
        nameWithType: ColorDice
        qualifiedName: CardBattle.Core.Actions.Derived.ColorDice
    isDefinition: true
    commentId: T:CardBattle.Core.Actions.Derived.ColorDice
  CardBattle.Core.Actions.Action[]:
    name:
      CSharp:
      - id: CardBattle.Core.Actions.Action
        name: Action
        nameWithType: Action
        qualifiedName: CardBattle.Core.Actions.Action
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: CardBattle.Core.Actions.Action
        name: Action
        nameWithType: Action
        qualifiedName: CardBattle.Core.Actions.Action
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  CardBattle.Core.Actions.Derived.Dice.#ctor*:
    name:
      CSharp:
      - id: CardBattle.Core.Actions.Derived.Dice.#ctor*
        name: Dice
        nameWithType: Dice.Dice
        qualifiedName: CardBattle.Core.Actions.Derived.Dice.Dice
      VB:
      - id: CardBattle.Core.Actions.Derived.Dice.#ctor*
        name: Dice
        nameWithType: Dice.Dice
        qualifiedName: CardBattle.Core.Actions.Derived.Dice.Dice
    isDefinition: true
    commentId: Overload:CardBattle.Core.Actions.Derived.Dice.#ctor
  System.Int32:
    name:
      CSharp:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      VB:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Int32
  CardBattle.Core.Actions.Derived.Dice.Throw*:
    name:
      CSharp:
      - id: CardBattle.Core.Actions.Derived.Dice.Throw*
        name: Throw
        nameWithType: Dice.Throw
        qualifiedName: CardBattle.Core.Actions.Derived.Dice.Throw
      VB:
      - id: CardBattle.Core.Actions.Derived.Dice.Throw*
        name: Throw
        nameWithType: Dice.Throw
        qualifiedName: CardBattle.Core.Actions.Derived.Dice.Throw
    isDefinition: true
    commentId: Overload:CardBattle.Core.Actions.Derived.Dice.Throw
  CardBattle.Core.Actions.Derived.Dice.Execute*:
    name:
      CSharp:
      - id: CardBattle.Core.Actions.Derived.Dice.Execute*
        name: Execute
        nameWithType: Dice.Execute
        qualifiedName: CardBattle.Core.Actions.Derived.Dice.Execute
      VB:
      - id: CardBattle.Core.Actions.Derived.Dice.Execute*
        name: Execute
        nameWithType: Dice.Execute
        qualifiedName: CardBattle.Core.Actions.Derived.Dice.Execute
    isDefinition: true
    commentId: Overload:CardBattle.Core.Actions.Derived.Dice.Execute
  CardBattle.Core.Actions.Derived.Dice:
    name:
      CSharp:
      - id: CardBattle.Core.Actions.Derived.Dice
        name: Dice
        nameWithType: Dice
        qualifiedName: CardBattle.Core.Actions.Derived.Dice
      VB:
      - id: CardBattle.Core.Actions.Derived.Dice
        name: Dice
        nameWithType: Dice
        qualifiedName: CardBattle.Core.Actions.Derived.Dice
    isDefinition: true
    commentId: T:CardBattle.Core.Actions.Derived.Dice
  UnityEvent`1:
    name:
      CSharp:
      - id: UnityEvent`1
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: UnityEvent`1
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: '!:UnityEvent`1'
  UnityEvent{System.Int32}:
    name:
      CSharp:
      - id: UnityEvent`1
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: UnityEvent`1
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: UnityEvent`1
    commentId: '!:UnityEvent{System.Int32}'
  CardBattle.Core.Actions.Derived.DiceBox.#ctor*:
    name:
      CSharp:
      - id: CardBattle.Core.Actions.Derived.DiceBox.#ctor*
        name: DiceBox
        nameWithType: DiceBox.DiceBox
        qualifiedName: CardBattle.Core.Actions.Derived.DiceBox.DiceBox
      VB:
      - id: CardBattle.Core.Actions.Derived.DiceBox.#ctor*
        name: DiceBox
        nameWithType: DiceBox.DiceBox
        qualifiedName: CardBattle.Core.Actions.Derived.DiceBox.DiceBox
    isDefinition: true
    commentId: Overload:CardBattle.Core.Actions.Derived.DiceBox.#ctor
  CardBattle.Core.Actions.Derived.DiceBox.Execute*:
    name:
      CSharp:
      - id: CardBattle.Core.Actions.Derived.DiceBox.Execute*
        name: Execute
        nameWithType: DiceBox.Execute
        qualifiedName: CardBattle.Core.Actions.Derived.DiceBox.Execute
      VB:
      - id: CardBattle.Core.Actions.Derived.DiceBox.Execute*
        name: Execute
        nameWithType: DiceBox.Execute
        qualifiedName: CardBattle.Core.Actions.Derived.DiceBox.Execute
    isDefinition: true
    commentId: Overload:CardBattle.Core.Actions.Derived.DiceBox.Execute
  CardBattle.Core.Actions.Derived.DiceBox:
    name:
      CSharp:
      - id: CardBattle.Core.Actions.Derived.DiceBox
        name: DiceBox
        nameWithType: DiceBox
        qualifiedName: CardBattle.Core.Actions.Derived.DiceBox
      VB:
      - id: CardBattle.Core.Actions.Derived.DiceBox
        name: DiceBox
        nameWithType: DiceBox
        qualifiedName: CardBattle.Core.Actions.Derived.DiceBox
    isDefinition: true
    commentId: T:CardBattle.Core.Actions.Derived.DiceBox
  CardBattle.Core.Actions.Derived.FinanceAction.#ctor*:
    name:
      CSharp:
      - id: CardBattle.Core.Actions.Derived.FinanceAction.#ctor*
        name: FinanceAction
        nameWithType: FinanceAction.FinanceAction
        qualifiedName: CardBattle.Core.Actions.Derived.FinanceAction.FinanceAction
      VB:
      - id: CardBattle.Core.Actions.Derived.FinanceAction.#ctor*
        name: FinanceAction
        nameWithType: FinanceAction.FinanceAction
        qualifiedName: CardBattle.Core.Actions.Derived.FinanceAction.FinanceAction
    isDefinition: true
    commentId: Overload:CardBattle.Core.Actions.Derived.FinanceAction.#ctor
  Bot:
    name:
      CSharp:
      - id: Bot
        name: Bot
        nameWithType: Bot
        qualifiedName: Bot
        isExternal: true
      VB:
      - id: Bot
        name: Bot
        nameWithType: Bot
        qualifiedName: Bot
        isExternal: true
    isDefinition: true
  CardBattle.Core.Actions.Derived.FinanceAction.Execute*:
    name:
      CSharp:
      - id: CardBattle.Core.Actions.Derived.FinanceAction.Execute*
        name: Execute
        nameWithType: FinanceAction.Execute
        qualifiedName: CardBattle.Core.Actions.Derived.FinanceAction.Execute
      VB:
      - id: CardBattle.Core.Actions.Derived.FinanceAction.Execute*
        name: Execute
        nameWithType: FinanceAction.Execute
        qualifiedName: CardBattle.Core.Actions.Derived.FinanceAction.Execute
    isDefinition: true
    commentId: Overload:CardBattle.Core.Actions.Derived.FinanceAction.Execute
  CardBattle.Core.Actions.Derived.FinanceAction:
    name:
      CSharp:
      - id: CardBattle.Core.Actions.Derived.FinanceAction
        name: FinanceAction
        nameWithType: FinanceAction
        qualifiedName: CardBattle.Core.Actions.Derived.FinanceAction
      VB:
      - id: CardBattle.Core.Actions.Derived.FinanceAction
        name: FinanceAction
        nameWithType: FinanceAction
        qualifiedName: CardBattle.Core.Actions.Derived.FinanceAction
    isDefinition: true
    parent: CardBattle.Core.Actions.Derived
    commentId: T:CardBattle.Core.Actions.Derived.FinanceAction
  CardBattle.Core.Actions.Derived:
    name:
      CSharp:
      - name: CardBattle.Core.Actions.Derived
        nameWithType: CardBattle.Core.Actions.Derived
        qualifiedName: CardBattle.Core.Actions.Derived
      VB:
      - name: CardBattle.Core.Actions.Derived
        nameWithType: CardBattle.Core.Actions.Derived
        qualifiedName: CardBattle.Core.Actions.Derived
    isDefinition: true
    commentId: N:CardBattle.Core.Actions.Derived
  CardBattle.Core.Actions.Derived.FinanceBox.#ctor*:
    name:
      CSharp:
      - id: CardBattle.Core.Actions.Derived.FinanceBox.#ctor*
        name: FinanceBox
        nameWithType: FinanceBox.FinanceBox
        qualifiedName: CardBattle.Core.Actions.Derived.FinanceBox.FinanceBox
      VB:
      - id: CardBattle.Core.Actions.Derived.FinanceBox.#ctor*
        name: FinanceBox
        nameWithType: FinanceBox.FinanceBox
        qualifiedName: CardBattle.Core.Actions.Derived.FinanceBox.FinanceBox
    isDefinition: true
    commentId: Overload:CardBattle.Core.Actions.Derived.FinanceBox.#ctor
  CardBattle.Core.Actions.Derived.FinanceBox.Execute*:
    name:
      CSharp:
      - id: CardBattle.Core.Actions.Derived.FinanceBox.Execute*
        name: Execute
        nameWithType: FinanceBox.Execute
        qualifiedName: CardBattle.Core.Actions.Derived.FinanceBox.Execute
      VB:
      - id: CardBattle.Core.Actions.Derived.FinanceBox.Execute*
        name: Execute
        nameWithType: FinanceBox.Execute
        qualifiedName: CardBattle.Core.Actions.Derived.FinanceBox.Execute
    isDefinition: true
    commentId: Overload:CardBattle.Core.Actions.Derived.FinanceBox.Execute
  CardBattle.Core.Actions.Derived.FinanceBox:
    name:
      CSharp:
      - id: CardBattle.Core.Actions.Derived.FinanceBox
        name: FinanceBox
        nameWithType: FinanceBox
        qualifiedName: CardBattle.Core.Actions.Derived.FinanceBox
      VB:
      - id: CardBattle.Core.Actions.Derived.FinanceBox
        name: FinanceBox
        nameWithType: FinanceBox
        qualifiedName: CardBattle.Core.Actions.Derived.FinanceBox
    isDefinition: true
    commentId: T:CardBattle.Core.Actions.Derived.FinanceBox
  GameObject:
    name:
      CSharp:
      - id: GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      VB:
      - id: GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
    isDefinition: true
  CardBattle.Core.AI.Bot.AddComponentTo*:
    name:
      CSharp:
      - id: CardBattle.Core.AI.Bot.AddComponentTo*
        name: AddComponentTo
        nameWithType: Bot.AddComponentTo
        qualifiedName: CardBattle.Core.AI.Bot.AddComponentTo
      VB:
      - id: CardBattle.Core.AI.Bot.AddComponentTo*
        name: AddComponentTo
        nameWithType: Bot.AddComponentTo
        qualifiedName: CardBattle.Core.AI.Bot.AddComponentTo
    isDefinition: true
    commentId: Overload:CardBattle.Core.AI.Bot.AddComponentTo
  CardBattle.Core.AI.Bot.StartTurn*:
    name:
      CSharp:
      - id: CardBattle.Core.AI.Bot.StartTurn*
        name: StartTurn
        nameWithType: Bot.StartTurn
        qualifiedName: CardBattle.Core.AI.Bot.StartTurn
      VB:
      - id: CardBattle.Core.AI.Bot.StartTurn*
        name: StartTurn
        nameWithType: Bot.StartTurn
        qualifiedName: CardBattle.Core.AI.Bot.StartTurn
    isDefinition: true
    commentId: Overload:CardBattle.Core.AI.Bot.StartTurn
  CardBattle.Core.Players.Debt.Amount*:
    name:
      CSharp:
      - id: CardBattle.Core.Players.Debt.Amount*
        name: Amount
        nameWithType: Debt.Amount
        qualifiedName: CardBattle.Core.Players.Debt.Amount
      VB:
      - id: CardBattle.Core.Players.Debt.Amount*
        name: Amount
        nameWithType: Debt.Amount
        qualifiedName: CardBattle.Core.Players.Debt.Amount
    isDefinition: true
    commentId: Overload:CardBattle.Core.Players.Debt.Amount
  CardBattle.Core.Players.Debt.Time*:
    name:
      CSharp:
      - id: CardBattle.Core.Players.Debt.Time*
        name: Time
        nameWithType: Debt.Time
        qualifiedName: CardBattle.Core.Players.Debt.Time
      VB:
      - id: CardBattle.Core.Players.Debt.Time*
        name: Time
        nameWithType: Debt.Time
        qualifiedName: CardBattle.Core.Players.Debt.Time
    isDefinition: true
    commentId: Overload:CardBattle.Core.Players.Debt.Time
  CardBattle.Core.Players:
    name:
      CSharp:
      - name: CardBattle.Core.Players
        nameWithType: CardBattle.Core.Players
        qualifiedName: CardBattle.Core.Players
      VB:
      - name: CardBattle.Core.Players
        nameWithType: CardBattle.Core.Players
        qualifiedName: CardBattle.Core.Players
    isDefinition: true
    commentId: N:CardBattle.Core.Players
  CardBattle.Core.Players.PlayerStats:
    name:
      CSharp:
      - id: CardBattle.Core.Players.PlayerStats
        name: PlayerStats
        nameWithType: PlayerStats
        qualifiedName: CardBattle.Core.Players.PlayerStats
      VB:
      - id: CardBattle.Core.Players.PlayerStats
        name: PlayerStats
        nameWithType: PlayerStats
        qualifiedName: CardBattle.Core.Players.PlayerStats
    isDefinition: true
    parent: CardBattle.Core.Players
    commentId: T:CardBattle.Core.Players.PlayerStats
  CardBattle.Core.Players.Debt.Creditor*:
    name:
      CSharp:
      - id: CardBattle.Core.Players.Debt.Creditor*
        name: Creditor
        nameWithType: Debt.Creditor
        qualifiedName: CardBattle.Core.Players.Debt.Creditor
      VB:
      - id: CardBattle.Core.Players.Debt.Creditor*
        name: Creditor
        nameWithType: Debt.Creditor
        qualifiedName: CardBattle.Core.Players.Debt.Creditor
    isDefinition: true
    commentId: Overload:CardBattle.Core.Players.Debt.Creditor
  CardBattle.Core.Players.Debt.Debtor*:
    name:
      CSharp:
      - id: CardBattle.Core.Players.Debt.Debtor*
        name: Debtor
        nameWithType: Debt.Debtor
        qualifiedName: CardBattle.Core.Players.Debt.Debtor
      VB:
      - id: CardBattle.Core.Players.Debt.Debtor*
        name: Debtor
        nameWithType: Debt.Debtor
        qualifiedName: CardBattle.Core.Players.Debt.Debtor
    isDefinition: true
    commentId: Overload:CardBattle.Core.Players.Debt.Debtor
  CardBattle.Core.Players.Debt.#ctor*:
    name:
      CSharp:
      - id: CardBattle.Core.Players.Debt.#ctor*
        name: Debt
        nameWithType: Debt.Debt
        qualifiedName: CardBattle.Core.Players.Debt.Debt
      VB:
      - id: CardBattle.Core.Players.Debt.#ctor*
        name: Debt
        nameWithType: Debt.Debt
        qualifiedName: CardBattle.Core.Players.Debt.Debt
    isDefinition: true
    commentId: Overload:CardBattle.Core.Players.Debt.#ctor
  CardBattle.Core.Players.Debt.UpdateTime*:
    name:
      CSharp:
      - id: CardBattle.Core.Players.Debt.UpdateTime*
        name: UpdateTime
        nameWithType: Debt.UpdateTime
        qualifiedName: CardBattle.Core.Players.Debt.UpdateTime
      VB:
      - id: CardBattle.Core.Players.Debt.UpdateTime*
        name: UpdateTime
        nameWithType: Debt.UpdateTime
        qualifiedName: CardBattle.Core.Players.Debt.UpdateTime
    isDefinition: true
    commentId: Overload:CardBattle.Core.Players.Debt.UpdateTime
  CardBattle.Core.Players.Debt.AddDebt*:
    name:
      CSharp:
      - id: CardBattle.Core.Players.Debt.AddDebt*
        name: AddDebt
        nameWithType: Debt.AddDebt
        qualifiedName: CardBattle.Core.Players.Debt.AddDebt
      VB:
      - id: CardBattle.Core.Players.Debt.AddDebt*
        name: AddDebt
        nameWithType: Debt.AddDebt
        qualifiedName: CardBattle.Core.Players.Debt.AddDebt
    isDefinition: true
    commentId: Overload:CardBattle.Core.Players.Debt.AddDebt
  CardBattle.Core.Players.Debt.PayDebt*:
    name:
      CSharp:
      - id: CardBattle.Core.Players.Debt.PayDebt*
        name: PayDebt
        nameWithType: Debt.PayDebt
        qualifiedName: CardBattle.Core.Players.Debt.PayDebt
      VB:
      - id: CardBattle.Core.Players.Debt.PayDebt*
        name: PayDebt
        nameWithType: Debt.PayDebt
        qualifiedName: CardBattle.Core.Players.Debt.PayDebt
    isDefinition: true
    commentId: Overload:CardBattle.Core.Players.Debt.PayDebt
  CardBattle.Core.Players.Debt:
    name:
      CSharp:
      - id: CardBattle.Core.Players.Debt
        name: Debt
        nameWithType: Debt
        qualifiedName: CardBattle.Core.Players.Debt
      VB:
      - id: CardBattle.Core.Players.Debt
        name: Debt
        nameWithType: Debt
        qualifiedName: CardBattle.Core.Players.Debt
    isDefinition: true
    commentId: T:CardBattle.Core.Players.Debt
  CardBattle.Core.Players.IPlayerStats.Money*:
    name:
      CSharp:
      - id: CardBattle.Core.Players.IPlayerStats.Money*
        name: Money
        nameWithType: IPlayerStats.Money
        qualifiedName: CardBattle.Core.Players.IPlayerStats.Money
      VB:
      - id: CardBattle.Core.Players.IPlayerStats.Money*
        name: Money
        nameWithType: IPlayerStats.Money
        qualifiedName: CardBattle.Core.Players.IPlayerStats.Money
    isDefinition: true
    commentId: Overload:CardBattle.Core.Players.IPlayerStats.Money
  System.Collections.Generic.List{CardBattle.Core.Players.Debt}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: CardBattle.Core.Players.Debt
        name: Debt
        nameWithType: Debt
        qualifiedName: CardBattle.Core.Players.Debt
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: CardBattle.Core.Players.Debt
        name: Debt
        nameWithType: Debt
        qualifiedName: CardBattle.Core.Players.Debt
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{CardBattle.Core.Players.Debt}
  CardBattle.Core.Players.IPlayerStats.Debts*:
    name:
      CSharp:
      - id: CardBattle.Core.Players.IPlayerStats.Debts*
        name: Debts
        nameWithType: IPlayerStats.Debts
        qualifiedName: CardBattle.Core.Players.IPlayerStats.Debts
      VB:
      - id: CardBattle.Core.Players.IPlayerStats.Debts*
        name: Debts
        nameWithType: IPlayerStats.Debts
        qualifiedName: CardBattle.Core.Players.IPlayerStats.Debts
    isDefinition: true
    commentId: Overload:CardBattle.Core.Players.IPlayerStats.Debts
  CardBattle.Core.Players.IPlayerStats.VillageCount*:
    name:
      CSharp:
      - id: CardBattle.Core.Players.IPlayerStats.VillageCount*
        name: VillageCount
        nameWithType: IPlayerStats.VillageCount
        qualifiedName: CardBattle.Core.Players.IPlayerStats.VillageCount
      VB:
      - id: CardBattle.Core.Players.IPlayerStats.VillageCount*
        name: VillageCount
        nameWithType: IPlayerStats.VillageCount
        qualifiedName: CardBattle.Core.Players.IPlayerStats.VillageCount
    isDefinition: true
    commentId: Overload:CardBattle.Core.Players.IPlayerStats.VillageCount
  CardBattle.Core.Players.IPlayerStats.TownCount*:
    name:
      CSharp:
      - id: CardBattle.Core.Players.IPlayerStats.TownCount*
        name: TownCount
        nameWithType: IPlayerStats.TownCount
        qualifiedName: CardBattle.Core.Players.IPlayerStats.TownCount
      VB:
      - id: CardBattle.Core.Players.IPlayerStats.TownCount*
        name: TownCount
        nameWithType: IPlayerStats.TownCount
        qualifiedName: CardBattle.Core.Players.IPlayerStats.TownCount
    isDefinition: true
    commentId: Overload:CardBattle.Core.Players.IPlayerStats.TownCount
  CardBattle.Core.Players.IPlayerStats:
    name:
      CSharp:
      - id: CardBattle.Core.Players.IPlayerStats
        name: IPlayerStats
        nameWithType: IPlayerStats
        qualifiedName: CardBattle.Core.Players.IPlayerStats
      VB:
      - id: CardBattle.Core.Players.IPlayerStats
        name: IPlayerStats
        nameWithType: IPlayerStats
        qualifiedName: CardBattle.Core.Players.IPlayerStats
    isDefinition: true
    parent: CardBattle.Core.Players
    commentId: T:CardBattle.Core.Players.IPlayerStats
  CardBattle.Core.Players.PlayerStats.debts:
    name:
      CSharp:
      - id: CardBattle.Core.Players.PlayerStats.debts
        name: debts
        nameWithType: PlayerStats.debts
        qualifiedName: CardBattle.Core.Players.PlayerStats.debts
      VB:
      - id: CardBattle.Core.Players.PlayerStats.debts
        name: debts
        nameWithType: PlayerStats.debts
        qualifiedName: CardBattle.Core.Players.PlayerStats.debts
    isDefinition: true
    parent: CardBattle.Core.Players.PlayerStats
    commentId: F:CardBattle.Core.Players.PlayerStats.debts
  CardBattle.Core.Players.PlayerStats.revenue:
    name:
      CSharp:
      - id: CardBattle.Core.Players.PlayerStats.revenue
        name: revenue
        nameWithType: PlayerStats.revenue
        qualifiedName: CardBattle.Core.Players.PlayerStats.revenue
      VB:
      - id: CardBattle.Core.Players.PlayerStats.revenue
        name: revenue
        nameWithType: PlayerStats.revenue
        qualifiedName: CardBattle.Core.Players.PlayerStats.revenue
    isDefinition: true
    parent: CardBattle.Core.Players.PlayerStats
    commentId: F:CardBattle.Core.Players.PlayerStats.revenue
  CardBattle.Core.Players.PlayerStats.Money:
    name:
      CSharp:
      - id: CardBattle.Core.Players.PlayerStats.Money
        name: Money
        nameWithType: PlayerStats.Money
        qualifiedName: CardBattle.Core.Players.PlayerStats.Money
      VB:
      - id: CardBattle.Core.Players.PlayerStats.Money
        name: Money
        nameWithType: PlayerStats.Money
        qualifiedName: CardBattle.Core.Players.PlayerStats.Money
    isDefinition: true
    parent: CardBattle.Core.Players.PlayerStats
    commentId: P:CardBattle.Core.Players.PlayerStats.Money
  CardBattle.Core.Players.PlayerStats.Debts:
    name:
      CSharp:
      - id: CardBattle.Core.Players.PlayerStats.Debts
        name: Debts
        nameWithType: PlayerStats.Debts
        qualifiedName: CardBattle.Core.Players.PlayerStats.Debts
      VB:
      - id: CardBattle.Core.Players.PlayerStats.Debts
        name: Debts
        nameWithType: PlayerStats.Debts
        qualifiedName: CardBattle.Core.Players.PlayerStats.Debts
    isDefinition: true
    parent: CardBattle.Core.Players.PlayerStats
    commentId: P:CardBattle.Core.Players.PlayerStats.Debts
  CardBattle.Core.Players.PlayerStats.VillageCount:
    name:
      CSharp:
      - id: CardBattle.Core.Players.PlayerStats.VillageCount
        name: VillageCount
        nameWithType: PlayerStats.VillageCount
        qualifiedName: CardBattle.Core.Players.PlayerStats.VillageCount
      VB:
      - id: CardBattle.Core.Players.PlayerStats.VillageCount
        name: VillageCount
        nameWithType: PlayerStats.VillageCount
        qualifiedName: CardBattle.Core.Players.PlayerStats.VillageCount
    isDefinition: true
    parent: CardBattle.Core.Players.PlayerStats
    commentId: P:CardBattle.Core.Players.PlayerStats.VillageCount
  CardBattle.Core.Players.PlayerStats.TownCount:
    name:
      CSharp:
      - id: CardBattle.Core.Players.PlayerStats.TownCount
        name: TownCount
        nameWithType: PlayerStats.TownCount
        qualifiedName: CardBattle.Core.Players.PlayerStats.TownCount
      VB:
      - id: CardBattle.Core.Players.PlayerStats.TownCount
        name: TownCount
        nameWithType: PlayerStats.TownCount
        qualifiedName: CardBattle.Core.Players.PlayerStats.TownCount
    isDefinition: true
    parent: CardBattle.Core.Players.PlayerStats
    commentId: P:CardBattle.Core.Players.PlayerStats.TownCount
  CardBattle.Core.Players.Player.PlayerIndex*:
    name:
      CSharp:
      - id: CardBattle.Core.Players.Player.PlayerIndex*
        name: PlayerIndex
        nameWithType: Player.PlayerIndex
        qualifiedName: CardBattle.Core.Players.Player.PlayerIndex
      VB:
      - id: CardBattle.Core.Players.Player.PlayerIndex*
        name: PlayerIndex
        nameWithType: Player.PlayerIndex
        qualifiedName: CardBattle.Core.Players.Player.PlayerIndex
    isDefinition: true
    commentId: Overload:CardBattle.Core.Players.Player.PlayerIndex
  CardBattle.Core.Players.Player:
    name:
      CSharp:
      - id: CardBattle.Core.Players.Player
        name: Player
        nameWithType: Player
        qualifiedName: CardBattle.Core.Players.Player
      VB:
      - id: CardBattle.Core.Players.Player
        name: Player
        nameWithType: Player
        qualifiedName: CardBattle.Core.Players.Player
    isDefinition: true
    parent: CardBattle.Core.Players
    commentId: T:CardBattle.Core.Players.Player
  CardBattle.Core.Players.Player.AddComponentTo*:
    name:
      CSharp:
      - id: CardBattle.Core.Players.Player.AddComponentTo*
        name: AddComponentTo
        nameWithType: Player.AddComponentTo
        qualifiedName: CardBattle.Core.Players.Player.AddComponentTo
      VB:
      - id: CardBattle.Core.Players.Player.AddComponentTo*
        name: AddComponentTo
        nameWithType: Player.AddComponentTo
        qualifiedName: CardBattle.Core.Players.Player.AddComponentTo
    isDefinition: true
    commentId: Overload:CardBattle.Core.Players.Player.AddComponentTo
  CardBattle.Core.Players.Revenue:
    name:
      CSharp:
      - id: CardBattle.Core.Players.Revenue
        name: Revenue
        nameWithType: Revenue
        qualifiedName: CardBattle.Core.Players.Revenue
      VB:
      - id: CardBattle.Core.Players.Revenue
        name: Revenue
        nameWithType: Revenue
        qualifiedName: CardBattle.Core.Players.Revenue
    isDefinition: true
    parent: CardBattle.Core.Players
    commentId: T:CardBattle.Core.Players.Revenue
  CardBattle.Core.Players.PlayerStats.Money*:
    name:
      CSharp:
      - id: CardBattle.Core.Players.PlayerStats.Money*
        name: Money
        nameWithType: PlayerStats.Money
        qualifiedName: CardBattle.Core.Players.PlayerStats.Money
      VB:
      - id: CardBattle.Core.Players.PlayerStats.Money*
        name: Money
        nameWithType: PlayerStats.Money
        qualifiedName: CardBattle.Core.Players.PlayerStats.Money
    isDefinition: true
    commentId: Overload:CardBattle.Core.Players.PlayerStats.Money
  CardBattle.Core.Players.IPlayerStats.Money:
    name:
      CSharp:
      - id: CardBattle.Core.Players.IPlayerStats.Money
        name: Money
        nameWithType: IPlayerStats.Money
        qualifiedName: CardBattle.Core.Players.IPlayerStats.Money
      VB:
      - id: CardBattle.Core.Players.IPlayerStats.Money
        name: Money
        nameWithType: IPlayerStats.Money
        qualifiedName: CardBattle.Core.Players.IPlayerStats.Money
    isDefinition: true
    parent: CardBattle.Core.Players.IPlayerStats
    commentId: P:CardBattle.Core.Players.IPlayerStats.Money
  CardBattle.Core.Players.PlayerStats.Debts*:
    name:
      CSharp:
      - id: CardBattle.Core.Players.PlayerStats.Debts*
        name: Debts
        nameWithType: PlayerStats.Debts
        qualifiedName: CardBattle.Core.Players.PlayerStats.Debts
      VB:
      - id: CardBattle.Core.Players.PlayerStats.Debts*
        name: Debts
        nameWithType: PlayerStats.Debts
        qualifiedName: CardBattle.Core.Players.PlayerStats.Debts
    isDefinition: true
    commentId: Overload:CardBattle.Core.Players.PlayerStats.Debts
  CardBattle.Core.Players.IPlayerStats.Debts:
    name:
      CSharp:
      - id: CardBattle.Core.Players.IPlayerStats.Debts
        name: Debts
        nameWithType: IPlayerStats.Debts
        qualifiedName: CardBattle.Core.Players.IPlayerStats.Debts
      VB:
      - id: CardBattle.Core.Players.IPlayerStats.Debts
        name: Debts
        nameWithType: IPlayerStats.Debts
        qualifiedName: CardBattle.Core.Players.IPlayerStats.Debts
    isDefinition: true
    parent: CardBattle.Core.Players.IPlayerStats
    commentId: P:CardBattle.Core.Players.IPlayerStats.Debts
  CardBattle.Core.Players.PlayerStats.VillageCount*:
    name:
      CSharp:
      - id: CardBattle.Core.Players.PlayerStats.VillageCount*
        name: VillageCount
        nameWithType: PlayerStats.VillageCount
        qualifiedName: CardBattle.Core.Players.PlayerStats.VillageCount
      VB:
      - id: CardBattle.Core.Players.PlayerStats.VillageCount*
        name: VillageCount
        nameWithType: PlayerStats.VillageCount
        qualifiedName: CardBattle.Core.Players.PlayerStats.VillageCount
    isDefinition: true
    commentId: Overload:CardBattle.Core.Players.PlayerStats.VillageCount
  CardBattle.Core.Players.IPlayerStats.VillageCount:
    name:
      CSharp:
      - id: CardBattle.Core.Players.IPlayerStats.VillageCount
        name: VillageCount
        nameWithType: IPlayerStats.VillageCount
        qualifiedName: CardBattle.Core.Players.IPlayerStats.VillageCount
      VB:
      - id: CardBattle.Core.Players.IPlayerStats.VillageCount
        name: VillageCount
        nameWithType: IPlayerStats.VillageCount
        qualifiedName: CardBattle.Core.Players.IPlayerStats.VillageCount
    isDefinition: true
    parent: CardBattle.Core.Players.IPlayerStats
    commentId: P:CardBattle.Core.Players.IPlayerStats.VillageCount
  CardBattle.Core.Players.PlayerStats.TownCount*:
    name:
      CSharp:
      - id: CardBattle.Core.Players.PlayerStats.TownCount*
        name: TownCount
        nameWithType: PlayerStats.TownCount
        qualifiedName: CardBattle.Core.Players.PlayerStats.TownCount
      VB:
      - id: CardBattle.Core.Players.PlayerStats.TownCount*
        name: TownCount
        nameWithType: PlayerStats.TownCount
        qualifiedName: CardBattle.Core.Players.PlayerStats.TownCount
    isDefinition: true
    commentId: Overload:CardBattle.Core.Players.PlayerStats.TownCount
  CardBattle.Core.Players.IPlayerStats.TownCount:
    name:
      CSharp:
      - id: CardBattle.Core.Players.IPlayerStats.TownCount
        name: TownCount
        nameWithType: IPlayerStats.TownCount
        qualifiedName: CardBattle.Core.Players.IPlayerStats.TownCount
      VB:
      - id: CardBattle.Core.Players.IPlayerStats.TownCount
        name: TownCount
        nameWithType: IPlayerStats.TownCount
        qualifiedName: CardBattle.Core.Players.IPlayerStats.TownCount
    isDefinition: true
    parent: CardBattle.Core.Players.IPlayerStats
    commentId: P:CardBattle.Core.Players.IPlayerStats.TownCount
  System.Collections.Generic.Dictionary`2:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.Dictionary`2
  System.Collections.Generic.Dictionary{CardBattle.Core.Players.PlayerStats,System.Int32}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: CardBattle.Core.Players.PlayerStats
        name: PlayerStats
        nameWithType: PlayerStats
        qualifiedName: CardBattle.Core.Players.PlayerStats
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: CardBattle.Core.Players.PlayerStats
        name: PlayerStats
        nameWithType: PlayerStats
        qualifiedName: CardBattle.Core.Players.PlayerStats
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{CardBattle.Core.Players.PlayerStats,System.Int32}
  CardBattle.Core.Players.Revenue.Multiplier*:
    name:
      CSharp:
      - id: CardBattle.Core.Players.Revenue.Multiplier*
        name: Multiplier
        nameWithType: Revenue.Multiplier
        qualifiedName: CardBattle.Core.Players.Revenue.Multiplier
      VB:
      - id: CardBattle.Core.Players.Revenue.Multiplier*
        name: Multiplier
        nameWithType: Revenue.Multiplier
        qualifiedName: CardBattle.Core.Players.Revenue.Multiplier
    isDefinition: true
    commentId: Overload:CardBattle.Core.Players.Revenue.Multiplier
  CardBattle.Core.Players.Revenue.#ctor*:
    name:
      CSharp:
      - id: CardBattle.Core.Players.Revenue.#ctor*
        name: Revenue
        nameWithType: Revenue.Revenue
        qualifiedName: CardBattle.Core.Players.Revenue.Revenue
      VB:
      - id: CardBattle.Core.Players.Revenue.#ctor*
        name: Revenue
        nameWithType: Revenue.Revenue
        qualifiedName: CardBattle.Core.Players.Revenue.Revenue
    isDefinition: true
    commentId: Overload:CardBattle.Core.Players.Revenue.#ctor
  CardBattle.Core.Players.Revenue.DoubleMultiplier*:
    name:
      CSharp:
      - id: CardBattle.Core.Players.Revenue.DoubleMultiplier*
        name: DoubleMultiplier
        nameWithType: Revenue.DoubleMultiplier
        qualifiedName: CardBattle.Core.Players.Revenue.DoubleMultiplier
      VB:
      - id: CardBattle.Core.Players.Revenue.DoubleMultiplier*
        name: DoubleMultiplier
        nameWithType: Revenue.DoubleMultiplier
        qualifiedName: CardBattle.Core.Players.Revenue.DoubleMultiplier
    isDefinition: true
    commentId: Overload:CardBattle.Core.Players.Revenue.DoubleMultiplier
  CardBattle.Core.Players.Revenue.QuadrupleMultiplier*:
    name:
      CSharp:
      - id: CardBattle.Core.Players.Revenue.QuadrupleMultiplier*
        name: QuadrupleMultiplier
        nameWithType: Revenue.QuadrupleMultiplier
        qualifiedName: CardBattle.Core.Players.Revenue.QuadrupleMultiplier
      VB:
      - id: CardBattle.Core.Players.Revenue.QuadrupleMultiplier*
        name: QuadrupleMultiplier
        nameWithType: Revenue.QuadrupleMultiplier
        qualifiedName: CardBattle.Core.Players.Revenue.QuadrupleMultiplier
    isDefinition: true
    commentId: Overload:CardBattle.Core.Players.Revenue.QuadrupleMultiplier
  CardBattle.Core.Players.Revenue.ZeroMultiplier*:
    name:
      CSharp:
      - id: CardBattle.Core.Players.Revenue.ZeroMultiplier*
        name: ZeroMultiplier
        nameWithType: Revenue.ZeroMultiplier
        qualifiedName: CardBattle.Core.Players.Revenue.ZeroMultiplier
      VB:
      - id: CardBattle.Core.Players.Revenue.ZeroMultiplier*
        name: ZeroMultiplier
        nameWithType: Revenue.ZeroMultiplier
        qualifiedName: CardBattle.Core.Players.Revenue.ZeroMultiplier
    isDefinition: true
    commentId: Overload:CardBattle.Core.Players.Revenue.ZeroMultiplier
  CardBattle.Core.Players.Revenue.ResetMultiplier*:
    name:
      CSharp:
      - id: CardBattle.Core.Players.Revenue.ResetMultiplier*
        name: ResetMultiplier
        nameWithType: Revenue.ResetMultiplier
        qualifiedName: CardBattle.Core.Players.Revenue.ResetMultiplier
      VB:
      - id: CardBattle.Core.Players.Revenue.ResetMultiplier*
        name: ResetMultiplier
        nameWithType: Revenue.ResetMultiplier
        qualifiedName: CardBattle.Core.Players.Revenue.ResetMultiplier
    isDefinition: true
    commentId: Overload:CardBattle.Core.Players.Revenue.ResetMultiplier
  CardBattle.Core.Players.Revenue.GetRevenue*:
    name:
      CSharp:
      - id: CardBattle.Core.Players.Revenue.GetRevenue*
        name: GetRevenue
        nameWithType: Revenue.GetRevenue
        qualifiedName: CardBattle.Core.Players.Revenue.GetRevenue
      VB:
      - id: CardBattle.Core.Players.Revenue.GetRevenue*
        name: GetRevenue
        nameWithType: Revenue.GetRevenue
        qualifiedName: CardBattle.Core.Players.Revenue.GetRevenue
    isDefinition: true
    commentId: Overload:CardBattle.Core.Players.Revenue.GetRevenue
  System.Collections.Generic.List{Action}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Action
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Action
        name: Action
        nameWithType: Action
        qualifiedName: Action
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Action}
  Player:
    name:
      CSharp:
      - id: Player
        name: Player
        nameWithType: Player
        qualifiedName: Player
        isExternal: true
      VB:
      - id: Player
        name: Player
        nameWithType: Player
        qualifiedName: Player
        isExternal: true
    isDefinition: true
  CardBattle.Core.Turns.Turn.#ctor*:
    name:
      CSharp:
      - id: CardBattle.Core.Turns.Turn.#ctor*
        name: Turn
        nameWithType: Turn.Turn
        qualifiedName: CardBattle.Core.Turns.Turn.Turn
      VB:
      - id: CardBattle.Core.Turns.Turn.#ctor*
        name: Turn
        nameWithType: Turn.Turn
        qualifiedName: CardBattle.Core.Turns.Turn.Turn
    isDefinition: true
    commentId: Overload:CardBattle.Core.Turns.Turn.#ctor
  CardBattle.Core.Turns.Turn.Reset*:
    name:
      CSharp:
      - id: CardBattle.Core.Turns.Turn.Reset*
        name: Reset
        nameWithType: Turn.Reset
        qualifiedName: CardBattle.Core.Turns.Turn.Reset
      VB:
      - id: CardBattle.Core.Turns.Turn.Reset*
        name: Reset
        nameWithType: Turn.Reset
        qualifiedName: CardBattle.Core.Turns.Turn.Reset
    isDefinition: true
    commentId: Overload:CardBattle.Core.Turns.Turn.Reset
  CardBattle.Core.Turns.Turn:
    name:
      CSharp:
      - id: CardBattle.Core.Turns.Turn
        name: Turn
        nameWithType: Turn
        qualifiedName: CardBattle.Core.Turns.Turn
      VB:
      - id: CardBattle.Core.Turns.Turn
        name: Turn
        nameWithType: Turn
        qualifiedName: CardBattle.Core.Turns.Turn
    isDefinition: true
    commentId: T:CardBattle.Core.Turns.Turn
  CardStack`1:
    name:
      CSharp:
      - id: CardStack`1
        name: CardStack
        nameWithType: CardStack
        qualifiedName: CardStack
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: CardStack`1
        name: CardStack
        nameWithType: CardStack
        qualifiedName: CardStack
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: '!:CardStack`1'
  CardStack{Card}:
    name:
      CSharp:
      - id: CardStack`1
        name: CardStack
        nameWithType: CardStack
        qualifiedName: CardStack
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Card
        name: Card
        nameWithType: Card
        qualifiedName: Card
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: CardStack`1
        name: CardStack
        nameWithType: CardStack
        qualifiedName: CardStack
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Card
        name: Card
        nameWithType: Card
        qualifiedName: Card
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: CardStack`1
    commentId: '!:CardStack{Card}'
  CardBattle.Core.Turns.TurnManager.Init*:
    name:
      CSharp:
      - id: CardBattle.Core.Turns.TurnManager.Init*
        name: Init
        nameWithType: TurnManager.Init
        qualifiedName: CardBattle.Core.Turns.TurnManager.Init
      VB:
      - id: CardBattle.Core.Turns.TurnManager.Init*
        name: Init
        nameWithType: TurnManager.Init
        qualifiedName: CardBattle.Core.Turns.TurnManager.Init
    isDefinition: true
    commentId: Overload:CardBattle.Core.Turns.TurnManager.Init
  CardBattle.Core.Turns.TurnManager.CurrentPlayer*:
    name:
      CSharp:
      - id: CardBattle.Core.Turns.TurnManager.CurrentPlayer*
        name: CurrentPlayer
        nameWithType: TurnManager.CurrentPlayer
        qualifiedName: CardBattle.Core.Turns.TurnManager.CurrentPlayer
      VB:
      - id: CardBattle.Core.Turns.TurnManager.CurrentPlayer*
        name: CurrentPlayer
        nameWithType: TurnManager.CurrentPlayer
        qualifiedName: CardBattle.Core.Turns.TurnManager.CurrentPlayer
    isDefinition: true
    commentId: Overload:CardBattle.Core.Turns.TurnManager.CurrentPlayer
  CardBattle.Core.Turns.TurnManager.OpponentPlayer*:
    name:
      CSharp:
      - id: CardBattle.Core.Turns.TurnManager.OpponentPlayer*
        name: OpponentPlayer
        nameWithType: TurnManager.OpponentPlayer
        qualifiedName: CardBattle.Core.Turns.TurnManager.OpponentPlayer
      VB:
      - id: CardBattle.Core.Turns.TurnManager.OpponentPlayer*
        name: OpponentPlayer
        nameWithType: TurnManager.OpponentPlayer
        qualifiedName: CardBattle.Core.Turns.TurnManager.OpponentPlayer
    isDefinition: true
    commentId: Overload:CardBattle.Core.Turns.TurnManager.OpponentPlayer
  CardBattle.Core.Turns.TurnManager.Bot*:
    name:
      CSharp:
      - id: CardBattle.Core.Turns.TurnManager.Bot*
        name: Bot
        nameWithType: TurnManager.Bot
        qualifiedName: CardBattle.Core.Turns.TurnManager.Bot
      VB:
      - id: CardBattle.Core.Turns.TurnManager.Bot*
        name: Bot
        nameWithType: TurnManager.Bot
        qualifiedName: CardBattle.Core.Turns.TurnManager.Bot
    isDefinition: true
    commentId: Overload:CardBattle.Core.Turns.TurnManager.Bot
  CardBattle.Core.Turns.TurnManager.FirstTurn*:
    name:
      CSharp:
      - id: CardBattle.Core.Turns.TurnManager.FirstTurn*
        name: FirstTurn
        nameWithType: TurnManager.FirstTurn
        qualifiedName: CardBattle.Core.Turns.TurnManager.FirstTurn
      VB:
      - id: CardBattle.Core.Turns.TurnManager.FirstTurn*
        name: FirstTurn
        nameWithType: TurnManager.FirstTurn
        qualifiedName: CardBattle.Core.Turns.TurnManager.FirstTurn
    isDefinition: true
    commentId: Overload:CardBattle.Core.Turns.TurnManager.FirstTurn
  CardBattle.Core.Turns.TurnManager.NextTurn*:
    name:
      CSharp:
      - id: CardBattle.Core.Turns.TurnManager.NextTurn*
        name: NextTurn
        nameWithType: TurnManager.NextTurn
        qualifiedName: CardBattle.Core.Turns.TurnManager.NextTurn
      VB:
      - id: CardBattle.Core.Turns.TurnManager.NextTurn*
        name: NextTurn
        nameWithType: TurnManager.NextTurn
        qualifiedName: CardBattle.Core.Turns.TurnManager.NextTurn
    isDefinition: true
    commentId: Overload:CardBattle.Core.Turns.TurnManager.NextTurn
  CardBattle.Core.Turns.TurnManager:
    name:
      CSharp:
      - id: CardBattle.Core.Turns.TurnManager
        name: TurnManager
        nameWithType: TurnManager
        qualifiedName: CardBattle.Core.Turns.TurnManager
      VB:
      - id: CardBattle.Core.Turns.TurnManager
        name: TurnManager
        nameWithType: TurnManager
        qualifiedName: CardBattle.Core.Turns.TurnManager
    isDefinition: true
    commentId: T:CardBattle.Core.Turns.TurnManager
  CardBattle.Core.Turns:
    name:
      CSharp:
      - name: CardBattle.Core.Turns
        nameWithType: CardBattle.Core.Turns
        qualifiedName: CardBattle.Core.Turns
      VB:
      - name: CardBattle.Core.Turns
        nameWithType: CardBattle.Core.Turns
        qualifiedName: CardBattle.Core.Turns
    isDefinition: true
    commentId: N:CardBattle.Core.Turns
  CardBattle.Display.HUD:
    name:
      CSharp:
      - id: CardBattle.Display.HUD
        name: HUD
        nameWithType: HUD
        qualifiedName: CardBattle.Display.HUD
      VB:
      - id: CardBattle.Display.HUD
        name: HUD
        nameWithType: HUD
        qualifiedName: CardBattle.Display.HUD
    isDefinition: true
    commentId: T:CardBattle.Display.HUD
  CardBattle.Display.ReplaceWith:
    name:
      CSharp:
      - id: CardBattle.Display.ReplaceWith
        name: ReplaceWith
        nameWithType: ReplaceWith
        qualifiedName: CardBattle.Display.ReplaceWith
      VB:
      - id: CardBattle.Display.ReplaceWith
        name: ReplaceWith
        nameWithType: ReplaceWith
        qualifiedName: CardBattle.Display.ReplaceWith
    isDefinition: true
    commentId: T:CardBattle.Display.ReplaceWith
  CardBattle.Display:
    name:
      CSharp:
      - name: CardBattle.Display
        nameWithType: CardBattle.Display
        qualifiedName: CardBattle.Display
      VB:
      - name: CardBattle.Display
        nameWithType: CardBattle.Display
        qualifiedName: CardBattle.Display
    isDefinition: true
    commentId: N:CardBattle.Display
