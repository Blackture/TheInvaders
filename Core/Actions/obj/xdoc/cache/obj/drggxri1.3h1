id: cs.temp.dll
language: CSharp
name:
  Default: cs.temp.dll
qualifiedName:
  Default: cs.temp.dll
type: Assembly
modifiers: {}
items:
- id: CardBattle.Core
  commentId: N:CardBattle.Core
  language: CSharp
  name:
    CSharp: CardBattle.Core
    VB: CardBattle.Core
  nameWithType:
    CSharp: CardBattle.Core
    VB: CardBattle.Core
  qualifiedName:
    CSharp: CardBattle.Core
    VB: CardBattle.Core
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: CardBattle.Core.COLOR
    commentId: T:CardBattle.Core.COLOR
    language: CSharp
    name:
      CSharp: COLOR
      VB: COLOR
    nameWithType:
      CSharp: COLOR
      VB: COLOR
    qualifiedName:
      CSharp: CardBattle.Core.COLOR
      VB: CardBattle.Core.COLOR
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: CardBattle.Core
    source:
      id: COLOR
      path: ''
      startLine: 8
    syntax:
      content:
        CSharp: public enum COLOR
        VB: Public Enum COLOR
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: CardBattle.Core.COLOR.WHITE
      commentId: F:CardBattle.Core.COLOR.WHITE
      language: CSharp
      name:
        CSharp: WHITE
        VB: WHITE
      nameWithType:
        CSharp: COLOR.WHITE
        VB: COLOR.WHITE
      qualifiedName:
        CSharp: CardBattle.Core.COLOR.WHITE
        VB: CardBattle.Core.COLOR.WHITE
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core
      source:
        id: WHITE
        path: ''
        startLine: 10
      syntax:
        content:
          CSharp: WHITE = 0
          VB: WHITE = 0
        return:
          type: CardBattle.Core.COLOR
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: CardBattle.Core.COLOR.RED
      commentId: F:CardBattle.Core.COLOR.RED
      language: CSharp
      name:
        CSharp: RED
        VB: RED
      nameWithType:
        CSharp: COLOR.RED
        VB: COLOR.RED
      qualifiedName:
        CSharp: CardBattle.Core.COLOR.RED
        VB: CardBattle.Core.COLOR.RED
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core
      source:
        id: RED
        path: ''
        startLine: 11
      syntax:
        content:
          CSharp: RED = 1
          VB: RED = 1
        return:
          type: CardBattle.Core.COLOR
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: CardBattle.Core.COLOR.BLUE
      commentId: F:CardBattle.Core.COLOR.BLUE
      language: CSharp
      name:
        CSharp: BLUE
        VB: BLUE
      nameWithType:
        CSharp: COLOR.BLUE
        VB: COLOR.BLUE
      qualifiedName:
        CSharp: CardBattle.Core.COLOR.BLUE
        VB: CardBattle.Core.COLOR.BLUE
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core
      source:
        id: BLUE
        path: ''
        startLine: 12
      syntax:
        content:
          CSharp: BLUE = 2
          VB: BLUE = 2
        return:
          type: CardBattle.Core.COLOR
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: CardBattle.Core.COLOR.GREEN
      commentId: F:CardBattle.Core.COLOR.GREEN
      language: CSharp
      name:
        CSharp: GREEN
        VB: GREEN
      nameWithType:
        CSharp: COLOR.GREEN
        VB: COLOR.GREEN
      qualifiedName:
        CSharp: CardBattle.Core.COLOR.GREEN
        VB: CardBattle.Core.COLOR.GREEN
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core
      source:
        id: GREEN
        path: ''
        startLine: 13
      syntax:
        content:
          CSharp: GREEN = 3
          VB: GREEN = 3
        return:
          type: CardBattle.Core.COLOR
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: CardBattle.Core.MULTIPLIER
    commentId: T:CardBattle.Core.MULTIPLIER
    language: CSharp
    name:
      CSharp: MULTIPLIER
      VB: MULTIPLIER
    nameWithType:
      CSharp: MULTIPLIER
      VB: MULTIPLIER
    qualifiedName:
      CSharp: CardBattle.Core.MULTIPLIER
      VB: CardBattle.Core.MULTIPLIER
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: CardBattle.Core
    source:
      id: MULTIPLIER
      path: ''
      startLine: 16
    syntax:
      content:
        CSharp: public enum MULTIPLIER
        VB: Public Enum MULTIPLIER
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: CardBattle.Core.MULTIPLIER.ZERO
      commentId: F:CardBattle.Core.MULTIPLIER.ZERO
      language: CSharp
      name:
        CSharp: ZERO
        VB: ZERO
      nameWithType:
        CSharp: MULTIPLIER.ZERO
        VB: MULTIPLIER.ZERO
      qualifiedName:
        CSharp: CardBattle.Core.MULTIPLIER.ZERO
        VB: CardBattle.Core.MULTIPLIER.ZERO
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core
      source:
        id: ZERO
        path: ''
        startLine: 18
      syntax:
        content:
          CSharp: ZERO = 0
          VB: ZERO = 0
        return:
          type: CardBattle.Core.MULTIPLIER
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: CardBattle.Core.MULTIPLIER.NONE
      commentId: F:CardBattle.Core.MULTIPLIER.NONE
      language: CSharp
      name:
        CSharp: NONE
        VB: NONE
      nameWithType:
        CSharp: MULTIPLIER.NONE
        VB: MULTIPLIER.NONE
      qualifiedName:
        CSharp: CardBattle.Core.MULTIPLIER.NONE
        VB: CardBattle.Core.MULTIPLIER.NONE
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core
      source:
        id: NONE
        path: ''
        startLine: 19
      syntax:
        content:
          CSharp: NONE = 1
          VB: NONE = 1
        return:
          type: CardBattle.Core.MULTIPLIER
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: CardBattle.Core.MULTIPLIER.DOUBLE
      commentId: F:CardBattle.Core.MULTIPLIER.DOUBLE
      language: CSharp
      name:
        CSharp: DOUBLE
        VB: DOUBLE
      nameWithType:
        CSharp: MULTIPLIER.DOUBLE
        VB: MULTIPLIER.DOUBLE
      qualifiedName:
        CSharp: CardBattle.Core.MULTIPLIER.DOUBLE
        VB: CardBattle.Core.MULTIPLIER.DOUBLE
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core
      source:
        id: DOUBLE
        path: ''
        startLine: 20
      syntax:
        content:
          CSharp: DOUBLE = 2
          VB: DOUBLE = 2
        return:
          type: CardBattle.Core.MULTIPLIER
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: CardBattle.Core.MULTIPLIER.QUADRUPLE
      commentId: F:CardBattle.Core.MULTIPLIER.QUADRUPLE
      language: CSharp
      name:
        CSharp: QUADRUPLE
        VB: QUADRUPLE
      nameWithType:
        CSharp: MULTIPLIER.QUADRUPLE
        VB: MULTIPLIER.QUADRUPLE
      qualifiedName:
        CSharp: CardBattle.Core.MULTIPLIER.QUADRUPLE
        VB: CardBattle.Core.MULTIPLIER.QUADRUPLE
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core
      source:
        id: QUADRUPLE
        path: ''
        startLine: 21
      syntax:
        content:
          CSharp: QUADRUPLE = 3
          VB: QUADRUPLE = 3
        return:
          type: CardBattle.Core.MULTIPLIER
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: CardBattle.Core.DIRECTION
    commentId: T:CardBattle.Core.DIRECTION
    language: CSharp
    name:
      CSharp: DIRECTION
      VB: DIRECTION
    nameWithType:
      CSharp: DIRECTION
      VB: DIRECTION
    qualifiedName:
      CSharp: CardBattle.Core.DIRECTION
      VB: CardBattle.Core.DIRECTION
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: CardBattle.Core
    source:
      id: DIRECTION
      path: ''
      startLine: 35
    summary: "\n<ul><li></li><li></li></ul>\n\n"
    example: []
    syntax:
      content:
        CSharp: public enum DIRECTION
        VB: Public Enum DIRECTION
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: CardBattle.Core.DIRECTION.NE
      commentId: F:CardBattle.Core.DIRECTION.NE
      language: CSharp
      name:
        CSharp: NE
        VB: NE
      nameWithType:
        CSharp: DIRECTION.NE
        VB: DIRECTION.NE
      qualifiedName:
        CSharp: CardBattle.Core.DIRECTION.NE
        VB: CardBattle.Core.DIRECTION.NE
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core
      source:
        id: NE
        path: ''
        startLine: 37
      syntax:
        content:
          CSharp: NE = 0
          VB: NE = 0
        return:
          type: CardBattle.Core.DIRECTION
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: CardBattle.Core.DIRECTION.E
      commentId: F:CardBattle.Core.DIRECTION.E
      language: CSharp
      name:
        CSharp: E
        VB: E
      nameWithType:
        CSharp: DIRECTION.E
        VB: DIRECTION.E
      qualifiedName:
        CSharp: CardBattle.Core.DIRECTION.E
        VB: CardBattle.Core.DIRECTION.E
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core
      source:
        id: E
        path: ''
        startLine: 38
      syntax:
        content:
          CSharp: E = 1
          VB: E = 1
        return:
          type: CardBattle.Core.DIRECTION
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: CardBattle.Core.DIRECTION.SE
      commentId: F:CardBattle.Core.DIRECTION.SE
      language: CSharp
      name:
        CSharp: SE
        VB: SE
      nameWithType:
        CSharp: DIRECTION.SE
        VB: DIRECTION.SE
      qualifiedName:
        CSharp: CardBattle.Core.DIRECTION.SE
        VB: CardBattle.Core.DIRECTION.SE
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core
      source:
        id: SE
        path: ''
        startLine: 39
      syntax:
        content:
          CSharp: SE = 2
          VB: SE = 2
        return:
          type: CardBattle.Core.DIRECTION
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: CardBattle.Core.DIRECTION.SW
      commentId: F:CardBattle.Core.DIRECTION.SW
      language: CSharp
      name:
        CSharp: SW
        VB: SW
      nameWithType:
        CSharp: DIRECTION.SW
        VB: DIRECTION.SW
      qualifiedName:
        CSharp: CardBattle.Core.DIRECTION.SW
        VB: CardBattle.Core.DIRECTION.SW
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core
      source:
        id: SW
        path: ''
        startLine: 40
      syntax:
        content:
          CSharp: SW = 3
          VB: SW = 3
        return:
          type: CardBattle.Core.DIRECTION
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: CardBattle.Core.DIRECTION.W
      commentId: F:CardBattle.Core.DIRECTION.W
      language: CSharp
      name:
        CSharp: W
        VB: W
      nameWithType:
        CSharp: DIRECTION.W
        VB: DIRECTION.W
      qualifiedName:
        CSharp: CardBattle.Core.DIRECTION.W
        VB: CardBattle.Core.DIRECTION.W
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core
      source:
        id: W
        path: ''
        startLine: 41
      syntax:
        content:
          CSharp: W = 4
          VB: W = 4
        return:
          type: CardBattle.Core.DIRECTION
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: CardBattle.Core.DIRECTION.NW
      commentId: F:CardBattle.Core.DIRECTION.NW
      language: CSharp
      name:
        CSharp: NW
        VB: NW
      nameWithType:
        CSharp: DIRECTION.NW
        VB: DIRECTION.NW
      qualifiedName:
        CSharp: CardBattle.Core.DIRECTION.NW
        VB: CardBattle.Core.DIRECTION.NW
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core
      source:
        id: NW
        path: ''
        startLine: 42
      syntax:
        content:
          CSharp: NW = 5
          VB: NW = 5
        return:
          type: CardBattle.Core.DIRECTION
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: CardBattle.Core.DIRECTION.N
      commentId: F:CardBattle.Core.DIRECTION.N
      language: CSharp
      name:
        CSharp: N
        VB: N
      nameWithType:
        CSharp: DIRECTION.N
        VB: DIRECTION.N
      qualifiedName:
        CSharp: CardBattle.Core.DIRECTION.N
        VB: CardBattle.Core.DIRECTION.N
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core
      source:
        id: N
        path: ''
        startLine: 43
      syntax:
        content:
          CSharp: N = 6
          VB: N = 6
        return:
          type: CardBattle.Core.DIRECTION
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: CardBattle.Core.DIRECTION.S
      commentId: F:CardBattle.Core.DIRECTION.S
      language: CSharp
      name:
        CSharp: S
        VB: S
      nameWithType:
        CSharp: DIRECTION.S
        VB: DIRECTION.S
      qualifiedName:
        CSharp: CardBattle.Core.DIRECTION.S
        VB: CardBattle.Core.DIRECTION.S
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core
      source:
        id: S
        path: ''
        startLine: 44
      syntax:
        content:
          CSharp: S = 7
          VB: S = 7
        return:
          type: CardBattle.Core.DIRECTION
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: CardBattle.Core.MatchType
    commentId: T:CardBattle.Core.MatchType
    language: CSharp
    name:
      CSharp: MatchType
      VB: MatchType
    nameWithType:
      CSharp: MatchType
      VB: MatchType
    qualifiedName:
      CSharp: CardBattle.Core.MatchType
      VB: CardBattle.Core.MatchType
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: CardBattle.Core
    source:
      id: MatchType
      path: ''
      startLine: 47
    syntax:
      content:
        CSharp: public enum MatchType
        VB: Public Enum MatchType
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: CardBattle.Core.MatchType.Quickmatch
      commentId: F:CardBattle.Core.MatchType.Quickmatch
      language: CSharp
      name:
        CSharp: Quickmatch
        VB: Quickmatch
      nameWithType:
        CSharp: MatchType.Quickmatch
        VB: MatchType.Quickmatch
      qualifiedName:
        CSharp: CardBattle.Core.MatchType.Quickmatch
        VB: CardBattle.Core.MatchType.Quickmatch
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core
      source:
        id: Quickmatch
        path: ''
        startLine: 49
      syntax:
        content:
          CSharp: Quickmatch = 0
          VB: Quickmatch = 0
        return:
          type: CardBattle.Core.MatchType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: CardBattle.Core.MatchType.Normal
      commentId: F:CardBattle.Core.MatchType.Normal
      language: CSharp
      name:
        CSharp: Normal
        VB: Normal
      nameWithType:
        CSharp: MatchType.Normal
        VB: MatchType.Normal
      qualifiedName:
        CSharp: CardBattle.Core.MatchType.Normal
        VB: CardBattle.Core.MatchType.Normal
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core
      source:
        id: Normal
        path: ''
        startLine: 50
      syntax:
        content:
          CSharp: Normal = 1
          VB: Normal = 1
        return:
          type: CardBattle.Core.MatchType
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: CardBattle.Core.DIFFICULTY
    commentId: T:CardBattle.Core.DIFFICULTY
    language: CSharp
    name:
      CSharp: DIFFICULTY
      VB: DIFFICULTY
    nameWithType:
      CSharp: DIFFICULTY
      VB: DIFFICULTY
    qualifiedName:
      CSharp: CardBattle.Core.DIFFICULTY
      VB: CardBattle.Core.DIFFICULTY
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: CardBattle.Core
    source:
      id: DIFFICULTY
      path: ''
      startLine: 53
    syntax:
      content:
        CSharp: public enum DIFFICULTY
        VB: Public Enum DIFFICULTY
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: CardBattle.Core.DIFFICULTY.TRAINING
      commentId: F:CardBattle.Core.DIFFICULTY.TRAINING
      language: CSharp
      name:
        CSharp: TRAINING
        VB: TRAINING
      nameWithType:
        CSharp: DIFFICULTY.TRAINING
        VB: DIFFICULTY.TRAINING
      qualifiedName:
        CSharp: CardBattle.Core.DIFFICULTY.TRAINING
        VB: CardBattle.Core.DIFFICULTY.TRAINING
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core
      source:
        id: TRAINING
        path: ''
        startLine: 55
      syntax:
        content:
          CSharp: TRAINING = 0
          VB: TRAINING = 0
        return:
          type: CardBattle.Core.DIFFICULTY
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: CardBattle.Core.DIFFICULTY.NO_CHALLENGE_AT_ALL
      commentId: F:CardBattle.Core.DIFFICULTY.NO_CHALLENGE_AT_ALL
      language: CSharp
      name:
        CSharp: NO_CHALLENGE_AT_ALL
        VB: NO_CHALLENGE_AT_ALL
      nameWithType:
        CSharp: DIFFICULTY.NO_CHALLENGE_AT_ALL
        VB: DIFFICULTY.NO_CHALLENGE_AT_ALL
      qualifiedName:
        CSharp: CardBattle.Core.DIFFICULTY.NO_CHALLENGE_AT_ALL
        VB: CardBattle.Core.DIFFICULTY.NO_CHALLENGE_AT_ALL
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core
      source:
        id: NO_CHALLENGE_AT_ALL
        path: ''
        startLine: 56
      syntax:
        content:
          CSharp: NO_CHALLENGE_AT_ALL = 1
          VB: NO_CHALLENGE_AT_ALL = 1
        return:
          type: CardBattle.Core.DIFFICULTY
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: CardBattle.Core.DIFFICULTY.EASY
      commentId: F:CardBattle.Core.DIFFICULTY.EASY
      language: CSharp
      name:
        CSharp: EASY
        VB: EASY
      nameWithType:
        CSharp: DIFFICULTY.EASY
        VB: DIFFICULTY.EASY
      qualifiedName:
        CSharp: CardBattle.Core.DIFFICULTY.EASY
        VB: CardBattle.Core.DIFFICULTY.EASY
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core
      source:
        id: EASY
        path: ''
        startLine: 57
      syntax:
        content:
          CSharp: EASY = 2
          VB: EASY = 2
        return:
          type: CardBattle.Core.DIFFICULTY
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: CardBattle.Core.DIFFICULTY.NORMAL
      commentId: F:CardBattle.Core.DIFFICULTY.NORMAL
      language: CSharp
      name:
        CSharp: NORMAL
        VB: NORMAL
      nameWithType:
        CSharp: DIFFICULTY.NORMAL
        VB: DIFFICULTY.NORMAL
      qualifiedName:
        CSharp: CardBattle.Core.DIFFICULTY.NORMAL
        VB: CardBattle.Core.DIFFICULTY.NORMAL
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core
      source:
        id: NORMAL
        path: ''
        startLine: 58
      syntax:
        content:
          CSharp: NORMAL = 3
          VB: NORMAL = 3
        return:
          type: CardBattle.Core.DIFFICULTY
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: CardBattle.Core.DIFFICULTY.HARD
      commentId: F:CardBattle.Core.DIFFICULTY.HARD
      language: CSharp
      name:
        CSharp: HARD
        VB: HARD
      nameWithType:
        CSharp: DIFFICULTY.HARD
        VB: DIFFICULTY.HARD
      qualifiedName:
        CSharp: CardBattle.Core.DIFFICULTY.HARD
        VB: CardBattle.Core.DIFFICULTY.HARD
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core
      source:
        id: HARD
        path: ''
        startLine: 59
      syntax:
        content:
          CSharp: HARD = 4
          VB: HARD = 4
        return:
          type: CardBattle.Core.DIFFICULTY
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: CardBattle.Core.DIFFICULTY.SERIOUSLY_INSANE
      commentId: F:CardBattle.Core.DIFFICULTY.SERIOUSLY_INSANE
      language: CSharp
      name:
        CSharp: SERIOUSLY_INSANE
        VB: SERIOUSLY_INSANE
      nameWithType:
        CSharp: DIFFICULTY.SERIOUSLY_INSANE
        VB: DIFFICULTY.SERIOUSLY_INSANE
      qualifiedName:
        CSharp: CardBattle.Core.DIFFICULTY.SERIOUSLY_INSANE
        VB: CardBattle.Core.DIFFICULTY.SERIOUSLY_INSANE
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core
      source:
        id: SERIOUSLY_INSANE
        path: ''
        startLine: 60
      syntax:
        content:
          CSharp: SERIOUSLY_INSANE = 5
          VB: SERIOUSLY_INSANE = 5
        return:
          type: CardBattle.Core.DIFFICULTY
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: CardBattle.Core.DIFFICULTY.WHAT_THE_HELL_ARE_YOU_DOING
      commentId: F:CardBattle.Core.DIFFICULTY.WHAT_THE_HELL_ARE_YOU_DOING
      language: CSharp
      name:
        CSharp: WHAT_THE_HELL_ARE_YOU_DOING
        VB: WHAT_THE_HELL_ARE_YOU_DOING
      nameWithType:
        CSharp: DIFFICULTY.WHAT_THE_HELL_ARE_YOU_DOING
        VB: DIFFICULTY.WHAT_THE_HELL_ARE_YOU_DOING
      qualifiedName:
        CSharp: CardBattle.Core.DIFFICULTY.WHAT_THE_HELL_ARE_YOU_DOING
        VB: CardBattle.Core.DIFFICULTY.WHAT_THE_HELL_ARE_YOU_DOING
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core
      source:
        id: WHAT_THE_HELL_ARE_YOU_DOING
        path: ''
        startLine: 61
      syntax:
        content:
          CSharp: WHAT_THE_HELL_ARE_YOU_DOING = 6
          VB: WHAT_THE_HELL_ARE_YOU_DOING = 6
        return:
          type: CardBattle.Core.DIFFICULTY
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
  - id: CardBattle.Core.GameManager
    commentId: T:CardBattle.Core.GameManager
    language: CSharp
    name:
      CSharp: GameManager
      VB: GameManager
    nameWithType:
      CSharp: GameManager
      VB: GameManager
    qualifiedName:
      CSharp: CardBattle.Core.GameManager
      VB: CardBattle.Core.GameManager
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: CardBattle.Core
    source:
      id: GameManager
      path: ''
      startLine: 74
    syntax:
      content:
        CSharp: 'public class GameManager : MonoBehaviour'
        VB: >-
          Public Class GameManager

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: CardBattle.Core.GameManager.instance
      commentId: F:CardBattle.Core.GameManager.instance
      language: CSharp
      name:
        CSharp: instance
        VB: instance
      nameWithType:
        CSharp: GameManager.instance
        VB: GameManager.instance
      qualifiedName:
        CSharp: CardBattle.Core.GameManager.instance
        VB: CardBattle.Core.GameManager.instance
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core
      source:
        id: instance
        path: ''
        startLine: 77
      syntax:
        content:
          CSharp: public static GameManager instance
          VB: Public Shared instance As GameManager
        return:
          type: CardBattle.Core.GameManager
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: CardBattle.Core.GameManager.turnManager
      commentId: F:CardBattle.Core.GameManager.turnManager
      language: CSharp
      name:
        CSharp: turnManager
        VB: turnManager
      nameWithType:
        CSharp: GameManager.turnManager
        VB: GameManager.turnManager
      qualifiedName:
        CSharp: CardBattle.Core.GameManager.turnManager
        VB: CardBattle.Core.GameManager.turnManager
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core
      source:
        id: turnManager
        path: ''
        startLine: 78
      syntax:
        content:
          CSharp: public static TurnManager turnManager
          VB: Public Shared turnManager As TurnManager
        return:
          type: TurnManager
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: CardBattle.Core.GameManager.players
      commentId: F:CardBattle.Core.GameManager.players
      language: CSharp
      name:
        CSharp: players
        VB: players
      nameWithType:
        CSharp: GameManager.players
        VB: GameManager.players
      qualifiedName:
        CSharp: CardBattle.Core.GameManager.players
        VB: CardBattle.Core.GameManager.players
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core
      source:
        id: players
        path: ''
        startLine: 80
      syntax:
        content:
          CSharp: public List<Player> players
          VB: Public players As List(Of Player)
        return:
          type: System.Collections.Generic.List{Player}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.GameManager.bot
      commentId: F:CardBattle.Core.GameManager.bot
      language: CSharp
      name:
        CSharp: bot
        VB: bot
      nameWithType:
        CSharp: GameManager.bot
        VB: GameManager.bot
      qualifiedName:
        CSharp: CardBattle.Core.GameManager.bot
        VB: CardBattle.Core.GameManager.bot
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core
      source:
        id: bot
        path: ''
        startLine: 81
      syntax:
        content:
          CSharp: public Bot bot
          VB: Public bot As Bot
        return:
          type: CardBattle.Core.AI.Bot
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.GameManager.gamemode
      commentId: F:CardBattle.Core.GameManager.gamemode
      language: CSharp
      name:
        CSharp: gamemode
        VB: gamemode
      nameWithType:
        CSharp: GameManager.gamemode
        VB: GameManager.gamemode
      qualifiedName:
        CSharp: CardBattle.Core.GameManager.gamemode
        VB: CardBattle.Core.GameManager.gamemode
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core
      source:
        id: gamemode
        path: ''
        startLine: 83
      syntax:
        content:
          CSharp: public MatchType gamemode
          VB: Public gamemode As MatchType
        return:
          type: CardBattle.Core.MatchType
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.GameManager.difficulty
      commentId: F:CardBattle.Core.GameManager.difficulty
      language: CSharp
      name:
        CSharp: difficulty
        VB: difficulty
      nameWithType:
        CSharp: GameManager.difficulty
        VB: GameManager.difficulty
      qualifiedName:
        CSharp: CardBattle.Core.GameManager.difficulty
        VB: CardBattle.Core.GameManager.difficulty
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core
      source:
        id: difficulty
        path: ''
        startLine: 84
      syntax:
        content:
          CSharp: public DIFFICULTY difficulty
          VB: Public difficulty As DIFFICULTY
        return:
          type: CardBattle.Core.DIFFICULTY
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.GameManager.Awake
      commentId: M:CardBattle.Core.GameManager.Awake
      language: CSharp
      name:
        CSharp: Awake()
        VB: Awake()
      nameWithType:
        CSharp: GameManager.Awake()
        VB: GameManager.Awake()
      qualifiedName:
        CSharp: CardBattle.Core.GameManager.Awake()
        VB: CardBattle.Core.GameManager.Awake()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core
      source:
        id: Awake
        path: ''
        startLine: 86
      syntax:
        content:
          CSharp: public void Awake()
          VB: Public Sub Awake
      overload: CardBattle.Core.GameManager.Awake*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.GameManager.Start
      commentId: M:CardBattle.Core.GameManager.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: GameManager.Start()
        VB: GameManager.Start()
      qualifiedName:
        CSharp: CardBattle.Core.GameManager.Start()
        VB: CardBattle.Core.GameManager.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core
      source:
        id: Start
        path: ''
        startLine: 94
      syntax:
        content:
          CSharp: public void Start()
          VB: Public Sub Start
      overload: CardBattle.Core.GameManager.Start*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.GameManager.Initiate
      commentId: M:CardBattle.Core.GameManager.Initiate
      language: CSharp
      name:
        CSharp: Initiate()
        VB: Initiate()
      nameWithType:
        CSharp: GameManager.Initiate()
        VB: GameManager.Initiate()
      qualifiedName:
        CSharp: CardBattle.Core.GameManager.Initiate()
        VB: CardBattle.Core.GameManager.Initiate()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core
      source:
        id: Initiate
        path: ''
        startLine: 99
      syntax:
        content:
          CSharp: public void Initiate()
          VB: Public Sub Initiate
      overload: CardBattle.Core.GameManager.Initiate*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.GameManager.Initiate(CardBattle.Core.MatchType)
      commentId: M:CardBattle.Core.GameManager.Initiate(CardBattle.Core.MatchType)
      language: CSharp
      name:
        CSharp: Initiate(MatchType)
        VB: Initiate(MatchType)
      nameWithType:
        CSharp: GameManager.Initiate(MatchType)
        VB: GameManager.Initiate(MatchType)
      qualifiedName:
        CSharp: CardBattle.Core.GameManager.Initiate(CardBattle.Core.MatchType)
        VB: CardBattle.Core.GameManager.Initiate(CardBattle.Core.MatchType)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core
      source:
        id: Initiate
        path: ''
        startLine: 105
      syntax:
        content:
          CSharp: public void Initiate(MatchType gamemode)
          VB: Public Sub Initiate(gamemode As MatchType)
        parameters:
        - id: gamemode
          type: CardBattle.Core.MatchType
      overload: CardBattle.Core.GameManager.Initiate*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.GameManager.Initiate(CardBattle.Core.DIFFICULTY)
      commentId: M:CardBattle.Core.GameManager.Initiate(CardBattle.Core.DIFFICULTY)
      language: CSharp
      name:
        CSharp: Initiate(DIFFICULTY)
        VB: Initiate(DIFFICULTY)
      nameWithType:
        CSharp: GameManager.Initiate(DIFFICULTY)
        VB: GameManager.Initiate(DIFFICULTY)
      qualifiedName:
        CSharp: CardBattle.Core.GameManager.Initiate(CardBattle.Core.DIFFICULTY)
        VB: CardBattle.Core.GameManager.Initiate(CardBattle.Core.DIFFICULTY)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core
      source:
        id: Initiate
        path: ''
        startLine: 110
      syntax:
        content:
          CSharp: public void Initiate(DIFFICULTY difficulty)
          VB: Public Sub Initiate(difficulty As DIFFICULTY)
        parameters:
        - id: difficulty
          type: CardBattle.Core.DIFFICULTY
      overload: CardBattle.Core.GameManager.Initiate*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.GameManager.Initiate(System.Collections.Generic.List{GameObject},System.Collections.Generic.List{Photon.Realtime.Player})
      commentId: M:CardBattle.Core.GameManager.Initiate(System.Collections.Generic.List{GameObject},System.Collections.Generic.List{Photon.Realtime.Player})
      language: CSharp
      name:
        CSharp: Initiate(List<GameObject>, List<Photon.Realtime.Player>)
        VB: Initiate(List(Of GameObject), List(Of Photon.Realtime.Player))
      nameWithType:
        CSharp: GameManager.Initiate(List<GameObject>, List<Photon.Realtime.Player>)
        VB: GameManager.Initiate(List(Of GameObject), List(Of Photon.Realtime.Player))
      qualifiedName:
        CSharp: CardBattle.Core.GameManager.Initiate(System.Collections.Generic.List<GameObject>, System.Collections.Generic.List<Photon.Realtime.Player>)
        VB: CardBattle.Core.GameManager.Initiate(System.Collections.Generic.List(Of GameObject), System.Collections.Generic.List(Of Photon.Realtime.Player))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core
      source:
        id: Initiate
        path: ''
        startLine: 115
      syntax:
        content:
          CSharp: public void Initiate(List<GameObject> attachTos, List<Photon.Realtime.Player> networkPlayers)
          VB: Public Sub Initiate(attachTos As List(Of GameObject), networkPlayers As List(Of Photon.Realtime.Player))
        parameters:
        - id: attachTos
          type: System.Collections.Generic.List{GameObject}
        - id: networkPlayers
          type: System.Collections.Generic.List{Photon.Realtime.Player}
      overload: CardBattle.Core.GameManager.Initiate*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: CardBattle.Core.Slider
    commentId: T:CardBattle.Core.Slider
    language: CSharp
    name:
      CSharp: Slider
      VB: Slider
    nameWithType:
      CSharp: Slider
      VB: Slider
    qualifiedName:
      CSharp: CardBattle.Core.Slider
      VB: CardBattle.Core.Slider
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: CardBattle.Core
    source:
      id: Slider
      path: ''
      startLine: 156
    syntax:
      content:
        CSharp: 'public class Slider : MonoBehaviour'
        VB: >-
          Public Class Slider

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: CardBattle.Core.Slider.textArea
      commentId: F:CardBattle.Core.Slider.textArea
      language: CSharp
      name:
        CSharp: textArea
        VB: textArea
      nameWithType:
        CSharp: Slider.textArea
        VB: Slider.textArea
      qualifiedName:
        CSharp: CardBattle.Core.Slider.textArea
        VB: CardBattle.Core.Slider.textArea
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core
      source:
        id: textArea
        path: ''
        startLine: 160
      syntax:
        content:
          CSharp: public Transform textArea
          VB: Public textArea As Transform
        return:
          type: Transform
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Slider.onValueChangedS
      commentId: F:CardBattle.Core.Slider.onValueChangedS
      language: CSharp
      name:
        CSharp: onValueChangedS
        VB: onValueChangedS
      nameWithType:
        CSharp: Slider.onValueChangedS
        VB: Slider.onValueChangedS
      qualifiedName:
        CSharp: CardBattle.Core.Slider.onValueChangedS
        VB: CardBattle.Core.Slider.onValueChangedS
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core
      source:
        id: onValueChangedS
        path: ''
        startLine: 165
      syntax:
        content:
          CSharp: public UnityEvent<string> onValueChangedS
          VB: Public onValueChangedS As UnityEvent(Of String)
        return:
          type: UnityEvent{System.String}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Slider.onValueChangedI
      commentId: F:CardBattle.Core.Slider.onValueChangedI
      language: CSharp
      name:
        CSharp: onValueChangedI
        VB: onValueChangedI
      nameWithType:
        CSharp: Slider.onValueChangedI
        VB: Slider.onValueChangedI
      qualifiedName:
        CSharp: CardBattle.Core.Slider.onValueChangedI
        VB: CardBattle.Core.Slider.onValueChangedI
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core
      source:
        id: onValueChangedI
        path: ''
        startLine: 166
      syntax:
        content:
          CSharp: public UnityEvent<int> onValueChangedI
          VB: Public onValueChangedI As UnityEvent(Of Integer)
        return:
          type: UnityEvent{System.Int32}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Slider.GetCurrent``1
      commentId: M:CardBattle.Core.Slider.GetCurrent``1
      language: CSharp
      name:
        CSharp: GetCurrent<T>()
        VB: GetCurrent(Of T)()
      nameWithType:
        CSharp: Slider.GetCurrent<T>()
        VB: Slider.GetCurrent(Of T)()
      qualifiedName:
        CSharp: CardBattle.Core.Slider.GetCurrent<T>()
        VB: CardBattle.Core.Slider.GetCurrent(Of T)()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core
      source:
        id: GetCurrent
        path: ''
        startLine: 202
      summary: "\nConverts the current index to an enum value\n"
      example: []
      syntax:
        content:
          CSharp: >-
            public T GetCurrent<T>()

                where T : struct, IConvertible
          VB: Public Function GetCurrent(Of T As {Structure, IConvertible}) As T
        typeParameters:
        - id: T
          description: The specific enum
        return:
          type: '{T}'
          description: returns the current value in form of a specific enum
      overload: CardBattle.Core.Slider.GetCurrent*
      exceptions:
      - type: System.Exception
        commentId: T:System.Exception
      modifiers:
        CSharp:
        - public
        VB:
        - Public
      references:
        System.Exception: 
- id: CardBattle.Core.Turns
  commentId: N:CardBattle.Core.Turns
  language: CSharp
  name:
    CSharp: CardBattle.Core.Turns
    VB: CardBattle.Core.Turns
  nameWithType:
    CSharp: CardBattle.Core.Turns
    VB: CardBattle.Core.Turns
  qualifiedName:
    CSharp: CardBattle.Core.Turns
    VB: CardBattle.Core.Turns
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: CardBattle.Core.Turns.QuickMatch
    commentId: T:CardBattle.Core.Turns.QuickMatch
    language: CSharp
    name:
      CSharp: QuickMatch
      VB: QuickMatch
    nameWithType:
      CSharp: QuickMatch
      VB: QuickMatch
    qualifiedName:
      CSharp: CardBattle.Core.Turns.QuickMatch
      VB: CardBattle.Core.Turns.QuickMatch
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: CardBattle.Core.Turns
    source:
      id: QuickMatch
      path: ''
      startLine: 135
    syntax:
      content:
        CSharp: 'public class QuickMatch : MonoBehaviour'
        VB: >-
          Public Class QuickMatch

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: CardBattle.Core.Turns.QuickMatch.FinishTurn
      commentId: M:CardBattle.Core.Turns.QuickMatch.FinishTurn
      language: CSharp
      name:
        CSharp: FinishTurn()
        VB: FinishTurn()
      nameWithType:
        CSharp: QuickMatch.FinishTurn()
        VB: QuickMatch.FinishTurn()
      qualifiedName:
        CSharp: CardBattle.Core.Turns.QuickMatch.FinishTurn()
        VB: CardBattle.Core.Turns.QuickMatch.FinishTurn()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Turns
      source:
        id: FinishTurn
        path: ''
        startLine: 139
      syntax:
        content:
          CSharp: public void FinishTurn()
          VB: Public Sub FinishTurn
      overload: CardBattle.Core.Turns.QuickMatch.FinishTurn*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: CardBattle.Core.Turns.StandardMatch
    commentId: T:CardBattle.Core.Turns.StandardMatch
    language: CSharp
    name:
      CSharp: StandardMatch
      VB: StandardMatch
    nameWithType:
      CSharp: StandardMatch
      VB: StandardMatch
    qualifiedName:
      CSharp: CardBattle.Core.Turns.StandardMatch
      VB: CardBattle.Core.Turns.StandardMatch
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: CardBattle.Core.Turns
    source:
      id: StandardMatch
      path: ''
      startLine: 219
    syntax:
      content:
        CSharp: 'public class StandardMatch : MonoBehaviour'
        VB: >-
          Public Class StandardMatch

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: CardBattle.Core.Turns.Turn
    commentId: T:CardBattle.Core.Turns.Turn
    language: CSharp
    name:
      CSharp: Turn
      VB: Turn
    nameWithType:
      CSharp: Turn
      VB: Turn
    qualifiedName:
      CSharp: CardBattle.Core.Turns.Turn
      VB: CardBattle.Core.Turns.Turn
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: CardBattle.Core.Turns
    source:
      id: Turn
      path: ''
      startLine: 1239
    syntax:
      content:
        CSharp: public class Turn
        VB: Public Class Turn
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: CardBattle.Core.Turns.Turn.turnActions
      commentId: F:CardBattle.Core.Turns.Turn.turnActions
      language: CSharp
      name:
        CSharp: turnActions
        VB: turnActions
      nameWithType:
        CSharp: Turn.turnActions
        VB: Turn.turnActions
      qualifiedName:
        CSharp: CardBattle.Core.Turns.Turn.turnActions
        VB: CardBattle.Core.Turns.Turn.turnActions
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Turns
      source:
        id: turnActions
        path: ''
        startLine: 1242
      syntax:
        content:
          CSharp: public static readonly List<Action> turnActions
          VB: Public Shared ReadOnly turnActions As List(Of Action)
        return:
          type: System.Collections.Generic.List{System.Action}
      modifiers:
        CSharp:
        - public
        - static
        - readonly
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: CardBattle.Core.Turns.Turn.#ctor(Player)
      commentId: M:CardBattle.Core.Turns.Turn.#ctor(Player)
      language: CSharp
      name:
        CSharp: Turn(Player)
        VB: Turn(Player)
      nameWithType:
        CSharp: Turn.Turn(Player)
        VB: Turn.Turn(Player)
      qualifiedName:
        CSharp: CardBattle.Core.Turns.Turn.Turn(Player)
        VB: CardBattle.Core.Turns.Turn.Turn(Player)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Turns
      source:
        id: .ctor
        path: ''
        startLine: 1244
      syntax:
        content:
          CSharp: public Turn(Player player)
          VB: Public Sub New(player As Player)
        parameters:
        - id: player
          type: Player
      overload: CardBattle.Core.Turns.Turn.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Turns.Turn.Reset
      commentId: M:CardBattle.Core.Turns.Turn.Reset
      language: CSharp
      name:
        CSharp: Reset()
        VB: Reset()
      nameWithType:
        CSharp: Turn.Reset()
        VB: Turn.Reset()
      qualifiedName:
        CSharp: CardBattle.Core.Turns.Turn.Reset()
        VB: CardBattle.Core.Turns.Turn.Reset()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Turns
      source:
        id: Reset
        path: ''
        startLine: 1250
      syntax:
        content:
          CSharp: public void Reset()
          VB: Public Sub Reset
      overload: CardBattle.Core.Turns.Turn.Reset*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: CardBattle.Core.Turns.TurnManager
    commentId: T:CardBattle.Core.Turns.TurnManager
    language: CSharp
    name:
      CSharp: TurnManager
      VB: TurnManager
    nameWithType:
      CSharp: TurnManager
      VB: TurnManager
    qualifiedName:
      CSharp: CardBattle.Core.Turns.TurnManager
      VB: CardBattle.Core.Turns.TurnManager
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: CardBattle.Core.Turns
    source:
      id: TurnManager
      path: ''
      startLine: 1269
    syntax:
      content:
        CSharp: 'public class TurnManager : MonoBehaviour'
        VB: >-
          Public Class TurnManager

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: CardBattle.Core.Turns.TurnManager.financeCards
      commentId: F:CardBattle.Core.Turns.TurnManager.financeCards
      language: CSharp
      name:
        CSharp: financeCards
        VB: financeCards
      nameWithType:
        CSharp: TurnManager.financeCards
        VB: TurnManager.financeCards
      qualifiedName:
        CSharp: CardBattle.Core.Turns.TurnManager.financeCards
        VB: CardBattle.Core.Turns.TurnManager.financeCards
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Turns
      source:
        id: financeCards
        path: ''
        startLine: 1271
      syntax:
        content:
          CSharp: public CardStack<Card> financeCards
          VB: Public financeCards As CardStack(Of Card)
        return:
          type: CardStack{Card}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Turns.TurnManager.CurrentPlayer
      commentId: P:CardBattle.Core.Turns.TurnManager.CurrentPlayer
      language: CSharp
      name:
        CSharp: CurrentPlayer
        VB: CurrentPlayer
      nameWithType:
        CSharp: TurnManager.CurrentPlayer
        VB: TurnManager.CurrentPlayer
      qualifiedName:
        CSharp: CardBattle.Core.Turns.TurnManager.CurrentPlayer
        VB: CardBattle.Core.Turns.TurnManager.CurrentPlayer
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Turns
      source:
        id: CurrentPlayer
        path: ''
        startLine: 1275
      syntax:
        content:
          CSharp: public Player CurrentPlayer { get; }
          VB: Public ReadOnly Property CurrentPlayer As Player
        parameters: []
        return:
          type: Player
      overload: CardBattle.Core.Turns.TurnManager.CurrentPlayer*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: CardBattle.Core.Turns.TurnManager.OpponentPlayer
      commentId: P:CardBattle.Core.Turns.TurnManager.OpponentPlayer
      language: CSharp
      name:
        CSharp: OpponentPlayer
        VB: OpponentPlayer
      nameWithType:
        CSharp: TurnManager.OpponentPlayer
        VB: TurnManager.OpponentPlayer
      qualifiedName:
        CSharp: CardBattle.Core.Turns.TurnManager.OpponentPlayer
        VB: CardBattle.Core.Turns.TurnManager.OpponentPlayer
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Turns
      source:
        id: OpponentPlayer
        path: ''
        startLine: 1277
      syntax:
        content:
          CSharp: public Player OpponentPlayer { get; }
          VB: Public ReadOnly Property OpponentPlayer As Player
        parameters: []
        return:
          type: Player
      overload: CardBattle.Core.Turns.TurnManager.OpponentPlayer*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: CardBattle.Core.Turns.TurnManager.Bot
      commentId: P:CardBattle.Core.Turns.TurnManager.Bot
      language: CSharp
      name:
        CSharp: Bot
        VB: Bot
      nameWithType:
        CSharp: TurnManager.Bot
        VB: TurnManager.Bot
      qualifiedName:
        CSharp: CardBattle.Core.Turns.TurnManager.Bot
        VB: CardBattle.Core.Turns.TurnManager.Bot
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Turns
      source:
        id: Bot
        path: ''
        startLine: 1279
      syntax:
        content:
          CSharp: public Bot Bot { get; }
          VB: Public ReadOnly Property Bot As Bot
        parameters: []
        return:
          type: Bot
      overload: CardBattle.Core.Turns.TurnManager.Bot*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: CardBattle.Core.Turns.TurnManager.Init(Bot)
      commentId: M:CardBattle.Core.Turns.TurnManager.Init(Bot)
      language: CSharp
      name:
        CSharp: Init(Bot)
        VB: Init(Bot)
      nameWithType:
        CSharp: TurnManager.Init(Bot)
        VB: TurnManager.Init(Bot)
      qualifiedName:
        CSharp: CardBattle.Core.Turns.TurnManager.Init(Bot)
        VB: CardBattle.Core.Turns.TurnManager.Init(Bot)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Turns
      source:
        id: Init
        path: ''
        startLine: 1281
      syntax:
        content:
          CSharp: public void Init(Bot bot)
          VB: Public Sub Init(bot As Bot)
        parameters:
        - id: bot
          type: Bot
      overload: CardBattle.Core.Turns.TurnManager.Init*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Turns.TurnManager.FirstTurn
      commentId: M:CardBattle.Core.Turns.TurnManager.FirstTurn
      language: CSharp
      name:
        CSharp: FirstTurn()
        VB: FirstTurn()
      nameWithType:
        CSharp: TurnManager.FirstTurn()
        VB: TurnManager.FirstTurn()
      qualifiedName:
        CSharp: CardBattle.Core.Turns.TurnManager.FirstTurn()
        VB: CardBattle.Core.Turns.TurnManager.FirstTurn()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Turns
      source:
        id: FirstTurn
        path: ''
        startLine: 1332
      syntax:
        content:
          CSharp: public Player FirstTurn()
          VB: Public Function FirstTurn As Player
        return:
          type: Player
      overload: CardBattle.Core.Turns.TurnManager.FirstTurn*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Turns.TurnManager.NextTurn
      commentId: M:CardBattle.Core.Turns.TurnManager.NextTurn
      language: CSharp
      name:
        CSharp: NextTurn()
        VB: NextTurn()
      nameWithType:
        CSharp: TurnManager.NextTurn()
        VB: TurnManager.NextTurn()
      qualifiedName:
        CSharp: CardBattle.Core.Turns.TurnManager.NextTurn()
        VB: CardBattle.Core.Turns.TurnManager.NextTurn()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Turns
      source:
        id: NextTurn
        path: ''
        startLine: 1342
      syntax:
        content:
          CSharp: public Player NextTurn()
          VB: Public Function NextTurn As Player
        return:
          type: Player
      overload: CardBattle.Core.Turns.TurnManager.NextTurn*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: CardBattle.Core.Actions
  commentId: N:CardBattle.Core.Actions
  language: CSharp
  name:
    CSharp: CardBattle.Core.Actions
    VB: CardBattle.Core.Actions
  nameWithType:
    CSharp: CardBattle.Core.Actions
    VB: CardBattle.Core.Actions
  qualifiedName:
    CSharp: CardBattle.Core.Actions
    VB: CardBattle.Core.Actions
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: CardBattle.Core.Actions.Action
    commentId: T:CardBattle.Core.Actions.Action
    language: CSharp
    name:
      CSharp: Action
      VB: Action
    nameWithType:
      CSharp: Action
      VB: Action
    qualifiedName:
      CSharp: CardBattle.Core.Actions.Action
      VB: CardBattle.Core.Actions.Action
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: CardBattle.Core.Actions
    source:
      id: Action
      path: ''
      startLine: 234
    syntax:
      content:
        CSharp: public abstract class Action
        VB: Public MustInherit Class Action
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: CardBattle.Core.Actions.Action.isOptional
      commentId: F:CardBattle.Core.Actions.Action.isOptional
      language: CSharp
      name:
        CSharp: isOptional
        VB: isOptional
      nameWithType:
        CSharp: Action.isOptional
        VB: Action.isOptional
      qualifiedName:
        CSharp: CardBattle.Core.Actions.Action.isOptional
        VB: CardBattle.Core.Actions.Action.isOptional
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Actions
      source:
        id: isOptional
        path: ''
        startLine: 236
      syntax:
        content:
          CSharp: public readonly bool isOptional
          VB: Public ReadOnly isOptional As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        - readonly
        VB:
        - Public
        - ReadOnly
    - id: CardBattle.Core.Actions.Action.#ctor
      commentId: M:CardBattle.Core.Actions.Action.#ctor
      language: CSharp
      name:
        CSharp: Action()
        VB: Action()
      nameWithType:
        CSharp: Action.Action()
        VB: Action.Action()
      qualifiedName:
        CSharp: CardBattle.Core.Actions.Action.Action()
        VB: CardBattle.Core.Actions.Action.Action()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Actions
      source:
        id: .ctor
        path: ''
        startLine: 241
      summary: "\nAutomatically sets the action&apos;s optionality to false\n"
      example: []
      syntax:
        content:
          CSharp: public Action()
          VB: Public Sub New
      overload: CardBattle.Core.Actions.Action.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Actions.Action.#ctor(System.Boolean)
      commentId: M:CardBattle.Core.Actions.Action.#ctor(System.Boolean)
      language: CSharp
      name:
        CSharp: Action(Boolean)
        VB: Action(Boolean)
      nameWithType:
        CSharp: Action.Action(Boolean)
        VB: Action.Action(Boolean)
      qualifiedName:
        CSharp: CardBattle.Core.Actions.Action.Action(System.Boolean)
        VB: CardBattle.Core.Actions.Action.Action(System.Boolean)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Actions
      source:
        id: .ctor
        path: ''
        startLine: 245
      syntax:
        content:
          CSharp: public Action(bool isOptional)
          VB: Public Sub New(isOptional As Boolean)
        parameters:
        - id: isOptional
          type: System.Boolean
      overload: CardBattle.Core.Actions.Action.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Actions.Action.Execute
      commentId: M:CardBattle.Core.Actions.Action.Execute
      language: CSharp
      name:
        CSharp: Execute()
        VB: Execute()
      nameWithType:
        CSharp: Action.Execute()
        VB: Action.Execute()
      qualifiedName:
        CSharp: CardBattle.Core.Actions.Action.Execute()
        VB: CardBattle.Core.Actions.Action.Execute()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Actions
      source:
        id: Execute
        path: ''
        startLine: 250
      syntax:
        content:
          CSharp: public abstract void Execute()
          VB: Public MustOverride Sub Execute
      overload: CardBattle.Core.Actions.Action.Execute*
      modifiers:
        CSharp:
        - public
        - abstract
        VB:
        - Public
        - MustOverride
- id: CardBattle.Core.Actions.Derived
  commentId: N:CardBattle.Core.Actions.Derived
  language: CSharp
  name:
    CSharp: CardBattle.Core.Actions.Derived
    VB: CardBattle.Core.Actions.Derived
  nameWithType:
    CSharp: CardBattle.Core.Actions.Derived
    VB: CardBattle.Core.Actions.Derived
  qualifiedName:
    CSharp: CardBattle.Core.Actions.Derived
    VB: CardBattle.Core.Actions.Derived
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: CardBattle.Core.Actions.Derived.Card
    commentId: T:CardBattle.Core.Actions.Derived.Card
    language: CSharp
    name:
      CSharp: Card
      VB: Card
    nameWithType:
      CSharp: Card
      VB: Card
    qualifiedName:
      CSharp: CardBattle.Core.Actions.Derived.Card
      VB: CardBattle.Core.Actions.Derived.Card
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: CardBattle.Core.Actions.Derived
    source:
      id: Card
      path: ''
      startLine: 260
    syntax:
      content:
        CSharp: public class Card
        VB: Public Class Card
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: CardBattle.Core.Actions.Derived.Card.CardTitle
      commentId: P:CardBattle.Core.Actions.Derived.Card.CardTitle
      language: CSharp
      name:
        CSharp: CardTitle
        VB: CardTitle
      nameWithType:
        CSharp: Card.CardTitle
        VB: Card.CardTitle
      qualifiedName:
        CSharp: CardBattle.Core.Actions.Derived.Card.CardTitle
        VB: CardBattle.Core.Actions.Derived.Card.CardTitle
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Actions.Derived
      source:
        id: CardTitle
        path: ''
        startLine: 267
      syntax:
        content:
          CSharp: public string CardTitle { get; }
          VB: Public ReadOnly Property CardTitle As String
        parameters: []
        return:
          type: System.String
      overload: CardBattle.Core.Actions.Derived.Card.CardTitle*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: CardBattle.Core.Actions.Derived.Card.Description
      commentId: P:CardBattle.Core.Actions.Derived.Card.Description
      language: CSharp
      name:
        CSharp: Description
        VB: Description
      nameWithType:
        CSharp: Card.Description
        VB: Card.Description
      qualifiedName:
        CSharp: CardBattle.Core.Actions.Derived.Card.Description
        VB: CardBattle.Core.Actions.Derived.Card.Description
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Actions.Derived
      source:
        id: Description
        path: ''
        startLine: 268
      syntax:
        content:
          CSharp: public string Description { get; }
          VB: Public ReadOnly Property Description As String
        parameters: []
        return:
          type: System.String
      overload: CardBattle.Core.Actions.Derived.Card.Description*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: CardBattle.Core.Actions.Derived.Card.Materials
      commentId: P:CardBattle.Core.Actions.Derived.Card.Materials
      language: CSharp
      name:
        CSharp: Materials
        VB: Materials
      nameWithType:
        CSharp: Card.Materials
        VB: Card.Materials
      qualifiedName:
        CSharp: CardBattle.Core.Actions.Derived.Card.Materials
        VB: CardBattle.Core.Actions.Derived.Card.Materials
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Actions.Derived
      source:
        id: Materials
        path: ''
        startLine: 270
      syntax:
        content:
          CSharp: public List<Material> Materials { get; }
          VB: Public ReadOnly Property Materials As List(Of Material)
        parameters: []
        return:
          type: System.Collections.Generic.List{Material}
      overload: CardBattle.Core.Actions.Derived.Card.Materials*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: CardBattle.Core.Actions.Derived.Card.#ctor(System.String,CardBattle.Core.Actions.Action,System.Collections.Generic.List{Material})
      commentId: M:CardBattle.Core.Actions.Derived.Card.#ctor(System.String,CardBattle.Core.Actions.Action,System.Collections.Generic.List{Material})
      language: CSharp
      name:
        CSharp: Card(String, Action, List<Material>)
        VB: Card(String, Action, List(Of Material))
      nameWithType:
        CSharp: Card.Card(String, Action, List<Material>)
        VB: Card.Card(String, Action, List(Of Material))
      qualifiedName:
        CSharp: CardBattle.Core.Actions.Derived.Card.Card(System.String, CardBattle.Core.Actions.Action, System.Collections.Generic.List<Material>)
        VB: CardBattle.Core.Actions.Derived.Card.Card(System.String, CardBattle.Core.Actions.Action, System.Collections.Generic.List(Of Material))
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Actions.Derived
      source:
        id: .ctor
        path: ''
        startLine: 282
      syntax:
        content:
          CSharp: public Card(string cardTitle, Action action, List<Material> materials)
          VB: Public Sub New(cardTitle As String, action As Action, materials As List(Of Material))
        parameters:
        - id: cardTitle
          type: System.String
        - id: action
          type: CardBattle.Core.Actions.Action
        - id: materials
          type: System.Collections.Generic.List{Material}
      overload: CardBattle.Core.Actions.Derived.Card.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Actions.Derived.Card.Execute
      commentId: M:CardBattle.Core.Actions.Derived.Card.Execute
      language: CSharp
      name:
        CSharp: Execute()
        VB: Execute()
      nameWithType:
        CSharp: Card.Execute()
        VB: Card.Execute()
      qualifiedName:
        CSharp: CardBattle.Core.Actions.Derived.Card.Execute()
        VB: CardBattle.Core.Actions.Derived.Card.Execute()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Actions.Derived
      source:
        id: Execute
        path: ''
        startLine: 289
      syntax:
        content:
          CSharp: public void Execute()
          VB: Public Sub Execute
      overload: CardBattle.Core.Actions.Derived.Card.Execute*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: CardBattle.Core.Actions.Derived.CardStack`1
    commentId: T:CardBattle.Core.Actions.Derived.CardStack`1
    language: CSharp
    name:
      CSharp: CardStack<T>
      VB: CardStack(Of T)
    nameWithType:
      CSharp: CardStack<T>
      VB: CardStack(Of T)
    qualifiedName:
      CSharp: CardBattle.Core.Actions.Derived.CardStack<T>
      VB: CardBattle.Core.Actions.Derived.CardStack(Of T)
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: CardBattle.Core.Actions.Derived
    source:
      id: CardStack
      path: ''
      startLine: 300
    syntax:
      content:
        CSharp: 'public class CardStack<T> : Action where T : Card'
        VB: >-
          Public Class CardStack(Of T As Card)

              Inherits Action
      typeParameters:
      - id: T
    inheritance:
    - System.Object
    - CardBattle.Core.Actions.Action
    inheritedMembers:
    - CardBattle.Core.Actions.Action.isOptional
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: CardBattle.Core.Actions.Derived.CardStack`1.#ctor(System.Collections.Generic.List{`0},System.Boolean)
      commentId: M:CardBattle.Core.Actions.Derived.CardStack`1.#ctor(System.Collections.Generic.List{`0},System.Boolean)
      language: CSharp
      name:
        CSharp: CardStack(List<T>, Boolean)
        VB: CardStack(List(Of T), Boolean)
      nameWithType:
        CSharp: CardStack<T>.CardStack(List<T>, Boolean)
        VB: CardStack(Of T).CardStack(List(Of T), Boolean)
      qualifiedName:
        CSharp: CardBattle.Core.Actions.Derived.CardStack<T>.CardStack(System.Collections.Generic.List<T>, System.Boolean)
        VB: CardBattle.Core.Actions.Derived.CardStack(Of T).CardStack(System.Collections.Generic.List(Of T), System.Boolean)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Actions.Derived
      source:
        id: .ctor
        path: ''
        startLine: 304
      syntax:
        content:
          CSharp: public CardStack(List<T> cards, bool isOptional = false)
          VB: Public Sub New(cards As List(Of T), isOptional As Boolean = False)
        parameters:
        - id: cards
          type: System.Collections.Generic.List{{T}}
        - id: isOptional
          type: System.Boolean
      overload: CardBattle.Core.Actions.Derived.CardStack`1.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Actions.Derived.CardStack`1.Shuffle
      commentId: M:CardBattle.Core.Actions.Derived.CardStack`1.Shuffle
      language: CSharp
      name:
        CSharp: Shuffle()
        VB: Shuffle()
      nameWithType:
        CSharp: CardStack<T>.Shuffle()
        VB: CardStack(Of T).Shuffle()
      qualifiedName:
        CSharp: CardBattle.Core.Actions.Derived.CardStack<T>.Shuffle()
        VB: CardBattle.Core.Actions.Derived.CardStack(Of T).Shuffle()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Actions.Derived
      source:
        id: Shuffle
        path: ''
        startLine: 313
      summary: "\nShuffles this stack of cards\n"
      example: []
      syntax:
        content:
          CSharp: public List<T> Shuffle()
          VB: Public Function Shuffle As List(Of T)
        return:
          type: System.Collections.Generic.List{{T}}
          description: Returns this stack shuffled
      overload: CardBattle.Core.Actions.Derived.CardStack`1.Shuffle*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Actions.Derived.CardStack`1.Shuffle(System.Collections.Generic.List{`0})
      commentId: M:CardBattle.Core.Actions.Derived.CardStack`1.Shuffle(System.Collections.Generic.List{`0})
      language: CSharp
      name:
        CSharp: Shuffle(List<T>)
        VB: Shuffle(List(Of T))
      nameWithType:
        CSharp: CardStack<T>.Shuffle(List<T>)
        VB: CardStack(Of T).Shuffle(List(Of T))
      qualifiedName:
        CSharp: CardBattle.Core.Actions.Derived.CardStack<T>.Shuffle(System.Collections.Generic.List<T>)
        VB: CardBattle.Core.Actions.Derived.CardStack(Of T).Shuffle(System.Collections.Generic.List(Of T))
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Actions.Derived
      source:
        id: Shuffle
        path: ''
        startLine: 330
      summary: "\nShuffles the stack of cards (<code data-dev-comment-type=\"paramref\" class=\"paramref\">cards</code>) inputted.\n"
      example: []
      syntax:
        content:
          CSharp: public List<T> Shuffle(List<T> cards)
          VB: Public Function Shuffle(cards As List(Of T)) As List(Of T)
        parameters:
        - id: cards
          type: System.Collections.Generic.List{{T}}
          description: ''
        return:
          type: System.Collections.Generic.List{{T}}
          description: Return the shuffled stack of cards
      overload: CardBattle.Core.Actions.Derived.CardStack`1.Shuffle*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Actions.Derived.CardStack`1.DrawCard
      commentId: M:CardBattle.Core.Actions.Derived.CardStack`1.DrawCard
      language: CSharp
      name:
        CSharp: DrawCard()
        VB: DrawCard()
      nameWithType:
        CSharp: CardStack<T>.DrawCard()
        VB: CardStack(Of T).DrawCard()
      qualifiedName:
        CSharp: CardBattle.Core.Actions.Derived.CardStack<T>.DrawCard()
        VB: CardBattle.Core.Actions.Derived.CardStack(Of T).DrawCard()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Actions.Derived
      source:
        id: DrawCard
        path: ''
        startLine: 347
      summary: "\nDraws a card and puts it back under the stack of cards\n"
      example: []
      syntax:
        content:
          CSharp: public T DrawCard()
          VB: Public Function DrawCard As T
        return:
          type: '{T}'
          description: Returns the card that was drawn.
      overload: CardBattle.Core.Actions.Derived.CardStack`1.DrawCard*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Actions.Derived.CardStack`1.Execute
      commentId: M:CardBattle.Core.Actions.Derived.CardStack`1.Execute
      language: CSharp
      name:
        CSharp: Execute()
        VB: Execute()
      nameWithType:
        CSharp: CardStack<T>.Execute()
        VB: CardStack(Of T).Execute()
      qualifiedName:
        CSharp: CardBattle.Core.Actions.Derived.CardStack<T>.Execute()
        VB: CardBattle.Core.Actions.Derived.CardStack(Of T).Execute()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Actions.Derived
      source:
        id: Execute
        path: ''
        startLine: 358
      summary: "\nDraws a card and executes the card\n"
      example: []
      syntax:
        content:
          CSharp: public override void Execute()
          VB: Public Overrides Sub Execute
      overload: CardBattle.Core.Actions.Derived.CardStack`1.Execute*
      overridden: CardBattle.Core.Actions.Action.Execute
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: CardBattle.Core.Actions.Derived.ColorDice
    commentId: T:CardBattle.Core.Actions.Derived.ColorDice
    language: CSharp
    name:
      CSharp: ColorDice
      VB: ColorDice
    nameWithType:
      CSharp: ColorDice
      VB: ColorDice
    qualifiedName:
      CSharp: CardBattle.Core.Actions.Derived.ColorDice
      VB: CardBattle.Core.Actions.Derived.ColorDice
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: CardBattle.Core.Actions.Derived
    source:
      id: ColorDice
      path: ''
      startLine: 374
    syntax:
      content:
        CSharp: 'public class ColorDice : Action'
        VB: >-
          Public Class ColorDice

              Inherits Action
    inheritance:
    - System.Object
    - CardBattle.Core.Actions.Action
    inheritedMembers:
    - CardBattle.Core.Actions.Action.isOptional
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: CardBattle.Core.Actions.Derived.ColorDice.#ctor
      commentId: M:CardBattle.Core.Actions.Derived.ColorDice.#ctor
      language: CSharp
      name:
        CSharp: ColorDice()
        VB: ColorDice()
      nameWithType:
        CSharp: ColorDice.ColorDice()
        VB: ColorDice.ColorDice()
      qualifiedName:
        CSharp: CardBattle.Core.Actions.Derived.ColorDice.ColorDice()
        VB: CardBattle.Core.Actions.Derived.ColorDice.ColorDice()
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Actions.Derived
      source:
        id: .ctor
        path: ''
        startLine: 379
      syntax:
        content:
          CSharp: public ColorDice()
          VB: Public Sub New
      overload: CardBattle.Core.Actions.Derived.ColorDice.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Actions.Derived.ColorDice.Execute
      commentId: M:CardBattle.Core.Actions.Derived.ColorDice.Execute
      language: CSharp
      name:
        CSharp: Execute()
        VB: Execute()
      nameWithType:
        CSharp: ColorDice.Execute()
        VB: ColorDice.Execute()
      qualifiedName:
        CSharp: CardBattle.Core.Actions.Derived.ColorDice.Execute()
        VB: CardBattle.Core.Actions.Derived.ColorDice.Execute()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Actions.Derived
      source:
        id: Execute
        path: ''
        startLine: 386
      syntax:
        content:
          CSharp: public override void Execute()
          VB: Public Overrides Sub Execute
      overload: CardBattle.Core.Actions.Derived.ColorDice.Execute*
      overridden: CardBattle.Core.Actions.Action.Execute
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: CardBattle.Core.Actions.Derived.Dice
    commentId: T:CardBattle.Core.Actions.Derived.Dice
    language: CSharp
    name:
      CSharp: Dice
      VB: Dice
    nameWithType:
      CSharp: Dice
      VB: Dice
    qualifiedName:
      CSharp: CardBattle.Core.Actions.Derived.Dice
      VB: CardBattle.Core.Actions.Derived.Dice
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: CardBattle.Core.Actions.Derived
    source:
      id: Dice
      path: ''
      startLine: 446
    syntax:
      content:
        CSharp: 'public class Dice : Action'
        VB: >-
          Public Class Dice

              Inherits Action
    inheritance:
    - System.Object
    - CardBattle.Core.Actions.Action
    inheritedMembers:
    - CardBattle.Core.Actions.Action.isOptional
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: CardBattle.Core.Actions.Derived.Dice.actions
      commentId: F:CardBattle.Core.Actions.Derived.Dice.actions
      language: CSharp
      name:
        CSharp: actions
        VB: actions
      nameWithType:
        CSharp: Dice.actions
        VB: Dice.actions
      qualifiedName:
        CSharp: CardBattle.Core.Actions.Derived.Dice.actions
        VB: CardBattle.Core.Actions.Derived.Dice.actions
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Actions.Derived
      source:
        id: actions
        path: ''
        startLine: 448
      syntax:
        content:
          CSharp: protected Action[] actions
          VB: Protected actions As Action()
        return:
          type: CardBattle.Core.Actions.Action[]
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: CardBattle.Core.Actions.Derived.Dice.#ctor(System.Boolean)
      commentId: M:CardBattle.Core.Actions.Derived.Dice.#ctor(System.Boolean)
      language: CSharp
      name:
        CSharp: Dice(Boolean)
        VB: Dice(Boolean)
      nameWithType:
        CSharp: Dice.Dice(Boolean)
        VB: Dice.Dice(Boolean)
      qualifiedName:
        CSharp: CardBattle.Core.Actions.Derived.Dice.Dice(System.Boolean)
        VB: CardBattle.Core.Actions.Derived.Dice.Dice(System.Boolean)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Actions.Derived
      source:
        id: .ctor
        path: ''
        startLine: 450
      syntax:
        content:
          CSharp: public Dice(bool isOptional = false)
          VB: Public Sub New(isOptional As Boolean = False)
        parameters:
        - id: isOptional
          type: System.Boolean
      overload: CardBattle.Core.Actions.Derived.Dice.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Actions.Derived.Dice.#ctor(CardBattle.Core.Actions.Action[],System.Boolean)
      commentId: M:CardBattle.Core.Actions.Derived.Dice.#ctor(CardBattle.Core.Actions.Action[],System.Boolean)
      language: CSharp
      name:
        CSharp: Dice(Action[], Boolean)
        VB: Dice(Action(), Boolean)
      nameWithType:
        CSharp: Dice.Dice(Action[], Boolean)
        VB: Dice.Dice(Action(), Boolean)
      qualifiedName:
        CSharp: CardBattle.Core.Actions.Derived.Dice.Dice(CardBattle.Core.Actions.Action[], System.Boolean)
        VB: CardBattle.Core.Actions.Derived.Dice.Dice(CardBattle.Core.Actions.Action(), System.Boolean)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Actions.Derived
      source:
        id: .ctor
        path: ''
        startLine: 455
      syntax:
        content:
          CSharp: public Dice(Action[] actions, bool isOptional = false)
          VB: Public Sub New(actions As Action(), isOptional As Boolean = False)
        parameters:
        - id: actions
          type: CardBattle.Core.Actions.Action[]
        - id: isOptional
          type: System.Boolean
      overload: CardBattle.Core.Actions.Derived.Dice.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Actions.Derived.Dice.Throw
      commentId: M:CardBattle.Core.Actions.Derived.Dice.Throw
      language: CSharp
      name:
        CSharp: Throw()
        VB: Throw()
      nameWithType:
        CSharp: Dice.Throw()
        VB: Dice.Throw()
      qualifiedName:
        CSharp: CardBattle.Core.Actions.Derived.Dice.Throw()
        VB: CardBattle.Core.Actions.Derived.Dice.Throw()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Actions.Derived
      source:
        id: Throw
        path: ''
        startLine: 461
      syntax:
        content:
          CSharp: public int Throw()
          VB: Public Function Throw As Integer
        return:
          type: System.Int32
      overload: CardBattle.Core.Actions.Derived.Dice.Throw*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Actions.Derived.Dice.Execute
      commentId: M:CardBattle.Core.Actions.Derived.Dice.Execute
      language: CSharp
      name:
        CSharp: Execute()
        VB: Execute()
      nameWithType:
        CSharp: Dice.Execute()
        VB: Dice.Execute()
      qualifiedName:
        CSharp: CardBattle.Core.Actions.Derived.Dice.Execute()
        VB: CardBattle.Core.Actions.Derived.Dice.Execute()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Actions.Derived
      source:
        id: Execute
        path: ''
        startLine: 467
      syntax:
        content:
          CSharp: public override void Execute()
          VB: Public Overrides Sub Execute
      overload: CardBattle.Core.Actions.Derived.Dice.Execute*
      overridden: CardBattle.Core.Actions.Action.Execute
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: CardBattle.Core.Actions.Derived.DiceBox
    commentId: T:CardBattle.Core.Actions.Derived.DiceBox
    language: CSharp
    name:
      CSharp: DiceBox
      VB: DiceBox
    nameWithType:
      CSharp: DiceBox
      VB: DiceBox
    qualifiedName:
      CSharp: CardBattle.Core.Actions.Derived.DiceBox
      VB: CardBattle.Core.Actions.Derived.DiceBox
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: CardBattle.Core.Actions.Derived
    source:
      id: DiceBox
      path: ''
      startLine: 480
    syntax:
      content:
        CSharp: 'public class DiceBox : Action'
        VB: >-
          Public Class DiceBox

              Inherits Action
    inheritance:
    - System.Object
    - CardBattle.Core.Actions.Action
    inheritedMembers:
    - CardBattle.Core.Actions.Action.isOptional
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: CardBattle.Core.Actions.Derived.DiceBox.OnThrow
      commentId: F:CardBattle.Core.Actions.Derived.DiceBox.OnThrow
      language: CSharp
      name:
        CSharp: OnThrow
        VB: OnThrow
      nameWithType:
        CSharp: DiceBox.OnThrow
        VB: DiceBox.OnThrow
      qualifiedName:
        CSharp: CardBattle.Core.Actions.Derived.DiceBox.OnThrow
        VB: CardBattle.Core.Actions.Derived.DiceBox.OnThrow
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Actions.Derived
      source:
        id: OnThrow
        path: ''
        startLine: 482
      syntax:
        content:
          CSharp: public UnityEvent<int> OnThrow
          VB: Public OnThrow As UnityEvent(Of Integer)
        return:
          type: UnityEvent{System.Int32}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Actions.Derived.DiceBox.#ctor(System.Int32,System.Boolean)
      commentId: M:CardBattle.Core.Actions.Derived.DiceBox.#ctor(System.Int32,System.Boolean)
      language: CSharp
      name:
        CSharp: DiceBox(Int32, Boolean)
        VB: DiceBox(Int32, Boolean)
      nameWithType:
        CSharp: DiceBox.DiceBox(Int32, Boolean)
        VB: DiceBox.DiceBox(Int32, Boolean)
      qualifiedName:
        CSharp: CardBattle.Core.Actions.Derived.DiceBox.DiceBox(System.Int32, System.Boolean)
        VB: CardBattle.Core.Actions.Derived.DiceBox.DiceBox(System.Int32, System.Boolean)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Actions.Derived
      source:
        id: .ctor
        path: ''
        startLine: 485
      syntax:
        content:
          CSharp: public DiceBox(int diceAmount, bool isOptional = false)
          VB: Public Sub New(diceAmount As Integer, isOptional As Boolean = False)
        parameters:
        - id: diceAmount
          type: System.Int32
        - id: isOptional
          type: System.Boolean
      overload: CardBattle.Core.Actions.Derived.DiceBox.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Actions.Derived.DiceBox.Execute
      commentId: M:CardBattle.Core.Actions.Derived.DiceBox.Execute
      language: CSharp
      name:
        CSharp: Execute()
        VB: Execute()
      nameWithType:
        CSharp: DiceBox.Execute()
        VB: DiceBox.Execute()
      qualifiedName:
        CSharp: CardBattle.Core.Actions.Derived.DiceBox.Execute()
        VB: CardBattle.Core.Actions.Derived.DiceBox.Execute()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Actions.Derived
      source:
        id: Execute
        path: ''
        startLine: 493
      syntax:
        content:
          CSharp: public override void Execute()
          VB: Public Overrides Sub Execute
      overload: CardBattle.Core.Actions.Derived.DiceBox.Execute*
      overridden: CardBattle.Core.Actions.Action.Execute
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: CardBattle.Core.Actions.Derived.FinanceAction
    commentId: T:CardBattle.Core.Actions.Derived.FinanceAction
    language: CSharp
    name:
      CSharp: FinanceAction
      VB: FinanceAction
    nameWithType:
      CSharp: FinanceAction
      VB: FinanceAction
    qualifiedName:
      CSharp: CardBattle.Core.Actions.Derived.FinanceAction
      VB: CardBattle.Core.Actions.Derived.FinanceAction
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: CardBattle.Core.Actions.Derived
    source:
      id: FinanceAction
      path: ''
      startLine: 512
    syntax:
      content:
        CSharp: 'public class FinanceAction : Action'
        VB: >-
          Public Class FinanceAction

              Inherits Action
    inheritance:
    - System.Object
    - CardBattle.Core.Actions.Action
    inheritedMembers:
    - CardBattle.Core.Actions.Action.isOptional
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: CardBattle.Core.Actions.Derived.FinanceAction.multiplier
      commentId: F:CardBattle.Core.Actions.Derived.FinanceAction.multiplier
      language: CSharp
      name:
        CSharp: multiplier
        VB: multiplier
      nameWithType:
        CSharp: FinanceAction.multiplier
        VB: FinanceAction.multiplier
      qualifiedName:
        CSharp: CardBattle.Core.Actions.Derived.FinanceAction.multiplier
        VB: CardBattle.Core.Actions.Derived.FinanceAction.multiplier
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Actions.Derived
      source:
        id: multiplier
        path: ''
        startLine: 514
      syntax:
        content:
          CSharp: public MULTIPLIER multiplier
          VB: Public multiplier As MULTIPLIER
        return:
          type: CardBattle.Core.MULTIPLIER
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Actions.Derived.FinanceAction.additionalMoney
      commentId: F:CardBattle.Core.Actions.Derived.FinanceAction.additionalMoney
      language: CSharp
      name:
        CSharp: additionalMoney
        VB: additionalMoney
      nameWithType:
        CSharp: FinanceAction.additionalMoney
        VB: FinanceAction.additionalMoney
      qualifiedName:
        CSharp: CardBattle.Core.Actions.Derived.FinanceAction.additionalMoney
        VB: CardBattle.Core.Actions.Derived.FinanceAction.additionalMoney
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Actions.Derived
      source:
        id: additionalMoney
        path: ''
        startLine: 515
      syntax:
        content:
          CSharp: public int additionalMoney
          VB: Public additionalMoney As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Actions.Derived.FinanceAction.enemyAdditionalMoney
      commentId: F:CardBattle.Core.Actions.Derived.FinanceAction.enemyAdditionalMoney
      language: CSharp
      name:
        CSharp: enemyAdditionalMoney
        VB: enemyAdditionalMoney
      nameWithType:
        CSharp: FinanceAction.enemyAdditionalMoney
        VB: FinanceAction.enemyAdditionalMoney
      qualifiedName:
        CSharp: CardBattle.Core.Actions.Derived.FinanceAction.enemyAdditionalMoney
        VB: CardBattle.Core.Actions.Derived.FinanceAction.enemyAdditionalMoney
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Actions.Derived
      source:
        id: enemyAdditionalMoney
        path: ''
        startLine: 516
      syntax:
        content:
          CSharp: public int enemyAdditionalMoney
          VB: Public enemyAdditionalMoney As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Actions.Derived.FinanceAction.stealMoney
      commentId: F:CardBattle.Core.Actions.Derived.FinanceAction.stealMoney
      language: CSharp
      name:
        CSharp: stealMoney
        VB: stealMoney
      nameWithType:
        CSharp: FinanceAction.stealMoney
        VB: FinanceAction.stealMoney
      qualifiedName:
        CSharp: CardBattle.Core.Actions.Derived.FinanceAction.stealMoney
        VB: CardBattle.Core.Actions.Derived.FinanceAction.stealMoney
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Actions.Derived
      source:
        id: stealMoney
        path: ''
        startLine: 517
      syntax:
        content:
          CSharp: public int stealMoney
          VB: Public stealMoney As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Actions.Derived.FinanceAction.enemyMultiplier
      commentId: F:CardBattle.Core.Actions.Derived.FinanceAction.enemyMultiplier
      language: CSharp
      name:
        CSharp: enemyMultiplier
        VB: enemyMultiplier
      nameWithType:
        CSharp: FinanceAction.enemyMultiplier
        VB: FinanceAction.enemyMultiplier
      qualifiedName:
        CSharp: CardBattle.Core.Actions.Derived.FinanceAction.enemyMultiplier
        VB: CardBattle.Core.Actions.Derived.FinanceAction.enemyMultiplier
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Actions.Derived
      source:
        id: enemyMultiplier
        path: ''
        startLine: 518
      syntax:
        content:
          CSharp: public MULTIPLIER enemyMultiplier
          VB: Public enemyMultiplier As MULTIPLIER
        return:
          type: CardBattle.Core.MULTIPLIER
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Actions.Derived.FinanceAction.#ctor(CardBattle.Core.MULTIPLIER,System.Int32,System.Int32,CardBattle.Core.MULTIPLIER,System.Int32,System.Boolean)
      commentId: M:CardBattle.Core.Actions.Derived.FinanceAction.#ctor(CardBattle.Core.MULTIPLIER,System.Int32,System.Int32,CardBattle.Core.MULTIPLIER,System.Int32,System.Boolean)
      language: CSharp
      name:
        CSharp: FinanceAction(MULTIPLIER, Int32, Int32, MULTIPLIER, Int32, Boolean)
        VB: FinanceAction(MULTIPLIER, Int32, Int32, MULTIPLIER, Int32, Boolean)
      nameWithType:
        CSharp: FinanceAction.FinanceAction(MULTIPLIER, Int32, Int32, MULTIPLIER, Int32, Boolean)
        VB: FinanceAction.FinanceAction(MULTIPLIER, Int32, Int32, MULTIPLIER, Int32, Boolean)
      qualifiedName:
        CSharp: CardBattle.Core.Actions.Derived.FinanceAction.FinanceAction(CardBattle.Core.MULTIPLIER, System.Int32, System.Int32, CardBattle.Core.MULTIPLIER, System.Int32, System.Boolean)
        VB: CardBattle.Core.Actions.Derived.FinanceAction.FinanceAction(CardBattle.Core.MULTIPLIER, System.Int32, System.Int32, CardBattle.Core.MULTIPLIER, System.Int32, System.Boolean)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Actions.Derived
      source:
        id: .ctor
        path: ''
        startLine: 529
      summary: "\nOpponent player as enemy\n"
      example: []
      syntax:
        content:
          CSharp: public FinanceAction(MULTIPLIER multiplier = MULTIPLIER.NONE, int additionalMoney = 0, int stealMoney = 0, MULTIPLIER enemyMultiplier = MULTIPLIER.NONE, int enemyAdditionalMoney = 0, bool isOptional = false)
          VB: Public Sub New(multiplier As MULTIPLIER = MULTIPLIER.NONE, additionalMoney As Integer = 0, stealMoney As Integer = 0, enemyMultiplier As MULTIPLIER = MULTIPLIER.NONE, enemyAdditionalMoney As Integer = 0, isOptional As Boolean = False)
        parameters:
        - id: multiplier
          type: CardBattle.Core.MULTIPLIER
          description: ''
        - id: additionalMoney
          type: System.Int32
          description: ''
        - id: stealMoney
          type: System.Int32
          description: ''
        - id: enemyMultiplier
          type: CardBattle.Core.MULTIPLIER
          description: ''
        - id: enemyAdditionalMoney
          type: System.Int32
        - id: isOptional
          type: System.Boolean
      overload: CardBattle.Core.Actions.Derived.FinanceAction.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Actions.Derived.FinanceAction.#ctor(Bot,CardBattle.Core.MULTIPLIER,System.Int32,System.Int32,CardBattle.Core.MULTIPLIER,System.Int32,System.Boolean)
      commentId: M:CardBattle.Core.Actions.Derived.FinanceAction.#ctor(Bot,CardBattle.Core.MULTIPLIER,System.Int32,System.Int32,CardBattle.Core.MULTIPLIER,System.Int32,System.Boolean)
      language: CSharp
      name:
        CSharp: FinanceAction(Bot, MULTIPLIER, Int32, Int32, MULTIPLIER, Int32, Boolean)
        VB: FinanceAction(Bot, MULTIPLIER, Int32, Int32, MULTIPLIER, Int32, Boolean)
      nameWithType:
        CSharp: FinanceAction.FinanceAction(Bot, MULTIPLIER, Int32, Int32, MULTIPLIER, Int32, Boolean)
        VB: FinanceAction.FinanceAction(Bot, MULTIPLIER, Int32, Int32, MULTIPLIER, Int32, Boolean)
      qualifiedName:
        CSharp: CardBattle.Core.Actions.Derived.FinanceAction.FinanceAction(Bot, CardBattle.Core.MULTIPLIER, System.Int32, System.Int32, CardBattle.Core.MULTIPLIER, System.Int32, System.Boolean)
        VB: CardBattle.Core.Actions.Derived.FinanceAction.FinanceAction(Bot, CardBattle.Core.MULTIPLIER, System.Int32, System.Int32, CardBattle.Core.MULTIPLIER, System.Int32, System.Boolean)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Actions.Derived
      source:
        id: .ctor
        path: ''
        startLine: 548
      summary: "\nBot as enemy (Bot of the neutral villages)\n"
      example: []
      syntax:
        content:
          CSharp: public FinanceAction(Bot bot, MULTIPLIER multiplier = MULTIPLIER.NONE, int additionalMoney = 0, int stealMoney = 0, MULTIPLIER enemyMultiplier = MULTIPLIER.NONE, int enemyAdditionalMoney = 0, bool isOptional = false)
          VB: Public Sub New(bot As Bot, multiplier As MULTIPLIER = MULTIPLIER.NONE, additionalMoney As Integer = 0, stealMoney As Integer = 0, enemyMultiplier As MULTIPLIER = MULTIPLIER.NONE, enemyAdditionalMoney As Integer = 0, isOptional As Boolean = False)
        parameters:
        - id: bot
          type: Bot
          description: ''
        - id: multiplier
          type: CardBattle.Core.MULTIPLIER
          description: ''
        - id: additionalMoney
          type: System.Int32
          description: ''
        - id: stealMoney
          type: System.Int32
          description: ''
        - id: enemyMultiplier
          type: CardBattle.Core.MULTIPLIER
          description: ''
        - id: enemyAdditionalMoney
          type: System.Int32
        - id: isOptional
          type: System.Boolean
      overload: CardBattle.Core.Actions.Derived.FinanceAction.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Actions.Derived.FinanceAction.Execute
      commentId: M:CardBattle.Core.Actions.Derived.FinanceAction.Execute
      language: CSharp
      name:
        CSharp: Execute()
        VB: Execute()
      nameWithType:
        CSharp: FinanceAction.Execute()
        VB: FinanceAction.Execute()
      qualifiedName:
        CSharp: CardBattle.Core.Actions.Derived.FinanceAction.Execute()
        VB: CardBattle.Core.Actions.Derived.FinanceAction.Execute()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Actions.Derived
      source:
        id: Execute
        path: ''
        startLine: 559
      syntax:
        content:
          CSharp: public override void Execute()
          VB: Public Overrides Sub Execute
      overload: CardBattle.Core.Actions.Derived.FinanceAction.Execute*
      overridden: CardBattle.Core.Actions.Action.Execute
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
  - id: CardBattle.Core.Actions.Derived.FinanceBox
    commentId: T:CardBattle.Core.Actions.Derived.FinanceBox
    language: CSharp
    name:
      CSharp: FinanceBox
      VB: FinanceBox
    nameWithType:
      CSharp: FinanceBox
      VB: FinanceBox
    qualifiedName:
      CSharp: CardBattle.Core.Actions.Derived.FinanceBox
      VB: CardBattle.Core.Actions.Derived.FinanceBox
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: CardBattle.Core.Actions.Derived
    source:
      id: FinanceBox
      path: ''
      startLine: 618
    syntax:
      content:
        CSharp: 'public class FinanceBox : Action'
        VB: >-
          Public Class FinanceBox

              Inherits Action
    inheritance:
    - System.Object
    - CardBattle.Core.Actions.Action
    inheritedMembers:
    - CardBattle.Core.Actions.Action.isOptional
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: CardBattle.Core.Actions.Derived.FinanceBox.financeAction
      commentId: F:CardBattle.Core.Actions.Derived.FinanceBox.financeAction
      language: CSharp
      name:
        CSharp: financeAction
        VB: financeAction
      nameWithType:
        CSharp: FinanceBox.financeAction
        VB: FinanceBox.financeAction
      qualifiedName:
        CSharp: CardBattle.Core.Actions.Derived.FinanceBox.financeAction
        VB: CardBattle.Core.Actions.Derived.FinanceBox.financeAction
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Actions.Derived
      source:
        id: financeAction
        path: ''
        startLine: 629
      summary: "\n<table><tbody><tr></tr><tr></tr><tr></tr></tbody></table>\n"
      example: []
      syntax:
        content:
          CSharp: public FinanceAction financeAction
          VB: Public financeAction As FinanceAction
        return:
          type: CardBattle.Core.Actions.Derived.FinanceAction
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Actions.Derived.FinanceBox.#ctor(CardBattle.Core.Actions.Derived.FinanceAction,System.Boolean)
      commentId: M:CardBattle.Core.Actions.Derived.FinanceBox.#ctor(CardBattle.Core.Actions.Derived.FinanceAction,System.Boolean)
      language: CSharp
      name:
        CSharp: FinanceBox(FinanceAction, Boolean)
        VB: FinanceBox(FinanceAction, Boolean)
      nameWithType:
        CSharp: FinanceBox.FinanceBox(FinanceAction, Boolean)
        VB: FinanceBox.FinanceBox(FinanceAction, Boolean)
      qualifiedName:
        CSharp: CardBattle.Core.Actions.Derived.FinanceBox.FinanceBox(CardBattle.Core.Actions.Derived.FinanceAction, System.Boolean)
        VB: CardBattle.Core.Actions.Derived.FinanceBox.FinanceBox(CardBattle.Core.Actions.Derived.FinanceAction, System.Boolean)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Actions.Derived
      source:
        id: .ctor
        path: ''
        startLine: 640
      summary: "\n<table><tbody><tr></tr><tr></tr><tr></tr></tbody></table>\n"
      example: []
      syntax:
        content:
          CSharp: public FinanceBox(FinanceAction financeAction, bool isOptional = false)
          VB: Public Sub New(financeAction As FinanceAction, isOptional As Boolean = False)
        parameters:
        - id: financeAction
          type: CardBattle.Core.Actions.Derived.FinanceAction
          description: ''
        - id: isOptional
          type: System.Boolean
          description: ''
      overload: CardBattle.Core.Actions.Derived.FinanceBox.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Actions.Derived.FinanceBox.Execute
      commentId: M:CardBattle.Core.Actions.Derived.FinanceBox.Execute
      language: CSharp
      name:
        CSharp: Execute()
        VB: Execute()
      nameWithType:
        CSharp: FinanceBox.Execute()
        VB: FinanceBox.Execute()
      qualifiedName:
        CSharp: CardBattle.Core.Actions.Derived.FinanceBox.Execute()
        VB: CardBattle.Core.Actions.Derived.FinanceBox.Execute()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Actions.Derived
      source:
        id: Execute
        path: ''
        startLine: 647
      syntax:
        content:
          CSharp: public override void Execute()
          VB: Public Overrides Sub Execute
      overload: CardBattle.Core.Actions.Derived.FinanceBox.Execute*
      overridden: CardBattle.Core.Actions.Action.Execute
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
- id: CardBattle.Core.AI
  commentId: N:CardBattle.Core.AI
  language: CSharp
  name:
    CSharp: CardBattle.Core.AI
    VB: CardBattle.Core.AI
  nameWithType:
    CSharp: CardBattle.Core.AI
    VB: CardBattle.Core.AI
  qualifiedName:
    CSharp: CardBattle.Core.AI
    VB: CardBattle.Core.AI
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: CardBattle.Core.AI.Bot
    commentId: T:CardBattle.Core.AI.Bot
    language: CSharp
    name:
      CSharp: Bot
      VB: Bot
    nameWithType:
      CSharp: Bot
      VB: Bot
    qualifiedName:
      CSharp: CardBattle.Core.AI.Bot
      VB: CardBattle.Core.AI.Bot
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: CardBattle.Core.AI
    source:
      id: Bot
      path: ''
      startLine: 668
    syntax:
      content:
        CSharp: 'public class Bot : PlayerStats'
        VB: >-
          Public Class Bot

              Inherits PlayerStats
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: CardBattle.Core.AI.Bot.AddComponentTo(GameObject)
      commentId: M:CardBattle.Core.AI.Bot.AddComponentTo(GameObject)
      language: CSharp
      name:
        CSharp: AddComponentTo(GameObject)
        VB: AddComponentTo(GameObject)
      nameWithType:
        CSharp: Bot.AddComponentTo(GameObject)
        VB: Bot.AddComponentTo(GameObject)
      qualifiedName:
        CSharp: CardBattle.Core.AI.Bot.AddComponentTo(GameObject)
        VB: CardBattle.Core.AI.Bot.AddComponentTo(GameObject)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.AI
      source:
        id: AddComponentTo
        path: ''
        startLine: 671
      syntax:
        content:
          CSharp: public static Bot AddComponentTo(GameObject attachTo)
          VB: Public Shared Function AddComponentTo(attachTo As GameObject) As Bot
        parameters:
        - id: attachTo
          type: GameObject
        return:
          type: CardBattle.Core.AI.Bot
      overload: CardBattle.Core.AI.Bot.AddComponentTo*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: CardBattle.Core.AI.Bot.StartTurn
      commentId: M:CardBattle.Core.AI.Bot.StartTurn
      language: CSharp
      name:
        CSharp: StartTurn()
        VB: StartTurn()
      nameWithType:
        CSharp: Bot.StartTurn()
        VB: Bot.StartTurn()
      qualifiedName:
        CSharp: CardBattle.Core.AI.Bot.StartTurn()
        VB: CardBattle.Core.AI.Bot.StartTurn()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.AI
      source:
        id: StartTurn
        path: ''
        startLine: 679
      syntax:
        content:
          CSharp: public void StartTurn()
          VB: Public Sub StartTurn
      overload: CardBattle.Core.AI.Bot.StartTurn*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: CardBattle.Core.Collections
  commentId: N:CardBattle.Core.Collections
  language: CSharp
  name:
    CSharp: CardBattle.Core.Collections
    VB: CardBattle.Core.Collections
  nameWithType:
    CSharp: CardBattle.Core.Collections
    VB: CardBattle.Core.Collections
  qualifiedName:
    CSharp: CardBattle.Core.Collections
    VB: CardBattle.Core.Collections
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: CardBattle.Core.Collections.Dictionary`2
    commentId: T:CardBattle.Core.Collections.Dictionary`2
    language: CSharp
    name:
      CSharp: Dictionary<T0, T1>
      VB: Dictionary(Of T0, T1)
    nameWithType:
      CSharp: Dictionary<T0, T1>
      VB: Dictionary(Of T0, T1)
    qualifiedName:
      CSharp: CardBattle.Core.Collections.Dictionary<T0, T1>
      VB: CardBattle.Core.Collections.Dictionary(Of T0, T1)
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: CardBattle.Core.Collections
    source:
      id: Dictionary
      path: ''
      startLine: 687
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class Dictionary<T0, T1>
        VB: >-
          <Serializable>

          Public Class Dictionary(Of T0, T1)
      typeParameters:
      - id: T0
      - id: T1
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: CardBattle.Core.Collections.Dictionary`2.Item(`0)
      commentId: P:CardBattle.Core.Collections.Dictionary`2.Item(`0)
      language: CSharp
      name:
        CSharp: Item[T0]
        VB: Item(T0)
      nameWithType:
        CSharp: Dictionary<T0, T1>.Item[T0]
        VB: Dictionary(Of T0, T1).Item(T0)
      qualifiedName:
        CSharp: CardBattle.Core.Collections.Dictionary<T0, T1>.Item[T0]
        VB: CardBattle.Core.Collections.Dictionary(Of T0, T1).Item(T0)
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Collections
      source:
        id: this[]
        path: ''
        startLine: 690
      syntax:
        content:
          CSharp: public T1 this[T0 term] { get; }
          VB: Public ReadOnly Property Item(term As T0) As T1
        parameters:
        - id: term
          type: '{T0}'
        return:
          type: '{T1}'
      overload: CardBattle.Core.Collections.Dictionary`2.Item*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: CardBattle.Core.Collections.Dictionary`2.Item(`1)
      commentId: P:CardBattle.Core.Collections.Dictionary`2.Item(`1)
      language: CSharp
      name:
        CSharp: Item[T1]
        VB: Item(T1)
      nameWithType:
        CSharp: Dictionary<T0, T1>.Item[T1]
        VB: Dictionary(Of T0, T1).Item(T1)
      qualifiedName:
        CSharp: CardBattle.Core.Collections.Dictionary<T0, T1>.Item[T1]
        VB: CardBattle.Core.Collections.Dictionary(Of T0, T1).Item(T1)
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Collections
      source:
        id: this[]
        path: ''
        startLine: 691
      syntax:
        content:
          CSharp: public T0 this[T1 term] { get; }
          VB: Public ReadOnly Property Item(term As T1) As T0
        parameters:
        - id: term
          type: '{T1}'
        return:
          type: '{T0}'
      overload: CardBattle.Core.Collections.Dictionary`2.Item*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: CardBattle.Core.Collections.Dictionary`2.pairs
      commentId: F:CardBattle.Core.Collections.Dictionary`2.pairs
      language: CSharp
      name:
        CSharp: pairs
        VB: pairs
      nameWithType:
        CSharp: Dictionary<T0, T1>.pairs
        VB: Dictionary(Of T0, T1).pairs
      qualifiedName:
        CSharp: CardBattle.Core.Collections.Dictionary<T0, T1>.pairs
        VB: CardBattle.Core.Collections.Dictionary(Of T0, T1).pairs
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Collections
      source:
        id: pairs
        path: ''
        startLine: 693
      syntax:
        content:
          CSharp: public List<DictionaryPair<T0, T1>> pairs
          VB: Public pairs As List(Of DictionaryPair(Of T0, T1))
        return:
          type: System.Collections.Generic.List{CardBattle.Core.Collections.DictionaryPair{{T0},{T1}}}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Collections.Dictionary`2.Find(`0)
      commentId: M:CardBattle.Core.Collections.Dictionary`2.Find(`0)
      language: CSharp
      name:
        CSharp: Find(T0)
        VB: Find(T0)
      nameWithType:
        CSharp: Dictionary<T0, T1>.Find(T0)
        VB: Dictionary(Of T0, T1).Find(T0)
      qualifiedName:
        CSharp: CardBattle.Core.Collections.Dictionary<T0, T1>.Find(T0)
        VB: CardBattle.Core.Collections.Dictionary(Of T0, T1).Find(T0)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Collections
      source:
        id: Find
        path: ''
        startLine: 695
      syntax:
        content:
          CSharp: public T1 Find(T0 term)
          VB: Public Function Find(term As T0) As T1
        parameters:
        - id: term
          type: '{T0}'
        return:
          type: '{T1}'
      overload: CardBattle.Core.Collections.Dictionary`2.Find*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Collections.Dictionary`2.Find(`1)
      commentId: M:CardBattle.Core.Collections.Dictionary`2.Find(`1)
      language: CSharp
      name:
        CSharp: Find(T1)
        VB: Find(T1)
      nameWithType:
        CSharp: Dictionary<T0, T1>.Find(T1)
        VB: Dictionary(Of T0, T1).Find(T1)
      qualifiedName:
        CSharp: CardBattle.Core.Collections.Dictionary<T0, T1>.Find(T1)
        VB: CardBattle.Core.Collections.Dictionary(Of T0, T1).Find(T1)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Collections
      source:
        id: Find
        path: ''
        startLine: 708
      syntax:
        content:
          CSharp: public T0 Find(T1 term)
          VB: Public Function Find(term As T1) As T0
        parameters:
        - id: term
          type: '{T1}'
        return:
          type: '{T0}'
      overload: CardBattle.Core.Collections.Dictionary`2.Find*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Collections.Dictionary`2.GetDictionaryPair(System.Int32)
      commentId: M:CardBattle.Core.Collections.Dictionary`2.GetDictionaryPair(System.Int32)
      language: CSharp
      name:
        CSharp: GetDictionaryPair(Int32)
        VB: GetDictionaryPair(Int32)
      nameWithType:
        CSharp: Dictionary<T0, T1>.GetDictionaryPair(Int32)
        VB: Dictionary(Of T0, T1).GetDictionaryPair(Int32)
      qualifiedName:
        CSharp: CardBattle.Core.Collections.Dictionary<T0, T1>.GetDictionaryPair(System.Int32)
        VB: CardBattle.Core.Collections.Dictionary(Of T0, T1).GetDictionaryPair(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Collections
      source:
        id: GetDictionaryPair
        path: ''
        startLine: 721
      syntax:
        content:
          CSharp: public DictionaryPair<T0, T1> GetDictionaryPair(int index)
          VB: Public Function GetDictionaryPair(index As Integer) As DictionaryPair(Of T0, T1)
        parameters:
        - id: index
          type: System.Int32
        return:
          type: CardBattle.Core.Collections.DictionaryPair{{T0},{T1}}
      overload: CardBattle.Core.Collections.Dictionary`2.GetDictionaryPair*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Collections.Dictionary`2.Add(`0,`1)
      commentId: M:CardBattle.Core.Collections.Dictionary`2.Add(`0,`1)
      language: CSharp
      name:
        CSharp: Add(T0, T1)
        VB: Add(T0, T1)
      nameWithType:
        CSharp: Dictionary<T0, T1>.Add(T0, T1)
        VB: Dictionary(Of T0, T1).Add(T0, T1)
      qualifiedName:
        CSharp: CardBattle.Core.Collections.Dictionary<T0, T1>.Add(T0, T1)
        VB: CardBattle.Core.Collections.Dictionary(Of T0, T1).Add(T0, T1)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Collections
      source:
        id: Add
        path: ''
        startLine: 723
      syntax:
        content:
          CSharp: public void Add(T0 t0, T1 t1)
          VB: Public Sub Add(t0 As T0, t1 As T1)
        parameters:
        - id: t0
          type: '{T0}'
        - id: t1
          type: '{T1}'
      overload: CardBattle.Core.Collections.Dictionary`2.Add*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: CardBattle.Core.Collections.DictionaryPair`2
    commentId: T:CardBattle.Core.Collections.DictionaryPair`2
    language: CSharp
    name:
      CSharp: DictionaryPair<T0, T1>
      VB: DictionaryPair(Of T0, T1)
    nameWithType:
      CSharp: DictionaryPair<T0, T1>
      VB: DictionaryPair(Of T0, T1)
    qualifiedName:
      CSharp: CardBattle.Core.Collections.DictionaryPair<T0, T1>
      VB: CardBattle.Core.Collections.DictionaryPair(Of T0, T1)
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: CardBattle.Core.Collections
    source:
      id: DictionaryPair
      path: ''
      startLine: 732
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class DictionaryPair<T0, T1>
        VB: >-
          <Serializable>

          Public Class DictionaryPair(Of T0, T1)
      typeParameters:
      - id: T0
      - id: T1
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: CardBattle.Core.Collections.DictionaryPair`2.item0
      commentId: F:CardBattle.Core.Collections.DictionaryPair`2.item0
      language: CSharp
      name:
        CSharp: item0
        VB: item0
      nameWithType:
        CSharp: DictionaryPair<T0, T1>.item0
        VB: DictionaryPair(Of T0, T1).item0
      qualifiedName:
        CSharp: CardBattle.Core.Collections.DictionaryPair<T0, T1>.item0
        VB: CardBattle.Core.Collections.DictionaryPair(Of T0, T1).item0
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Collections
      source:
        id: item0
        path: ''
        startLine: 735
      syntax:
        content:
          CSharp: public T0 item0
          VB: Public item0 As T0
        return:
          type: '{T0}'
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Collections.DictionaryPair`2.item1
      commentId: F:CardBattle.Core.Collections.DictionaryPair`2.item1
      language: CSharp
      name:
        CSharp: item1
        VB: item1
      nameWithType:
        CSharp: DictionaryPair<T0, T1>.item1
        VB: DictionaryPair(Of T0, T1).item1
      qualifiedName:
        CSharp: CardBattle.Core.Collections.DictionaryPair<T0, T1>.item1
        VB: CardBattle.Core.Collections.DictionaryPair(Of T0, T1).item1
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Collections
      source:
        id: item1
        path: ''
        startLine: 736
      syntax:
        content:
          CSharp: public T1 item1
          VB: Public item1 As T1
        return:
          type: '{T1}'
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: CardBattle.Core.Controls
  commentId: N:CardBattle.Core.Controls
  language: CSharp
  name:
    CSharp: CardBattle.Core.Controls
    VB: CardBattle.Core.Controls
  nameWithType:
    CSharp: CardBattle.Core.Controls
    VB: CardBattle.Core.Controls
  qualifiedName:
    CSharp: CardBattle.Core.Controls
    VB: CardBattle.Core.Controls
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: CardBattle.Core.Controls.ControlMapping
    commentId: T:CardBattle.Core.Controls.ControlMapping
    language: CSharp
    name:
      CSharp: ControlMapping
      VB: ControlMapping
    nameWithType:
      CSharp: ControlMapping
      VB: ControlMapping
    qualifiedName:
      CSharp: CardBattle.Core.Controls.ControlMapping
      VB: CardBattle.Core.Controls.ControlMapping
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: CardBattle.Core.Controls
    source:
      id: ControlMapping
      path: ''
      startLine: 747
    syntax:
      content:
        CSharp: 'public class ControlMapping : MonoBehaviour'
        VB: >-
          Public Class ControlMapping

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: CardBattle.Core.Controls.ControlMapping.GetAxis(Vector2)
      commentId: M:CardBattle.Core.Controls.ControlMapping.GetAxis(Vector2)
      language: CSharp
      name:
        CSharp: GetAxis(Vector2)
        VB: GetAxis(Vector2)
      nameWithType:
        CSharp: ControlMapping.GetAxis(Vector2)
        VB: ControlMapping.GetAxis(Vector2)
      qualifiedName:
        CSharp: CardBattle.Core.Controls.ControlMapping.GetAxis(Vector2)
        VB: CardBattle.Core.Controls.ControlMapping.GetAxis(Vector2)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Controls
      source:
        id: GetAxis
        path: ''
        startLine: 770
      syntax:
        content:
          CSharp: public void GetAxis(Vector2 xy)
          VB: Public Sub GetAxis(xy As Vector2)
        parameters:
        - id: xy
          type: Vector2
      overload: CardBattle.Core.Controls.ControlMapping.GetAxis*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Controls.ControlMapping.zoomViaAxis
      commentId: F:CardBattle.Core.Controls.ControlMapping.zoomViaAxis
      language: CSharp
      name:
        CSharp: zoomViaAxis
        VB: zoomViaAxis
      nameWithType:
        CSharp: ControlMapping.zoomViaAxis
        VB: ControlMapping.zoomViaAxis
      qualifiedName:
        CSharp: CardBattle.Core.Controls.ControlMapping.zoomViaAxis
        VB: CardBattle.Core.Controls.ControlMapping.zoomViaAxis
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Controls
      source:
        id: zoomViaAxis
        path: ''
        startLine: 775
      syntax:
        content:
          CSharp: public static bool zoomViaAxis
          VB: Public Shared zoomViaAxis As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: CardBattle.Core.Controls.ControlMapping.ZoomAxis
      commentId: P:CardBattle.Core.Controls.ControlMapping.ZoomAxis
      language: CSharp
      name:
        CSharp: ZoomAxis
        VB: ZoomAxis
      nameWithType:
        CSharp: ControlMapping.ZoomAxis
        VB: ControlMapping.ZoomAxis
      qualifiedName:
        CSharp: CardBattle.Core.Controls.ControlMapping.ZoomAxis
        VB: CardBattle.Core.Controls.ControlMapping.ZoomAxis
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Controls
      source:
        id: ZoomAxis
        path: ''
        startLine: 776
      syntax:
        content:
          CSharp: public static string ZoomAxis { get; }
          VB: Public Shared ReadOnly Property ZoomAxis As String
        parameters: []
        return:
          type: System.String
      overload: CardBattle.Core.Controls.ControlMapping.ZoomAxis*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: CardBattle.Core.Controls.ControlMapping.zoom01
      commentId: F:CardBattle.Core.Controls.ControlMapping.zoom01
      language: CSharp
      name:
        CSharp: zoom01
        VB: zoom01
      nameWithType:
        CSharp: ControlMapping.zoom01
        VB: ControlMapping.zoom01
      qualifiedName:
        CSharp: CardBattle.Core.Controls.ControlMapping.zoom01
        VB: CardBattle.Core.Controls.ControlMapping.zoom01
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Controls
      source:
        id: zoom01
        path: ''
        startLine: 786
      summary: "\nfor key-combination\n"
      example: []
      syntax:
        content:
          CSharp: public static KeyCode? zoom01
          VB: Public Shared zoom01 As KeyCode?
        return:
          type: System.Nullable{KeyCode}
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: CardBattle.Core.Controls.ControlMapping.Zoom02
      commentId: P:CardBattle.Core.Controls.ControlMapping.Zoom02
      language: CSharp
      name:
        CSharp: Zoom02
        VB: Zoom02
      nameWithType:
        CSharp: ControlMapping.Zoom02
        VB: ControlMapping.Zoom02
      qualifiedName:
        CSharp: CardBattle.Core.Controls.ControlMapping.Zoom02
        VB: CardBattle.Core.Controls.ControlMapping.Zoom02
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Controls
      source:
        id: Zoom02
        path: ''
        startLine: 798
      summary: "\nfor plus and minus key\n"
      example: []
      syntax:
        content:
          CSharp: public static KeyCode[] Zoom02 { get; set; }
          VB: Public Shared Property Zoom02 As KeyCode()
        parameters: []
        return:
          type: KeyCode[]
      overload: CardBattle.Core.Controls.ControlMapping.Zoom02*
      modifiers:
        CSharp:
        - public
        - static
        - get
        - set
        VB:
        - Public
        - Shared
    - id: CardBattle.Core.Controls.ControlMapping.UnitDeselect
      commentId: F:CardBattle.Core.Controls.ControlMapping.UnitDeselect
      language: CSharp
      name:
        CSharp: UnitDeselect
        VB: UnitDeselect
      nameWithType:
        CSharp: ControlMapping.UnitDeselect
        VB: ControlMapping.UnitDeselect
      qualifiedName:
        CSharp: CardBattle.Core.Controls.ControlMapping.UnitDeselect
        VB: CardBattle.Core.Controls.ControlMapping.UnitDeselect
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Controls
      source:
        id: UnitDeselect
        path: ''
        startLine: 809
      summary: "\nsecond key to deselect with the next click\n"
      example: []
      syntax:
        content:
          CSharp: public static KeyCode UnitDeselect
          VB: Public Shared UnitDeselect As KeyCode
        return:
          type: KeyCode
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: CardBattle.Core.Controls.ControlMapping.UnitAction
      commentId: P:CardBattle.Core.Controls.ControlMapping.UnitAction
      language: CSharp
      name:
        CSharp: UnitAction
        VB: UnitAction
      nameWithType:
        CSharp: ControlMapping.UnitAction
        VB: ControlMapping.UnitAction
      qualifiedName:
        CSharp: CardBattle.Core.Controls.ControlMapping.UnitAction
        VB: CardBattle.Core.Controls.ControlMapping.UnitAction
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Controls
      source:
        id: UnitAction
        path: ''
        startLine: 815
      summary: "\nButton name (Fire1 = LeftMouseButton)\n"
      example: []
      syntax:
        content:
          CSharp: public static int UnitAction { get; }
          VB: Public Shared ReadOnly Property UnitAction As Integer
        parameters: []
        return:
          type: System.Int32
      overload: CardBattle.Core.Controls.ControlMapping.UnitAction*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: CardBattle.Core.Controls.ControlMapping.ScrollSensivity
      commentId: P:CardBattle.Core.Controls.ControlMapping.ScrollSensivity
      language: CSharp
      name:
        CSharp: ScrollSensivity
        VB: ScrollSensivity
      nameWithType:
        CSharp: ControlMapping.ScrollSensivity
        VB: ControlMapping.ScrollSensivity
      qualifiedName:
        CSharp: CardBattle.Core.Controls.ControlMapping.ScrollSensivity
        VB: CardBattle.Core.Controls.ControlMapping.ScrollSensivity
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Controls
      source:
        id: ScrollSensivity
        path: ''
        startLine: 821
      syntax:
        content:
          CSharp: public static int ScrollSensivity { get; set; }
          VB: Public Shared Property ScrollSensivity As Integer
        parameters: []
        return:
          type: System.Int32
      overload: CardBattle.Core.Controls.ControlMapping.ScrollSensivity*
      modifiers:
        CSharp:
        - public
        - static
        - get
        - set
        VB:
        - Public
        - Shared
    - id: CardBattle.Core.Controls.ControlMapping.Zoom(System.Single@)
      commentId: M:CardBattle.Core.Controls.ControlMapping.Zoom(System.Single@)
      language: CSharp
      name:
        CSharp: Zoom(out Single)
        VB: Zoom(ByRef Single)
      nameWithType:
        CSharp: ControlMapping.Zoom(out Single)
        VB: ControlMapping.Zoom(ByRef Single)
      qualifiedName:
        CSharp: CardBattle.Core.Controls.ControlMapping.Zoom(out System.Single)
        VB: CardBattle.Core.Controls.ControlMapping.Zoom(ByRef System.Single)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Controls
      source:
        id: Zoom
        path: ''
        startLine: 823
      syntax:
        content:
          CSharp: public static bool Zoom(out float z)
          VB: Public Shared Function Zoom(ByRef z As Single) As Boolean
        parameters:
        - id: z
          type: System.Single
        return:
          type: System.Boolean
      overload: CardBattle.Core.Controls.ControlMapping.Zoom*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: CardBattle.Core.Controls.ControlMapping.GetUnitMode(CardBattle.Core.Controls.ControlMapping.UNIT_MODE@)
      commentId: M:CardBattle.Core.Controls.ControlMapping.GetUnitMode(CardBattle.Core.Controls.ControlMapping.UNIT_MODE@)
      language: CSharp
      name:
        CSharp: GetUnitMode(out ControlMapping.UNIT_MODE)
        VB: GetUnitMode(ByRef ControlMapping.UNIT_MODE)
      nameWithType:
        CSharp: ControlMapping.GetUnitMode(out ControlMapping.UNIT_MODE)
        VB: ControlMapping.GetUnitMode(ByRef ControlMapping.UNIT_MODE)
      qualifiedName:
        CSharp: CardBattle.Core.Controls.ControlMapping.GetUnitMode(out CardBattle.Core.Controls.ControlMapping.UNIT_MODE)
        VB: CardBattle.Core.Controls.ControlMapping.GetUnitMode(ByRef CardBattle.Core.Controls.ControlMapping.UNIT_MODE)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Controls
      source:
        id: GetUnitMode
        path: ''
        startLine: 863
      syntax:
        content:
          CSharp: public static bool GetUnitMode(out ControlMapping.UNIT_MODE mode)
          VB: Public Shared Function GetUnitMode(ByRef mode As ControlMapping.UNIT_MODE) As Boolean
        parameters:
        - id: mode
          type: CardBattle.Core.Controls.ControlMapping.UNIT_MODE
        return:
          type: System.Boolean
      overload: CardBattle.Core.Controls.ControlMapping.GetUnitMode*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: CardBattle.Core.Controls.ControlMapping.UNIT_MODE
    commentId: T:CardBattle.Core.Controls.ControlMapping.UNIT_MODE
    language: CSharp
    name:
      CSharp: ControlMapping.UNIT_MODE
      VB: ControlMapping.UNIT_MODE
    nameWithType:
      CSharp: ControlMapping.UNIT_MODE
      VB: ControlMapping.UNIT_MODE
    qualifiedName:
      CSharp: CardBattle.Core.Controls.ControlMapping.UNIT_MODE
      VB: CardBattle.Core.Controls.ControlMapping.UNIT_MODE
    type: Enum
    assemblies:
    - cs.temp.dll
    namespace: CardBattle.Core.Controls
    source:
      id: UNIT_MODE
      path: ''
      startLine: 750
    syntax:
      content:
        CSharp: public enum UNIT_MODE
        VB: Public Enum UNIT_MODE
    modifiers:
      CSharp:
      - public
      - enum
      VB:
      - Public
      - Enum
    items:
    - id: CardBattle.Core.Controls.ControlMapping.UNIT_MODE.NONE
      commentId: F:CardBattle.Core.Controls.ControlMapping.UNIT_MODE.NONE
      language: CSharp
      name:
        CSharp: NONE
        VB: NONE
      nameWithType:
        CSharp: ControlMapping.UNIT_MODE.NONE
        VB: ControlMapping.UNIT_MODE.NONE
      qualifiedName:
        CSharp: CardBattle.Core.Controls.ControlMapping.UNIT_MODE.NONE
        VB: CardBattle.Core.Controls.ControlMapping.UNIT_MODE.NONE
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Controls
      source:
        id: NONE
        path: ''
        startLine: 752
      syntax:
        content:
          CSharp: NONE = 0
          VB: NONE = 0
        return:
          type: CardBattle.Core.Controls.ControlMapping.UNIT_MODE
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: CardBattle.Core.Controls.ControlMapping.UNIT_MODE.SELECT
      commentId: F:CardBattle.Core.Controls.ControlMapping.UNIT_MODE.SELECT
      language: CSharp
      name:
        CSharp: SELECT
        VB: SELECT
      nameWithType:
        CSharp: ControlMapping.UNIT_MODE.SELECT
        VB: ControlMapping.UNIT_MODE.SELECT
      qualifiedName:
        CSharp: CardBattle.Core.Controls.ControlMapping.UNIT_MODE.SELECT
        VB: CardBattle.Core.Controls.ControlMapping.UNIT_MODE.SELECT
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Controls
      source:
        id: SELECT
        path: ''
        startLine: 753
      syntax:
        content:
          CSharp: SELECT = 1
          VB: SELECT = 1
        return:
          type: CardBattle.Core.Controls.ControlMapping.UNIT_MODE
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
    - id: CardBattle.Core.Controls.ControlMapping.UNIT_MODE.DESELECT
      commentId: F:CardBattle.Core.Controls.ControlMapping.UNIT_MODE.DESELECT
      language: CSharp
      name:
        CSharp: DESELECT
        VB: DESELECT
      nameWithType:
        CSharp: ControlMapping.UNIT_MODE.DESELECT
        VB: ControlMapping.UNIT_MODE.DESELECT
      qualifiedName:
        CSharp: CardBattle.Core.Controls.ControlMapping.UNIT_MODE.DESELECT
        VB: CardBattle.Core.Controls.ControlMapping.UNIT_MODE.DESELECT
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Controls
      source:
        id: DESELECT
        path: ''
        startLine: 754
      syntax:
        content:
          CSharp: DESELECT = 2
          VB: DESELECT = 2
        return:
          type: CardBattle.Core.Controls.ControlMapping.UNIT_MODE
      modifiers:
        CSharp:
        - public
        - const
        VB:
        - Public
        - Const
- id: CardBattle.Core.Elements
  commentId: N:CardBattle.Core.Elements
  language: CSharp
  name:
    CSharp: CardBattle.Core.Elements
    VB: CardBattle.Core.Elements
  nameWithType:
    CSharp: CardBattle.Core.Elements
    VB: CardBattle.Core.Elements
  qualifiedName:
    CSharp: CardBattle.Core.Elements
    VB: CardBattle.Core.Elements
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: CardBattle.Core.Elements.HexagonalField
    commentId: T:CardBattle.Core.Elements.HexagonalField
    language: CSharp
    name:
      CSharp: HexagonalField
      VB: HexagonalField
    nameWithType:
      CSharp: HexagonalField
      VB: HexagonalField
    qualifiedName:
      CSharp: CardBattle.Core.Elements.HexagonalField
      VB: CardBattle.Core.Elements.HexagonalField
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: CardBattle.Core.Elements
    source:
      id: HexagonalField
      path: ''
      startLine: 890
    syntax:
      content:
        CSharp: 'public class HexagonalField : MonoBehaviour'
        VB: >-
          Public Class HexagonalField

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: CardBattle.Core.Elements.HexagonalField.controller
      commentId: F:CardBattle.Core.Elements.HexagonalField.controller
      language: CSharp
      name:
        CSharp: controller
        VB: controller
      nameWithType:
        CSharp: HexagonalField.controller
        VB: HexagonalField.controller
      qualifiedName:
        CSharp: CardBattle.Core.Elements.HexagonalField.controller
        VB: CardBattle.Core.Elements.HexagonalField.controller
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Elements
      source:
        id: controller
        path: ''
        startLine: 897
      syntax:
        content:
          CSharp: public HexagonalFieldController controller
          VB: Public controller As HexagonalFieldController
        return:
          type: HexagonalFieldController
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Elements.HexagonalField.AxialCoordinates
      commentId: P:CardBattle.Core.Elements.HexagonalField.AxialCoordinates
      language: CSharp
      name:
        CSharp: AxialCoordinates
        VB: AxialCoordinates
      nameWithType:
        CSharp: HexagonalField.AxialCoordinates
        VB: HexagonalField.AxialCoordinates
      qualifiedName:
        CSharp: CardBattle.Core.Elements.HexagonalField.AxialCoordinates
        VB: CardBattle.Core.Elements.HexagonalField.AxialCoordinates
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Elements
      source:
        id: AxialCoordinates
        path: ''
        startLine: 902
      summary: "\nq = x; r = y\n"
      example: []
      syntax:
        content:
          CSharp: public Vector2 AxialCoordinates { get; }
          VB: Public ReadOnly Property AxialCoordinates As Vector2
        parameters: []
        return:
          type: Vector2
      overload: CardBattle.Core.Elements.HexagonalField.AxialCoordinates*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: CardBattle.Core.Elements.HexagonalField.CubeCoordinates
      commentId: P:CardBattle.Core.Elements.HexagonalField.CubeCoordinates
      language: CSharp
      name:
        CSharp: CubeCoordinates
        VB: CubeCoordinates
      nameWithType:
        CSharp: HexagonalField.CubeCoordinates
        VB: HexagonalField.CubeCoordinates
      qualifiedName:
        CSharp: CardBattle.Core.Elements.HexagonalField.CubeCoordinates
        VB: CardBattle.Core.Elements.HexagonalField.CubeCoordinates
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Elements
      source:
        id: CubeCoordinates
        path: ''
        startLine: 906
      summary: "\nq = x; r = y; s = z\n"
      example: []
      syntax:
        content:
          CSharp: public Vector3 CubeCoordinates { get; }
          VB: Public ReadOnly Property CubeCoordinates As Vector3
        parameters: []
        return:
          type: Vector3
      overload: CardBattle.Core.Elements.HexagonalField.CubeCoordinates*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: CardBattle.Core.Elements.HexagonalField.Coordinates
      commentId: P:CardBattle.Core.Elements.HexagonalField.Coordinates
      language: CSharp
      name:
        CSharp: Coordinates
        VB: Coordinates
      nameWithType:
        CSharp: HexagonalField.Coordinates
        VB: HexagonalField.Coordinates
      qualifiedName:
        CSharp: CardBattle.Core.Elements.HexagonalField.Coordinates
        VB: CardBattle.Core.Elements.HexagonalField.Coordinates
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Elements
      source:
        id: Coordinates
        path: ''
        startLine: 907
      syntax:
        content:
          CSharp: public Vector3 Coordinates { get; }
          VB: Public ReadOnly Property Coordinates As Vector3
        parameters: []
        return:
          type: Vector3
      overload: CardBattle.Core.Elements.HexagonalField.Coordinates*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: CardBattle.Core.Elements.HexagonalField.IndexedBy
      commentId: P:CardBattle.Core.Elements.HexagonalField.IndexedBy
      language: CSharp
      name:
        CSharp: IndexedBy
        VB: IndexedBy
      nameWithType:
        CSharp: HexagonalField.IndexedBy
        VB: HexagonalField.IndexedBy
      qualifiedName:
        CSharp: CardBattle.Core.Elements.HexagonalField.IndexedBy
        VB: CardBattle.Core.Elements.HexagonalField.IndexedBy
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Elements
      source:
        id: IndexedBy
        path: ''
        startLine: 908
      syntax:
        content:
          CSharp: public MapGeneration IndexedBy { get; }
          VB: Public ReadOnly Property IndexedBy As MapGeneration
        parameters: []
        return:
          type: MapGeneration
      overload: CardBattle.Core.Elements.HexagonalField.IndexedBy*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: CardBattle.Core.Elements.HexagonalField.Item(CardBattle.Core.DIRECTION)
      commentId: P:CardBattle.Core.Elements.HexagonalField.Item(CardBattle.Core.DIRECTION)
      language: CSharp
      name:
        CSharp: Item[DIRECTION]
        VB: Item(DIRECTION)
      nameWithType:
        CSharp: HexagonalField.Item[DIRECTION]
        VB: HexagonalField.Item(DIRECTION)
      qualifiedName:
        CSharp: CardBattle.Core.Elements.HexagonalField.Item[CardBattle.Core.DIRECTION]
        VB: CardBattle.Core.Elements.HexagonalField.Item(CardBattle.Core.DIRECTION)
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Elements
      source:
        id: this[]
        path: ''
        startLine: 910
      syntax:
        content:
          CSharp: public HexagonalField this[DIRECTION direction] { get; }
          VB: Public ReadOnly Property Item(direction As DIRECTION) As HexagonalField
        parameters:
        - id: direction
          type: CardBattle.Core.DIRECTION
        return:
          type: CardBattle.Core.Elements.HexagonalField
      overload: CardBattle.Core.Elements.HexagonalField.Item*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: CardBattle.Core.Elements.HexagonalField.Initialize(System.Int32,Vector2,Vector3,MapGeneration)
      commentId: M:CardBattle.Core.Elements.HexagonalField.Initialize(System.Int32,Vector2,Vector3,MapGeneration)
      language: CSharp
      name:
        CSharp: Initialize(Int32, Vector2, Vector3, MapGeneration)
        VB: Initialize(Int32, Vector2, Vector3, MapGeneration)
      nameWithType:
        CSharp: HexagonalField.Initialize(Int32, Vector2, Vector3, MapGeneration)
        VB: HexagonalField.Initialize(Int32, Vector2, Vector3, MapGeneration)
      qualifiedName:
        CSharp: CardBattle.Core.Elements.HexagonalField.Initialize(System.Int32, Vector2, Vector3, MapGeneration)
        VB: CardBattle.Core.Elements.HexagonalField.Initialize(System.Int32, Vector2, Vector3, MapGeneration)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Elements
      source:
        id: Initialize
        path: ''
        startLine: 912
      syntax:
        content:
          CSharp: public void Initialize(int index, Vector2 axialCoordinates, Vector3 coordinates, MapGeneration indexedBy)
          VB: Public Sub Initialize(index As Integer, axialCoordinates As Vector2, coordinates As Vector3, indexedBy As MapGeneration)
        parameters:
        - id: index
          type: System.Int32
        - id: axialCoordinates
          type: Vector2
        - id: coordinates
          type: Vector3
        - id: indexedBy
          type: MapGeneration
      overload: CardBattle.Core.Elements.HexagonalField.Initialize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Elements.HexagonalField.GetNeighbors
      commentId: M:CardBattle.Core.Elements.HexagonalField.GetNeighbors
      language: CSharp
      name:
        CSharp: GetNeighbors()
        VB: GetNeighbors()
      nameWithType:
        CSharp: HexagonalField.GetNeighbors()
        VB: HexagonalField.GetNeighbors()
      qualifiedName:
        CSharp: CardBattle.Core.Elements.HexagonalField.GetNeighbors()
        VB: CardBattle.Core.Elements.HexagonalField.GetNeighbors()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Elements
      source:
        id: GetNeighbors
        path: ''
        startLine: 920
      syntax:
        content:
          CSharp: public void GetNeighbors()
          VB: Public Sub GetNeighbors
      overload: CardBattle.Core.Elements.HexagonalField.GetNeighbors*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: CardBattle.Core.Generation
  commentId: N:CardBattle.Core.Generation
  language: CSharp
  name:
    CSharp: CardBattle.Core.Generation
    VB: CardBattle.Core.Generation
  nameWithType:
    CSharp: CardBattle.Core.Generation
    VB: CardBattle.Core.Generation
  qualifiedName:
    CSharp: CardBattle.Core.Generation
    VB: CardBattle.Core.Generation
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: CardBattle.Core.Generation.Biome
    commentId: T:CardBattle.Core.Generation.Biome
    language: CSharp
    name:
      CSharp: Biome
      VB: Biome
    nameWithType:
      CSharp: Biome
      VB: Biome
    qualifiedName:
      CSharp: CardBattle.Core.Generation.Biome
      VB: CardBattle.Core.Generation.Biome
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: CardBattle.Core.Generation
    source:
      id: Biome
      path: ''
      startLine: 952
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class Biome
        VB: >-
          <Serializable>

          Public Class Biome
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: CardBattle.Core.Generation.Biome.biomes
      commentId: F:CardBattle.Core.Generation.Biome.biomes
      language: CSharp
      name:
        CSharp: biomes
        VB: biomes
      nameWithType:
        CSharp: Biome.biomes
        VB: Biome.biomes
      qualifiedName:
        CSharp: CardBattle.Core.Generation.Biome.biomes
        VB: CardBattle.Core.Generation.Biome.biomes
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Generation
      source:
        id: biomes
        path: ''
        startLine: 955
      syntax:
        content:
          CSharp: public static List<Biome> biomes
          VB: Public Shared biomes As List(Of Biome)
        return:
          type: System.Collections.Generic.List{CardBattle.Core.Generation.Biome}
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: CardBattle.Core.Generation.Biome.Material
      commentId: P:CardBattle.Core.Generation.Biome.Material
      language: CSharp
      name:
        CSharp: Material
        VB: Material
      nameWithType:
        CSharp: Biome.Material
        VB: Biome.Material
      qualifiedName:
        CSharp: CardBattle.Core.Generation.Biome.Material
        VB: CardBattle.Core.Generation.Biome.Material
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Generation
      source:
        id: Material
        path: ''
        startLine: 961
      syntax:
        content:
          CSharp: public Material Material { get; }
          VB: Public ReadOnly Property Material As Material
        parameters: []
        return:
          type: Material
      overload: CardBattle.Core.Generation.Biome.Material*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: CardBattle.Core.Generation.Biome.Name
      commentId: P:CardBattle.Core.Generation.Biome.Name
      language: CSharp
      name:
        CSharp: Name
        VB: Name
      nameWithType:
        CSharp: Biome.Name
        VB: Biome.Name
      qualifiedName:
        CSharp: CardBattle.Core.Generation.Biome.Name
        VB: CardBattle.Core.Generation.Biome.Name
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Generation
      source:
        id: Name
        path: ''
        startLine: 962
      syntax:
        content:
          CSharp: public string Name { get; }
          VB: Public ReadOnly Property Name As String
        parameters: []
        return:
          type: System.String
      overload: CardBattle.Core.Generation.Biome.Name*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: CardBattle.Core.Generation.Biome.HeightMultiplier
      commentId: P:CardBattle.Core.Generation.Biome.HeightMultiplier
      language: CSharp
      name:
        CSharp: HeightMultiplier
        VB: HeightMultiplier
      nameWithType:
        CSharp: Biome.HeightMultiplier
        VB: Biome.HeightMultiplier
      qualifiedName:
        CSharp: CardBattle.Core.Generation.Biome.HeightMultiplier
        VB: CardBattle.Core.Generation.Biome.HeightMultiplier
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Generation
      source:
        id: HeightMultiplier
        path: ''
        startLine: 963
      syntax:
        content:
          CSharp: public float HeightMultiplier { get; }
          VB: Public ReadOnly Property HeightMultiplier As Single
        parameters: []
        return:
          type: System.Single
      overload: CardBattle.Core.Generation.Biome.HeightMultiplier*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: CardBattle.Core.Generation.Biome.#ctor(System.String,Material)
      commentId: M:CardBattle.Core.Generation.Biome.#ctor(System.String,Material)
      language: CSharp
      name:
        CSharp: Biome(String, Material)
        VB: Biome(String, Material)
      nameWithType:
        CSharp: Biome.Biome(String, Material)
        VB: Biome.Biome(String, Material)
      qualifiedName:
        CSharp: CardBattle.Core.Generation.Biome.Biome(System.String, Material)
        VB: CardBattle.Core.Generation.Biome.Biome(System.String, Material)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Generation
      source:
        id: .ctor
        path: ''
        startLine: 965
      syntax:
        content:
          CSharp: public Biome(string name, Material material)
          VB: Public Sub New(name As String, material As Material)
        parameters:
        - id: name
          type: System.String
        - id: material
          type: Material
      overload: CardBattle.Core.Generation.Biome.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: CardBattle.Core.Players
  commentId: N:CardBattle.Core.Players
  language: CSharp
  name:
    CSharp: CardBattle.Core.Players
    VB: CardBattle.Core.Players
  nameWithType:
    CSharp: CardBattle.Core.Players
    VB: CardBattle.Core.Players
  qualifiedName:
    CSharp: CardBattle.Core.Players
    VB: CardBattle.Core.Players
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: CardBattle.Core.Players.Debt
    commentId: T:CardBattle.Core.Players.Debt
    language: CSharp
    name:
      CSharp: Debt
      VB: Debt
    nameWithType:
      CSharp: Debt
      VB: Debt
    qualifiedName:
      CSharp: CardBattle.Core.Players.Debt
      VB: CardBattle.Core.Players.Debt
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: CardBattle.Core.Players
    source:
      id: Debt
      path: ''
      startLine: 979
    syntax:
      content:
        CSharp: public class Debt
        VB: Public Class Debt
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: CardBattle.Core.Players.Debt.Amount
      commentId: P:CardBattle.Core.Players.Debt.Amount
      language: CSharp
      name:
        CSharp: Amount
        VB: Amount
      nameWithType:
        CSharp: Debt.Amount
        VB: Debt.Amount
      qualifiedName:
        CSharp: CardBattle.Core.Players.Debt.Amount
        VB: CardBattle.Core.Players.Debt.Amount
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Players
      source:
        id: Amount
        path: ''
        startLine: 986
      syntax:
        content:
          CSharp: public int Amount { get; }
          VB: Public ReadOnly Property Amount As Integer
        parameters: []
        return:
          type: System.Int32
      overload: CardBattle.Core.Players.Debt.Amount*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: CardBattle.Core.Players.Debt.Time
      commentId: P:CardBattle.Core.Players.Debt.Time
      language: CSharp
      name:
        CSharp: Time
        VB: Time
      nameWithType:
        CSharp: Debt.Time
        VB: Debt.Time
      qualifiedName:
        CSharp: CardBattle.Core.Players.Debt.Time
        VB: CardBattle.Core.Players.Debt.Time
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Players
      source:
        id: Time
        path: ''
        startLine: 987
      syntax:
        content:
          CSharp: public int Time { get; }
          VB: Public ReadOnly Property Time As Integer
        parameters: []
        return:
          type: System.Int32
      overload: CardBattle.Core.Players.Debt.Time*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: CardBattle.Core.Players.Debt.Creditor
      commentId: P:CardBattle.Core.Players.Debt.Creditor
      language: CSharp
      name:
        CSharp: Creditor
        VB: Creditor
      nameWithType:
        CSharp: Debt.Creditor
        VB: Debt.Creditor
      qualifiedName:
        CSharp: CardBattle.Core.Players.Debt.Creditor
        VB: CardBattle.Core.Players.Debt.Creditor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Players
      source:
        id: Creditor
        path: ''
        startLine: 988
      syntax:
        content:
          CSharp: public PlayerStats Creditor { get; }
          VB: Public ReadOnly Property Creditor As PlayerStats
        parameters: []
        return:
          type: CardBattle.Core.Players.PlayerStats
      overload: CardBattle.Core.Players.Debt.Creditor*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: CardBattle.Core.Players.Debt.Debtor
      commentId: P:CardBattle.Core.Players.Debt.Debtor
      language: CSharp
      name:
        CSharp: Debtor
        VB: Debtor
      nameWithType:
        CSharp: Debt.Debtor
        VB: Debt.Debtor
      qualifiedName:
        CSharp: CardBattle.Core.Players.Debt.Debtor
        VB: CardBattle.Core.Players.Debt.Debtor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Players
      source:
        id: Debtor
        path: ''
        startLine: 989
      syntax:
        content:
          CSharp: public PlayerStats Debtor { get; }
          VB: Public ReadOnly Property Debtor As PlayerStats
        parameters: []
        return:
          type: CardBattle.Core.Players.PlayerStats
      overload: CardBattle.Core.Players.Debt.Debtor*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: CardBattle.Core.Players.Debt.#ctor(System.Int32,System.Int32,CardBattle.Core.Players.PlayerStats,CardBattle.Core.Players.PlayerStats)
      commentId: M:CardBattle.Core.Players.Debt.#ctor(System.Int32,System.Int32,CardBattle.Core.Players.PlayerStats,CardBattle.Core.Players.PlayerStats)
      language: CSharp
      name:
        CSharp: Debt(Int32, Int32, PlayerStats, PlayerStats)
        VB: Debt(Int32, Int32, PlayerStats, PlayerStats)
      nameWithType:
        CSharp: Debt.Debt(Int32, Int32, PlayerStats, PlayerStats)
        VB: Debt.Debt(Int32, Int32, PlayerStats, PlayerStats)
      qualifiedName:
        CSharp: CardBattle.Core.Players.Debt.Debt(System.Int32, System.Int32, CardBattle.Core.Players.PlayerStats, CardBattle.Core.Players.PlayerStats)
        VB: CardBattle.Core.Players.Debt.Debt(System.Int32, System.Int32, CardBattle.Core.Players.PlayerStats, CardBattle.Core.Players.PlayerStats)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Players
      source:
        id: .ctor
        path: ''
        startLine: 991
      syntax:
        content:
          CSharp: public Debt(int amount, int time, PlayerStats creditor, PlayerStats debtor)
          VB: Public Sub New(amount As Integer, time As Integer, creditor As PlayerStats, debtor As PlayerStats)
        parameters:
        - id: amount
          type: System.Int32
        - id: time
          type: System.Int32
        - id: creditor
          type: CardBattle.Core.Players.PlayerStats
        - id: debtor
          type: CardBattle.Core.Players.PlayerStats
      overload: CardBattle.Core.Players.Debt.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Players.Debt.#ctor(CardBattle.Core.Players.PlayerStats,CardBattle.Core.Players.PlayerStats)
      commentId: M:CardBattle.Core.Players.Debt.#ctor(CardBattle.Core.Players.PlayerStats,CardBattle.Core.Players.PlayerStats)
      language: CSharp
      name:
        CSharp: Debt(PlayerStats, PlayerStats)
        VB: Debt(PlayerStats, PlayerStats)
      nameWithType:
        CSharp: Debt.Debt(PlayerStats, PlayerStats)
        VB: Debt.Debt(PlayerStats, PlayerStats)
      qualifiedName:
        CSharp: CardBattle.Core.Players.Debt.Debt(CardBattle.Core.Players.PlayerStats, CardBattle.Core.Players.PlayerStats)
        VB: CardBattle.Core.Players.Debt.Debt(CardBattle.Core.Players.PlayerStats, CardBattle.Core.Players.PlayerStats)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Players
      source:
        id: .ctor
        path: ''
        startLine: 999
      syntax:
        content:
          CSharp: public Debt(PlayerStats creditor, PlayerStats debtor)
          VB: Public Sub New(creditor As PlayerStats, debtor As PlayerStats)
        parameters:
        - id: creditor
          type: CardBattle.Core.Players.PlayerStats
        - id: debtor
          type: CardBattle.Core.Players.PlayerStats
      overload: CardBattle.Core.Players.Debt.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Players.Debt.UpdateTime
      commentId: M:CardBattle.Core.Players.Debt.UpdateTime
      language: CSharp
      name:
        CSharp: UpdateTime()
        VB: UpdateTime()
      nameWithType:
        CSharp: Debt.UpdateTime()
        VB: Debt.UpdateTime()
      qualifiedName:
        CSharp: CardBattle.Core.Players.Debt.UpdateTime()
        VB: CardBattle.Core.Players.Debt.UpdateTime()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Players
      source:
        id: UpdateTime
        path: ''
        startLine: 1006
      syntax:
        content:
          CSharp: public void UpdateTime()
          VB: Public Sub UpdateTime
      overload: CardBattle.Core.Players.Debt.UpdateTime*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Players.Debt.AddDebt(System.Int32)
      commentId: M:CardBattle.Core.Players.Debt.AddDebt(System.Int32)
      language: CSharp
      name:
        CSharp: AddDebt(Int32)
        VB: AddDebt(Int32)
      nameWithType:
        CSharp: Debt.AddDebt(Int32)
        VB: Debt.AddDebt(Int32)
      qualifiedName:
        CSharp: CardBattle.Core.Players.Debt.AddDebt(System.Int32)
        VB: CardBattle.Core.Players.Debt.AddDebt(System.Int32)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Players
      source:
        id: AddDebt
        path: ''
        startLine: 1011
      syntax:
        content:
          CSharp: public void AddDebt(int amount)
          VB: Public Sub AddDebt(amount As Integer)
        parameters:
        - id: amount
          type: System.Int32
      overload: CardBattle.Core.Players.Debt.AddDebt*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Players.Debt.PayDebt
      commentId: M:CardBattle.Core.Players.Debt.PayDebt
      language: CSharp
      name:
        CSharp: PayDebt()
        VB: PayDebt()
      nameWithType:
        CSharp: Debt.PayDebt()
        VB: Debt.PayDebt()
      qualifiedName:
        CSharp: CardBattle.Core.Players.Debt.PayDebt()
        VB: CardBattle.Core.Players.Debt.PayDebt()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Players
      source:
        id: PayDebt
        path: ''
        startLine: 1016
      summary: "\nPays the debts\n"
      example: []
      syntax:
        content:
          CSharp: public bool PayDebt()
          VB: Public Function PayDebt As Boolean
        return:
          type: System.Boolean
          description: True if the payment was successful.
      overload: CardBattle.Core.Players.Debt.PayDebt*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: CardBattle.Core.Players.IPlayerStats
    commentId: T:CardBattle.Core.Players.IPlayerStats
    language: CSharp
    name:
      CSharp: IPlayerStats
      VB: IPlayerStats
    nameWithType:
      CSharp: IPlayerStats
      VB: IPlayerStats
    qualifiedName:
      CSharp: CardBattle.Core.Players.IPlayerStats
      VB: CardBattle.Core.Players.IPlayerStats
    type: Interface
    assemblies:
    - cs.temp.dll
    namespace: CardBattle.Core.Players
    source:
      id: IPlayerStats
      path: ''
      startLine: 1042
    syntax:
      content:
        CSharp: public interface IPlayerStats
        VB: Public Interface IPlayerStats
    modifiers:
      CSharp:
      - public
      - interface
      VB:
      - Public
      - Interface
    items:
    - id: CardBattle.Core.Players.IPlayerStats.Money
      commentId: P:CardBattle.Core.Players.IPlayerStats.Money
      language: CSharp
      name:
        CSharp: Money
        VB: Money
      nameWithType:
        CSharp: IPlayerStats.Money
        VB: IPlayerStats.Money
      qualifiedName:
        CSharp: CardBattle.Core.Players.IPlayerStats.Money
        VB: CardBattle.Core.Players.IPlayerStats.Money
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Players
      source:
        id: Money
        path: ''
        startLine: 1044
      syntax:
        content:
          CSharp: int Money { get; set; }
          VB: Property Money As Integer
        parameters: []
        return:
          type: System.Int32
      overload: CardBattle.Core.Players.IPlayerStats.Money*
      modifiers:
        CSharp:
        - get
        - set
        VB: []
    - id: CardBattle.Core.Players.IPlayerStats.Debts
      commentId: P:CardBattle.Core.Players.IPlayerStats.Debts
      language: CSharp
      name:
        CSharp: Debts
        VB: Debts
      nameWithType:
        CSharp: IPlayerStats.Debts
        VB: IPlayerStats.Debts
      qualifiedName:
        CSharp: CardBattle.Core.Players.IPlayerStats.Debts
        VB: CardBattle.Core.Players.IPlayerStats.Debts
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Players
      source:
        id: Debts
        path: ''
        startLine: 1045
      syntax:
        content:
          CSharp: List<Debt> Debts { get; }
          VB: ReadOnly Property Debts As List(Of Debt)
        parameters: []
        return:
          type: System.Collections.Generic.List{CardBattle.Core.Players.Debt}
      overload: CardBattle.Core.Players.IPlayerStats.Debts*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - id: CardBattle.Core.Players.IPlayerStats.VillageCount
      commentId: P:CardBattle.Core.Players.IPlayerStats.VillageCount
      language: CSharp
      name:
        CSharp: VillageCount
        VB: VillageCount
      nameWithType:
        CSharp: IPlayerStats.VillageCount
        VB: IPlayerStats.VillageCount
      qualifiedName:
        CSharp: CardBattle.Core.Players.IPlayerStats.VillageCount
        VB: CardBattle.Core.Players.IPlayerStats.VillageCount
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Players
      source:
        id: VillageCount
        path: ''
        startLine: 1046
      syntax:
        content:
          CSharp: int VillageCount { get; }
          VB: ReadOnly Property VillageCount As Integer
        parameters: []
        return:
          type: System.Int32
      overload: CardBattle.Core.Players.IPlayerStats.VillageCount*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
    - id: CardBattle.Core.Players.IPlayerStats.TownCount
      commentId: P:CardBattle.Core.Players.IPlayerStats.TownCount
      language: CSharp
      name:
        CSharp: TownCount
        VB: TownCount
      nameWithType:
        CSharp: IPlayerStats.TownCount
        VB: IPlayerStats.TownCount
      qualifiedName:
        CSharp: CardBattle.Core.Players.IPlayerStats.TownCount
        VB: CardBattle.Core.Players.IPlayerStats.TownCount
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Players
      source:
        id: TownCount
        path: ''
        startLine: 1047
      syntax:
        content:
          CSharp: int TownCount { get; }
          VB: ReadOnly Property TownCount As Integer
        parameters: []
        return:
          type: System.Int32
      overload: CardBattle.Core.Players.IPlayerStats.TownCount*
      modifiers:
        CSharp:
        - get
        VB:
        - ReadOnly
  - id: CardBattle.Core.Players.Player
    commentId: T:CardBattle.Core.Players.Player
    language: CSharp
    name:
      CSharp: Player
      VB: Player
    nameWithType:
      CSharp: Player
      VB: Player
    qualifiedName:
      CSharp: CardBattle.Core.Players.Player
      VB: CardBattle.Core.Players.Player
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: CardBattle.Core.Players
    source:
      id: Player
      path: ''
      startLine: 1057
    syntax:
      content:
        CSharp: 'public class Player : PlayerStats, IPlayerStats'
        VB: >-
          Public Class Player

              Inherits PlayerStats

              Implements IPlayerStats
    inheritance:
    - System.Object
    - CardBattle.Core.Players.PlayerStats
    implements:
    - CardBattle.Core.Players.IPlayerStats
    inheritedMembers:
    - CardBattle.Core.Players.PlayerStats.debts
    - CardBattle.Core.Players.PlayerStats.revenue
    - CardBattle.Core.Players.PlayerStats.Money
    - CardBattle.Core.Players.PlayerStats.Debts
    - CardBattle.Core.Players.PlayerStats.VillageCount
    - CardBattle.Core.Players.PlayerStats.TownCount
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: CardBattle.Core.Players.Player.isItHisTurn
      commentId: F:CardBattle.Core.Players.Player.isItHisTurn
      language: CSharp
      name:
        CSharp: isItHisTurn
        VB: isItHisTurn
      nameWithType:
        CSharp: Player.isItHisTurn
        VB: Player.isItHisTurn
      qualifiedName:
        CSharp: CardBattle.Core.Players.Player.isItHisTurn
        VB: CardBattle.Core.Players.Player.isItHisTurn
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Players
      source:
        id: isItHisTurn
        path: ''
        startLine: 1062
      syntax:
        content:
          CSharp: public bool isItHisTurn
          VB: Public isItHisTurn As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Players.Player.PlayerIndex
      commentId: P:CardBattle.Core.Players.Player.PlayerIndex
      language: CSharp
      name:
        CSharp: PlayerIndex
        VB: PlayerIndex
      nameWithType:
        CSharp: Player.PlayerIndex
        VB: Player.PlayerIndex
      qualifiedName:
        CSharp: CardBattle.Core.Players.Player.PlayerIndex
        VB: CardBattle.Core.Players.Player.PlayerIndex
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Players
      source:
        id: PlayerIndex
        path: ''
        startLine: 1064
      syntax:
        content:
          CSharp: public int PlayerIndex { get; }
          VB: Public ReadOnly Property PlayerIndex As Integer
        parameters: []
        return:
          type: System.Int32
      overload: CardBattle.Core.Players.Player.PlayerIndex*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: CardBattle.Core.Players.Player.NetworkPlayer
      commentId: P:CardBattle.Core.Players.Player.NetworkPlayer
      language: CSharp
      name:
        CSharp: NetworkPlayer
        VB: NetworkPlayer
      nameWithType:
        CSharp: Player.NetworkPlayer
        VB: Player.NetworkPlayer
      qualifiedName:
        CSharp: CardBattle.Core.Players.Player.NetworkPlayer
        VB: CardBattle.Core.Players.Player.NetworkPlayer
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Players
      source:
        id: NetworkPlayer
        path: ''
        startLine: 1065
      syntax:
        content:
          CSharp: public Photon.Realtime.Player NetworkPlayer { get; }
          VB: Public ReadOnly Property NetworkPlayer As Photon.Realtime.Player
        parameters: []
        return:
          type: Photon.Realtime.Player
      overload: CardBattle.Core.Players.Player.NetworkPlayer*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: CardBattle.Core.Players.Player.AddComponentTo(GameObject,Photon.Realtime.Player)
      commentId: M:CardBattle.Core.Players.Player.AddComponentTo(GameObject,Photon.Realtime.Player)
      language: CSharp
      name:
        CSharp: AddComponentTo(GameObject, Photon.Realtime.Player)
        VB: AddComponentTo(GameObject, Photon.Realtime.Player)
      nameWithType:
        CSharp: Player.AddComponentTo(GameObject, Photon.Realtime.Player)
        VB: Player.AddComponentTo(GameObject, Photon.Realtime.Player)
      qualifiedName:
        CSharp: CardBattle.Core.Players.Player.AddComponentTo(GameObject, Photon.Realtime.Player)
        VB: CardBattle.Core.Players.Player.AddComponentTo(GameObject, Photon.Realtime.Player)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Players
      source:
        id: AddComponentTo
        path: ''
        startLine: 1067
      syntax:
        content:
          CSharp: public static Player AddComponentTo(GameObject attachTo, Photon.Realtime.Player networkPlayer)
          VB: Public Shared Function AddComponentTo(attachTo As GameObject, networkPlayer As Photon.Realtime.Player) As Player
        parameters:
        - id: attachTo
          type: GameObject
        - id: networkPlayer
          type: Photon.Realtime.Player
        return:
          type: CardBattle.Core.Players.Player
      overload: CardBattle.Core.Players.Player.AddComponentTo*
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
  - id: CardBattle.Core.Players.PlayerStats
    commentId: T:CardBattle.Core.Players.PlayerStats
    language: CSharp
    name:
      CSharp: PlayerStats
      VB: PlayerStats
    nameWithType:
      CSharp: PlayerStats
      VB: PlayerStats
    qualifiedName:
      CSharp: CardBattle.Core.Players.PlayerStats
      VB: CardBattle.Core.Players.PlayerStats
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: CardBattle.Core.Players
    source:
      id: PlayerStats
      path: ''
      startLine: 1084
    syntax:
      content:
        CSharp: 'public class PlayerStats : MonoBehaviour, IPlayerStats'
        VB: >-
          Public Class PlayerStats

              Inherits MonoBehaviour

              Implements IPlayerStats
    inheritance:
    - System.Object
    implements:
    - CardBattle.Core.Players.IPlayerStats
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: CardBattle.Core.Players.PlayerStats.debts
      commentId: F:CardBattle.Core.Players.PlayerStats.debts
      language: CSharp
      name:
        CSharp: debts
        VB: debts
      nameWithType:
        CSharp: PlayerStats.debts
        VB: PlayerStats.debts
      qualifiedName:
        CSharp: CardBattle.Core.Players.PlayerStats.debts
        VB: CardBattle.Core.Players.PlayerStats.debts
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Players
      source:
        id: debts
        path: ''
        startLine: 1087
      syntax:
        content:
          CSharp: protected List<Debt> debts
          VB: Protected debts As List(Of Debt)
        return:
          type: System.Collections.Generic.List{CardBattle.Core.Players.Debt}
      modifiers:
        CSharp:
        - protected
        VB:
        - Protected
    - id: CardBattle.Core.Players.PlayerStats.revenue
      commentId: F:CardBattle.Core.Players.PlayerStats.revenue
      language: CSharp
      name:
        CSharp: revenue
        VB: revenue
      nameWithType:
        CSharp: PlayerStats.revenue
        VB: PlayerStats.revenue
      qualifiedName:
        CSharp: CardBattle.Core.Players.PlayerStats.revenue
        VB: CardBattle.Core.Players.PlayerStats.revenue
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Players
      source:
        id: revenue
        path: ''
        startLine: 1091
      syntax:
        content:
          CSharp: public Revenue revenue
          VB: Public revenue As Revenue
        return:
          type: CardBattle.Core.Players.Revenue
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Players.PlayerStats.Money
      commentId: P:CardBattle.Core.Players.PlayerStats.Money
      language: CSharp
      name:
        CSharp: Money
        VB: Money
      nameWithType:
        CSharp: PlayerStats.Money
        VB: PlayerStats.Money
      qualifiedName:
        CSharp: CardBattle.Core.Players.PlayerStats.Money
        VB: CardBattle.Core.Players.PlayerStats.Money
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Players
      source:
        id: Money
        path: ''
        startLine: 1093
      syntax:
        content:
          CSharp: public int Money { get; set; }
          VB: Public Property Money As Integer
        parameters: []
        return:
          type: System.Int32
      overload: CardBattle.Core.Players.PlayerStats.Money*
      implements:
      - CardBattle.Core.Players.IPlayerStats.Money
      modifiers:
        CSharp:
        - public
        - get
        - set
        VB:
        - Public
    - id: CardBattle.Core.Players.PlayerStats.Debts
      commentId: P:CardBattle.Core.Players.PlayerStats.Debts
      language: CSharp
      name:
        CSharp: Debts
        VB: Debts
      nameWithType:
        CSharp: PlayerStats.Debts
        VB: PlayerStats.Debts
      qualifiedName:
        CSharp: CardBattle.Core.Players.PlayerStats.Debts
        VB: CardBattle.Core.Players.PlayerStats.Debts
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Players
      source:
        id: Debts
        path: ''
        startLine: 1098
      syntax:
        content:
          CSharp: public List<Debt> Debts { get; }
          VB: Public ReadOnly Property Debts As List(Of Debt)
        parameters: []
        return:
          type: System.Collections.Generic.List{CardBattle.Core.Players.Debt}
      overload: CardBattle.Core.Players.PlayerStats.Debts*
      implements:
      - CardBattle.Core.Players.IPlayerStats.Debts
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: CardBattle.Core.Players.PlayerStats.VillageCount
      commentId: P:CardBattle.Core.Players.PlayerStats.VillageCount
      language: CSharp
      name:
        CSharp: VillageCount
        VB: VillageCount
      nameWithType:
        CSharp: PlayerStats.VillageCount
        VB: PlayerStats.VillageCount
      qualifiedName:
        CSharp: CardBattle.Core.Players.PlayerStats.VillageCount
        VB: CardBattle.Core.Players.PlayerStats.VillageCount
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Players
      source:
        id: VillageCount
        path: ''
        startLine: 1103
      syntax:
        content:
          CSharp: public int VillageCount { get; }
          VB: Public ReadOnly Property VillageCount As Integer
        parameters: []
        return:
          type: System.Int32
      overload: CardBattle.Core.Players.PlayerStats.VillageCount*
      implements:
      - CardBattle.Core.Players.IPlayerStats.VillageCount
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: CardBattle.Core.Players.PlayerStats.TownCount
      commentId: P:CardBattle.Core.Players.PlayerStats.TownCount
      language: CSharp
      name:
        CSharp: TownCount
        VB: TownCount
      nameWithType:
        CSharp: PlayerStats.TownCount
        VB: PlayerStats.TownCount
      qualifiedName:
        CSharp: CardBattle.Core.Players.PlayerStats.TownCount
        VB: CardBattle.Core.Players.PlayerStats.TownCount
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Players
      source:
        id: TownCount
        path: ''
        startLine: 1104
      syntax:
        content:
          CSharp: public int TownCount { get; }
          VB: Public ReadOnly Property TownCount As Integer
        parameters: []
        return:
          type: System.Int32
      overload: CardBattle.Core.Players.PlayerStats.TownCount*
      implements:
      - CardBattle.Core.Players.IPlayerStats.TownCount
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
  - id: CardBattle.Core.Players.Revenue
    commentId: T:CardBattle.Core.Players.Revenue
    language: CSharp
    name:
      CSharp: Revenue
      VB: Revenue
    nameWithType:
      CSharp: Revenue
      VB: Revenue
    qualifiedName:
      CSharp: CardBattle.Core.Players.Revenue
      VB: CardBattle.Core.Players.Revenue
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: CardBattle.Core.Players
    source:
      id: Revenue
      path: ''
      startLine: 1115
    syntax:
      content:
        CSharp: public class Revenue
        VB: Public Class Revenue
    inheritance:
    - System.Object
    inheritedMembers:
    - System.Object.ToString
    - System.Object.Equals(System.Object)
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetHashCode
    - System.Object.GetType
    - System.Object.MemberwiseClone
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: CardBattle.Core.Players.Revenue.influencers
      commentId: F:CardBattle.Core.Players.Revenue.influencers
      language: CSharp
      name:
        CSharp: influencers
        VB: influencers
      nameWithType:
        CSharp: Revenue.influencers
        VB: Revenue.influencers
      qualifiedName:
        CSharp: CardBattle.Core.Players.Revenue.influencers
        VB: CardBattle.Core.Players.Revenue.influencers
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Players
      source:
        id: influencers
        path: ''
        startLine: 1118
      syntax:
        content:
          CSharp: public Dictionary<PlayerStats, int> influencers
          VB: Public influencers As Dictionary(Of PlayerStats, Integer)
        return:
          type: System.Collections.Generic.Dictionary{CardBattle.Core.Players.PlayerStats,System.Int32}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Players.Revenue.additionalIncome
      commentId: F:CardBattle.Core.Players.Revenue.additionalIncome
      language: CSharp
      name:
        CSharp: additionalIncome
        VB: additionalIncome
      nameWithType:
        CSharp: Revenue.additionalIncome
        VB: Revenue.additionalIncome
      qualifiedName:
        CSharp: CardBattle.Core.Players.Revenue.additionalIncome
        VB: CardBattle.Core.Players.Revenue.additionalIncome
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Players
      source:
        id: additionalIncome
        path: ''
        startLine: 1121
      syntax:
        content:
          CSharp: public int additionalIncome
          VB: Public additionalIncome As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Players.Revenue.Multiplier
      commentId: P:CardBattle.Core.Players.Revenue.Multiplier
      language: CSharp
      name:
        CSharp: Multiplier
        VB: Multiplier
      nameWithType:
        CSharp: Revenue.Multiplier
        VB: Revenue.Multiplier
      qualifiedName:
        CSharp: CardBattle.Core.Players.Revenue.Multiplier
        VB: CardBattle.Core.Players.Revenue.Multiplier
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Players
      source:
        id: Multiplier
        path: ''
        startLine: 1123
      syntax:
        content:
          CSharp: public int Multiplier { get; }
          VB: Public ReadOnly Property Multiplier As Integer
        parameters: []
        return:
          type: System.Int32
      overload: CardBattle.Core.Players.Revenue.Multiplier*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: CardBattle.Core.Players.Revenue.#ctor(CardBattle.Core.Players.PlayerStats)
      commentId: M:CardBattle.Core.Players.Revenue.#ctor(CardBattle.Core.Players.PlayerStats)
      language: CSharp
      name:
        CSharp: Revenue(PlayerStats)
        VB: Revenue(PlayerStats)
      nameWithType:
        CSharp: Revenue.Revenue(PlayerStats)
        VB: Revenue.Revenue(PlayerStats)
      qualifiedName:
        CSharp: CardBattle.Core.Players.Revenue.Revenue(CardBattle.Core.Players.PlayerStats)
        VB: CardBattle.Core.Players.Revenue.Revenue(CardBattle.Core.Players.PlayerStats)
      type: Constructor
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Players
      source:
        id: .ctor
        path: ''
        startLine: 1125
      syntax:
        content:
          CSharp: public Revenue(PlayerStats player)
          VB: Public Sub New(player As PlayerStats)
        parameters:
        - id: player
          type: CardBattle.Core.Players.PlayerStats
      overload: CardBattle.Core.Players.Revenue.#ctor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Players.Revenue.DoubleMultiplier
      commentId: M:CardBattle.Core.Players.Revenue.DoubleMultiplier
      language: CSharp
      name:
        CSharp: DoubleMultiplier()
        VB: DoubleMultiplier()
      nameWithType:
        CSharp: Revenue.DoubleMultiplier()
        VB: Revenue.DoubleMultiplier()
      qualifiedName:
        CSharp: CardBattle.Core.Players.Revenue.DoubleMultiplier()
        VB: CardBattle.Core.Players.Revenue.DoubleMultiplier()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Players
      source:
        id: DoubleMultiplier
        path: ''
        startLine: 1130
      syntax:
        content:
          CSharp: public void DoubleMultiplier()
          VB: Public Sub DoubleMultiplier
      overload: CardBattle.Core.Players.Revenue.DoubleMultiplier*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Players.Revenue.QuadrupleMultiplier
      commentId: M:CardBattle.Core.Players.Revenue.QuadrupleMultiplier
      language: CSharp
      name:
        CSharp: QuadrupleMultiplier()
        VB: QuadrupleMultiplier()
      nameWithType:
        CSharp: Revenue.QuadrupleMultiplier()
        VB: Revenue.QuadrupleMultiplier()
      qualifiedName:
        CSharp: CardBattle.Core.Players.Revenue.QuadrupleMultiplier()
        VB: CardBattle.Core.Players.Revenue.QuadrupleMultiplier()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Players
      source:
        id: QuadrupleMultiplier
        path: ''
        startLine: 1131
      syntax:
        content:
          CSharp: public void QuadrupleMultiplier()
          VB: Public Sub QuadrupleMultiplier
      overload: CardBattle.Core.Players.Revenue.QuadrupleMultiplier*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Players.Revenue.ZeroMultiplier
      commentId: M:CardBattle.Core.Players.Revenue.ZeroMultiplier
      language: CSharp
      name:
        CSharp: ZeroMultiplier()
        VB: ZeroMultiplier()
      nameWithType:
        CSharp: Revenue.ZeroMultiplier()
        VB: Revenue.ZeroMultiplier()
      qualifiedName:
        CSharp: CardBattle.Core.Players.Revenue.ZeroMultiplier()
        VB: CardBattle.Core.Players.Revenue.ZeroMultiplier()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Players
      source:
        id: ZeroMultiplier
        path: ''
        startLine: 1132
      syntax:
        content:
          CSharp: public void ZeroMultiplier()
          VB: Public Sub ZeroMultiplier
      overload: CardBattle.Core.Players.Revenue.ZeroMultiplier*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Players.Revenue.ResetMultiplier
      commentId: M:CardBattle.Core.Players.Revenue.ResetMultiplier
      language: CSharp
      name:
        CSharp: ResetMultiplier()
        VB: ResetMultiplier()
      nameWithType:
        CSharp: Revenue.ResetMultiplier()
        VB: Revenue.ResetMultiplier()
      qualifiedName:
        CSharp: CardBattle.Core.Players.Revenue.ResetMultiplier()
        VB: CardBattle.Core.Players.Revenue.ResetMultiplier()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Players
      source:
        id: ResetMultiplier
        path: ''
        startLine: 1133
      syntax:
        content:
          CSharp: public void ResetMultiplier()
          VB: Public Sub ResetMultiplier
      overload: CardBattle.Core.Players.Revenue.ResetMultiplier*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Core.Players.Revenue.GetRevenue
      commentId: M:CardBattle.Core.Players.Revenue.GetRevenue
      language: CSharp
      name:
        CSharp: GetRevenue()
        VB: GetRevenue()
      nameWithType:
        CSharp: Revenue.GetRevenue()
        VB: Revenue.GetRevenue()
      qualifiedName:
        CSharp: CardBattle.Core.Players.Revenue.GetRevenue()
        VB: CardBattle.Core.Players.Revenue.GetRevenue()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Core.Players
      source:
        id: GetRevenue
        path: ''
        startLine: 1147
      syntax:
        content:
          CSharp: public int GetRevenue()
          VB: Public Function GetRevenue As Integer
        return:
          type: System.Int32
      overload: CardBattle.Core.Players.Revenue.GetRevenue*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: CardBattle.Display
  commentId: N:CardBattle.Display
  language: CSharp
  name:
    CSharp: CardBattle.Display
    VB: CardBattle.Display
  nameWithType:
    CSharp: CardBattle.Display
    VB: CardBattle.Display
  qualifiedName:
    CSharp: CardBattle.Display
    VB: CardBattle.Display
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: CardBattle.Display.HUD
    commentId: T:CardBattle.Display.HUD
    language: CSharp
    name:
      CSharp: HUD
      VB: HUD
    nameWithType:
      CSharp: HUD
      VB: HUD
    qualifiedName:
      CSharp: CardBattle.Display.HUD
      VB: CardBattle.Display.HUD
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: CardBattle.Display
    source:
      id: HUD
      path: ''
      startLine: 1371
    syntax:
      content:
        CSharp: 'public class HUD : MonoBehaviour'
        VB: >-
          Public Class HUD

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
  - id: CardBattle.Display.MenuManager
    commentId: T:CardBattle.Display.MenuManager
    language: CSharp
    name:
      CSharp: MenuManager
      VB: MenuManager
    nameWithType:
      CSharp: MenuManager
      VB: MenuManager
    qualifiedName:
      CSharp: CardBattle.Display.MenuManager
      VB: CardBattle.Display.MenuManager
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: CardBattle.Display
    source:
      id: MenuManager
      path: ''
      startLine: 1391
    syntax:
      content:
        CSharp: 'public class MenuManager : MonoBehaviour'
        VB: >-
          Public Class MenuManager

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: CardBattle.Display.MenuManager.Instance
      commentId: F:CardBattle.Display.MenuManager.Instance
      language: CSharp
      name:
        CSharp: Instance
        VB: Instance
      nameWithType:
        CSharp: MenuManager.Instance
        VB: MenuManager.Instance
      qualifiedName:
        CSharp: CardBattle.Display.MenuManager.Instance
        VB: CardBattle.Display.MenuManager.Instance
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Display
      source:
        id: Instance
        path: ''
        startLine: 1395
      syntax:
        content:
          CSharp: public static MenuManager Instance
          VB: Public Shared Instance As MenuManager
        return:
          type: CardBattle.Display.MenuManager
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: CardBattle.Display.MenuManager.panelManager
      commentId: F:CardBattle.Display.MenuManager.panelManager
      language: CSharp
      name:
        CSharp: panelManager
        VB: panelManager
      nameWithType:
        CSharp: MenuManager.panelManager
        VB: MenuManager.panelManager
      qualifiedName:
        CSharp: CardBattle.Display.MenuManager.panelManager
        VB: CardBattle.Display.MenuManager.panelManager
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Display
      source:
        id: panelManager
        path: ''
        startLine: 1396
      syntax:
        content:
          CSharp: public PanelManager panelManager
          VB: Public panelManager As PanelManager
        return:
          type: CardBattle.Display.PanelManager
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: CardBattle.Display.Panel
    commentId: T:CardBattle.Display.Panel
    language: CSharp
    name:
      CSharp: Panel
      VB: Panel
    nameWithType:
      CSharp: Panel
      VB: Panel
    qualifiedName:
      CSharp: CardBattle.Display.Panel
      VB: CardBattle.Display.Panel
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: CardBattle.Display
    source:
      id: Panel
      path: ''
      startLine: 1412
    syntax:
      content:
        CSharp: 'public abstract class Panel : MonoBehaviour'
        VB: >-
          Public MustInherit Class Panel

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - abstract
      - class
      VB:
      - Public
      - MustInherit
      - Class
    items:
    - id: CardBattle.Display.Panel.panelName
      commentId: F:CardBattle.Display.Panel.panelName
      language: CSharp
      name:
        CSharp: panelName
        VB: panelName
      nameWithType:
        CSharp: Panel.panelName
        VB: Panel.panelName
      qualifiedName:
        CSharp: CardBattle.Display.Panel.panelName
        VB: CardBattle.Display.Panel.panelName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Display
      source:
        id: panelName
        path: ''
        startLine: 1414
      syntax:
        content:
          CSharp: public string panelName
          VB: Public panelName As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Display.Panel.interactables
      commentId: F:CardBattle.Display.Panel.interactables
      language: CSharp
      name:
        CSharp: interactables
        VB: interactables
      nameWithType:
        CSharp: Panel.interactables
        VB: Panel.interactables
      qualifiedName:
        CSharp: CardBattle.Display.Panel.interactables
        VB: CardBattle.Display.Panel.interactables
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Display
      source:
        id: interactables
        path: ''
        startLine: 1415
      syntax:
        content:
          CSharp: public List<Selectable> interactables
          VB: Public interactables As List(Of Selectable)
        return:
          type: System.Collections.Generic.List{Selectable}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Display.Panel.Open
      commentId: M:CardBattle.Display.Panel.Open
      language: CSharp
      name:
        CSharp: Open()
        VB: Open()
      nameWithType:
        CSharp: Panel.Open()
        VB: Panel.Open()
      qualifiedName:
        CSharp: CardBattle.Display.Panel.Open()
        VB: CardBattle.Display.Panel.Open()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Display
      source:
        id: Open
        path: ''
        startLine: 1417
      syntax:
        content:
          CSharp: public void Open()
          VB: Public Sub Open
      overload: CardBattle.Display.Panel.Open*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Display.Panel.Close
      commentId: M:CardBattle.Display.Panel.Close
      language: CSharp
      name:
        CSharp: Close()
        VB: Close()
      nameWithType:
        CSharp: Panel.Close()
        VB: Panel.Close()
      qualifiedName:
        CSharp: CardBattle.Display.Panel.Close()
        VB: CardBattle.Display.Panel.Close()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Display
      source:
        id: Close
        path: ''
        startLine: 1423
      syntax:
        content:
          CSharp: public void Close()
          VB: Public Sub Close
      overload: CardBattle.Display.Panel.Close*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Display.Panel.Load
      commentId: M:CardBattle.Display.Panel.Load
      language: CSharp
      name:
        CSharp: Load()
        VB: Load()
      nameWithType:
        CSharp: Panel.Load()
        VB: Panel.Load()
      qualifiedName:
        CSharp: CardBattle.Display.Panel.Load()
        VB: CardBattle.Display.Panel.Load()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Display
      source:
        id: Load
        path: ''
        startLine: 1425
      syntax:
        content:
          CSharp: protected abstract void Load()
          VB: Protected MustOverride Sub Load
      overload: CardBattle.Display.Panel.Load*
      modifiers:
        CSharp:
        - protected
        - abstract
        VB:
        - Protected
        - MustOverride
    - id: CardBattle.Display.Panel.Update
      commentId: M:CardBattle.Display.Panel.Update
      language: CSharp
      name:
        CSharp: Update()
        VB: Update()
      nameWithType:
        CSharp: Panel.Update()
        VB: Panel.Update()
      qualifiedName:
        CSharp: CardBattle.Display.Panel.Update()
        VB: CardBattle.Display.Panel.Update()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Display
      source:
        id: Update
        path: ''
        startLine: 1426
      syntax:
        content:
          CSharp: protected virtual void Update()
          VB: Protected Overridable Sub Update
      overload: CardBattle.Display.Panel.Update*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: CardBattle.Display.Panel.Start
      commentId: M:CardBattle.Display.Panel.Start
      language: CSharp
      name:
        CSharp: Start()
        VB: Start()
      nameWithType:
        CSharp: Panel.Start()
        VB: Panel.Start()
      qualifiedName:
        CSharp: CardBattle.Display.Panel.Start()
        VB: CardBattle.Display.Panel.Start()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Display
      source:
        id: Start
        path: ''
        startLine: 1427
      syntax:
        content:
          CSharp: protected virtual void Start()
          VB: Protected Overridable Sub Start
      overload: CardBattle.Display.Panel.Start*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: CardBattle.Display.Panel.Awake
      commentId: M:CardBattle.Display.Panel.Awake
      language: CSharp
      name:
        CSharp: Awake()
        VB: Awake()
      nameWithType:
        CSharp: Panel.Awake()
        VB: Panel.Awake()
      qualifiedName:
        CSharp: CardBattle.Display.Panel.Awake()
        VB: CardBattle.Display.Panel.Awake()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Display
      source:
        id: Awake
        path: ''
        startLine: 1428
      syntax:
        content:
          CSharp: protected virtual void Awake()
          VB: Protected Overridable Sub Awake
      overload: CardBattle.Display.Panel.Awake*
      modifiers:
        CSharp:
        - protected
        - virtual
        VB:
        - Protected
        - Overridable
    - id: CardBattle.Display.Panel.Set(System.Boolean)
      commentId: M:CardBattle.Display.Panel.Set(System.Boolean)
      language: CSharp
      name:
        CSharp: Set(Boolean)
        VB: Set(Boolean)
      nameWithType:
        CSharp: Panel.Set(Boolean)
        VB: Panel.Set(Boolean)
      qualifiedName:
        CSharp: CardBattle.Display.Panel.Set(System.Boolean)
        VB: CardBattle.Display.Panel.Set(System.Boolean)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Display
      source:
        id: Set
        path: ''
        startLine: 1429
      syntax:
        content:
          CSharp: public virtual void Set(bool interactable)
          VB: Public Overridable Sub Set(interactable As Boolean)
        parameters:
        - id: interactable
          type: System.Boolean
      overload: CardBattle.Display.Panel.Set*
      modifiers:
        CSharp:
        - public
        - virtual
        VB:
        - Public
        - Overridable
  - id: CardBattle.Display.PanelManager
    commentId: T:CardBattle.Display.PanelManager
    language: CSharp
    name:
      CSharp: PanelManager
      VB: PanelManager
    nameWithType:
      CSharp: PanelManager
      VB: PanelManager
    qualifiedName:
      CSharp: CardBattle.Display.PanelManager
      VB: CardBattle.Display.PanelManager
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: CardBattle.Display
    source:
      id: PanelManager
      path: ''
      startLine: 1444
    syntax:
      content:
        CSharp: >-
          [Serializable]

          public class PanelManager : MonoBehaviour
        VB: >-
          <Serializable>

          Public Class PanelManager

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    attributes:
    - type: System.SerializableAttribute
      ctor: System.SerializableAttribute.#ctor
      arguments: []
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: CardBattle.Display.PanelManager.GetPanel(System.String)
      commentId: M:CardBattle.Display.PanelManager.GetPanel(System.String)
      language: CSharp
      name:
        CSharp: GetPanel(String)
        VB: GetPanel(String)
      nameWithType:
        CSharp: PanelManager.GetPanel(String)
        VB: PanelManager.GetPanel(String)
      qualifiedName:
        CSharp: CardBattle.Display.PanelManager.GetPanel(System.String)
        VB: CardBattle.Display.PanelManager.GetPanel(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Display
      source:
        id: GetPanel
        path: ''
        startLine: 1476
      syntax:
        content:
          CSharp: public Panel GetPanel(string panelName)
          VB: Public Function GetPanel(panelName As String) As Panel
        parameters:
        - id: panelName
          type: System.String
        return:
          type: CardBattle.Display.Panel
      overload: CardBattle.Display.PanelManager.GetPanel*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Display.PanelManager.GetPanel``1(System.String)
      commentId: M:CardBattle.Display.PanelManager.GetPanel``1(System.String)
      language: CSharp
      name:
        CSharp: GetPanel<T>(String)
        VB: GetPanel(Of T)(String)
      nameWithType:
        CSharp: PanelManager.GetPanel<T>(String)
        VB: PanelManager.GetPanel(Of T)(String)
      qualifiedName:
        CSharp: CardBattle.Display.PanelManager.GetPanel<T>(System.String)
        VB: CardBattle.Display.PanelManager.GetPanel(Of T)(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Display
      source:
        id: GetPanel
        path: ''
        startLine: 1477
      syntax:
        content:
          CSharp: >-
            public T GetPanel<T>(string panelName)

                where T : Panel
          VB: Public Function GetPanel(Of T As Panel)(panelName As String) As T
        parameters:
        - id: panelName
          type: System.String
        typeParameters:
        - id: T
        return:
          type: '{T}'
      overload: CardBattle.Display.PanelManager.GetPanel*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Display.PanelManager.OpenPanel(System.String)
      commentId: M:CardBattle.Display.PanelManager.OpenPanel(System.String)
      language: CSharp
      name:
        CSharp: OpenPanel(String)
        VB: OpenPanel(String)
      nameWithType:
        CSharp: PanelManager.OpenPanel(String)
        VB: PanelManager.OpenPanel(String)
      qualifiedName:
        CSharp: CardBattle.Display.PanelManager.OpenPanel(System.String)
        VB: CardBattle.Display.PanelManager.OpenPanel(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Display
      source:
        id: OpenPanel
        path: ''
        startLine: 1479
      syntax:
        content:
          CSharp: public void OpenPanel(string panelName)
          VB: Public Sub OpenPanel(panelName As String)
        parameters:
        - id: panelName
          type: System.String
      overload: CardBattle.Display.PanelManager.OpenPanel*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Display.PanelManager.ClosePanel(System.String)
      commentId: M:CardBattle.Display.PanelManager.ClosePanel(System.String)
      language: CSharp
      name:
        CSharp: ClosePanel(String)
        VB: ClosePanel(String)
      nameWithType:
        CSharp: PanelManager.ClosePanel(String)
        VB: PanelManager.ClosePanel(String)
      qualifiedName:
        CSharp: CardBattle.Display.PanelManager.ClosePanel(System.String)
        VB: CardBattle.Display.PanelManager.ClosePanel(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Display
      source:
        id: ClosePanel
        path: ''
        startLine: 1480
      syntax:
        content:
          CSharp: public void ClosePanel(string panelName)
          VB: Public Sub ClosePanel(panelName As String)
        parameters:
        - id: panelName
          type: System.String
      overload: CardBattle.Display.PanelManager.ClosePanel*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: CardBattle.Display.ReplaceWith
    commentId: T:CardBattle.Display.ReplaceWith
    language: CSharp
    name:
      CSharp: ReplaceWith
      VB: ReplaceWith
    nameWithType:
      CSharp: ReplaceWith
      VB: ReplaceWith
    qualifiedName:
      CSharp: CardBattle.Display.ReplaceWith
      VB: CardBattle.Display.ReplaceWith
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: CardBattle.Display
    source:
      id: ReplaceWith
      path: ''
      startLine: 1492
    syntax:
      content:
        CSharp: 'public class ReplaceWith : MonoBehaviour'
        VB: >-
          Public Class ReplaceWith

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items: []
- id: CardBattle.Display.Panels
  commentId: N:CardBattle.Display.Panels
  language: CSharp
  name:
    CSharp: CardBattle.Display.Panels
    VB: CardBattle.Display.Panels
  nameWithType:
    CSharp: CardBattle.Display.Panels
    VB: CardBattle.Display.Panels
  qualifiedName:
    CSharp: CardBattle.Display.Panels
    VB: CardBattle.Display.Panels
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: CardBattle.Display.Panels.StandardPanel
    commentId: T:CardBattle.Display.Panels.StandardPanel
    language: CSharp
    name:
      CSharp: StandardPanel
      VB: StandardPanel
    nameWithType:
      CSharp: StandardPanel
      VB: StandardPanel
    qualifiedName:
      CSharp: CardBattle.Display.Panels.StandardPanel
      VB: CardBattle.Display.Panels.StandardPanel
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: CardBattle.Display.Panels
    source:
      id: StandardPanel
      path: ''
      startLine: 1669
    syntax:
      content:
        CSharp: 'public class StandardPanel : Panel'
        VB: >-
          Public Class StandardPanel

              Inherits Panel
    inheritance:
    - System.Object
    - CardBattle.Display.Panel
    inheritedMembers:
    - CardBattle.Display.Panel.panelName
    - CardBattle.Display.Panel.interactables
    - CardBattle.Display.Panel.Open
    - CardBattle.Display.Panel.Close
    - CardBattle.Display.Panel.Update
    - CardBattle.Display.Panel.Start
    - CardBattle.Display.Panel.Awake
    - CardBattle.Display.Panel.Set(System.Boolean)
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: CardBattle.Display.Panels.StandardPanel.Load
      commentId: M:CardBattle.Display.Panels.StandardPanel.Load
      language: CSharp
      name:
        CSharp: Load()
        VB: Load()
      nameWithType:
        CSharp: StandardPanel.Load()
        VB: StandardPanel.Load()
      qualifiedName:
        CSharp: CardBattle.Display.Panels.StandardPanel.Load()
        VB: CardBattle.Display.Panels.StandardPanel.Load()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Display.Panels
      source:
        id: Load
        path: ''
        startLine: 1672
      syntax:
        content:
          CSharp: protected override void Load()
          VB: Protected Overrides Sub Load
      overload: CardBattle.Display.Panels.StandardPanel.Load*
      overridden: CardBattle.Display.Panel.Load
      modifiers:
        CSharp:
        - protected
        - override
        VB:
        - Protected
        - Overrides
- id: CardBattle.Networking
  commentId: N:CardBattle.Networking
  language: CSharp
  name:
    CSharp: CardBattle.Networking
    VB: CardBattle.Networking
  nameWithType:
    CSharp: CardBattle.Networking
    VB: CardBattle.Networking
  qualifiedName:
    CSharp: CardBattle.Networking
    VB: CardBattle.Networking
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: CardBattle.Networking.HexagonalFieldController
    commentId: T:CardBattle.Networking.HexagonalFieldController
    language: CSharp
    name:
      CSharp: HexagonalFieldController
      VB: HexagonalFieldController
    nameWithType:
      CSharp: HexagonalFieldController
      VB: HexagonalFieldController
    qualifiedName:
      CSharp: CardBattle.Networking.HexagonalFieldController
      VB: CardBattle.Networking.HexagonalFieldController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: CardBattle.Networking
    source:
      id: HexagonalFieldController
      path: ''
      startLine: 1763
    syntax:
      content:
        CSharp: 'public class HexagonalFieldController : MonoBehaviourPunCallbacks, IPunObservable'
        VB: >-
          Public Class HexagonalFieldController

              Inherits MonoBehaviourPunCallbacks

              Implements IPunObservable
    inheritance:
    - System.Object
    implements:
    - IPunObservable
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: CardBattle.Networking.HexagonalFieldController.IsLerped
      commentId: P:CardBattle.Networking.HexagonalFieldController.IsLerped
      language: CSharp
      name:
        CSharp: IsLerped
        VB: IsLerped
      nameWithType:
        CSharp: HexagonalFieldController.IsLerped
        VB: HexagonalFieldController.IsLerped
      qualifiedName:
        CSharp: CardBattle.Networking.HexagonalFieldController.IsLerped
        VB: CardBattle.Networking.HexagonalFieldController.IsLerped
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Networking
      source:
        id: IsLerped
        path: ''
        startLine: 1772
      syntax:
        content:
          CSharp: public bool IsLerped { get; }
          VB: Public ReadOnly Property IsLerped As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: CardBattle.Networking.HexagonalFieldController.IsLerped*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: CardBattle.Networking.HexagonalFieldController.Initialize(System.Int32,Vector2,Vector3,CardBattle.Networking.MapGeneration)
      commentId: M:CardBattle.Networking.HexagonalFieldController.Initialize(System.Int32,Vector2,Vector3,CardBattle.Networking.MapGeneration)
      language: CSharp
      name:
        CSharp: Initialize(Int32, Vector2, Vector3, MapGeneration)
        VB: Initialize(Int32, Vector2, Vector3, MapGeneration)
      nameWithType:
        CSharp: HexagonalFieldController.Initialize(Int32, Vector2, Vector3, MapGeneration)
        VB: HexagonalFieldController.Initialize(Int32, Vector2, Vector3, MapGeneration)
      qualifiedName:
        CSharp: CardBattle.Networking.HexagonalFieldController.Initialize(System.Int32, Vector2, Vector3, CardBattle.Networking.MapGeneration)
        VB: CardBattle.Networking.HexagonalFieldController.Initialize(System.Int32, Vector2, Vector3, CardBattle.Networking.MapGeneration)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Networking
      source:
        id: Initialize
        path: ''
        startLine: 1790
      syntax:
        content:
          CSharp: public void Initialize(int index, Vector2 axialCoordinates, Vector3 coordinates, MapGeneration indexedBy)
          VB: Public Sub Initialize(index As Integer, axialCoordinates As Vector2, coordinates As Vector3, indexedBy As MapGeneration)
        parameters:
        - id: index
          type: System.Int32
        - id: axialCoordinates
          type: Vector2
        - id: coordinates
          type: Vector3
        - id: indexedBy
          type: CardBattle.Networking.MapGeneration
      overload: CardBattle.Networking.HexagonalFieldController.Initialize*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Networking.HexagonalFieldController.OnPhotonSerializeView(PhotonStream,PhotonMessageInfo)
      commentId: M:CardBattle.Networking.HexagonalFieldController.OnPhotonSerializeView(PhotonStream,PhotonMessageInfo)
      language: CSharp
      name:
        CSharp: OnPhotonSerializeView(PhotonStream, PhotonMessageInfo)
        VB: OnPhotonSerializeView(PhotonStream, PhotonMessageInfo)
      nameWithType:
        CSharp: HexagonalFieldController.OnPhotonSerializeView(PhotonStream, PhotonMessageInfo)
        VB: HexagonalFieldController.OnPhotonSerializeView(PhotonStream, PhotonMessageInfo)
      qualifiedName:
        CSharp: CardBattle.Networking.HexagonalFieldController.OnPhotonSerializeView(PhotonStream, PhotonMessageInfo)
        VB: CardBattle.Networking.HexagonalFieldController.OnPhotonSerializeView(PhotonStream, PhotonMessageInfo)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Networking
      source:
        id: OnPhotonSerializeView
        path: ''
        startLine: 1798
      syntax:
        content:
          CSharp: public void OnPhotonSerializeView(PhotonStream stream, PhotonMessageInfo info)
          VB: Public Sub OnPhotonSerializeView(stream As PhotonStream, info As PhotonMessageInfo)
        parameters:
        - id: stream
          type: PhotonStream
        - id: info
          type: PhotonMessageInfo
      overload: CardBattle.Networking.HexagonalFieldController.OnPhotonSerializeView*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Networking.HexagonalFieldController.GetNeighbor(DIRECTION)
      commentId: M:CardBattle.Networking.HexagonalFieldController.GetNeighbor(DIRECTION)
      language: CSharp
      name:
        CSharp: GetNeighbor(DIRECTION)
        VB: GetNeighbor(DIRECTION)
      nameWithType:
        CSharp: HexagonalFieldController.GetNeighbor(DIRECTION)
        VB: HexagonalFieldController.GetNeighbor(DIRECTION)
      qualifiedName:
        CSharp: CardBattle.Networking.HexagonalFieldController.GetNeighbor(DIRECTION)
        VB: CardBattle.Networking.HexagonalFieldController.GetNeighbor(DIRECTION)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Networking
      source:
        id: GetNeighbor
        path: ''
        startLine: 1803
      syntax:
        content:
          CSharp: public HexagonalField GetNeighbor(DIRECTION direction)
          VB: Public Function GetNeighbor(direction As DIRECTION) As HexagonalField
        parameters:
        - id: direction
          type: DIRECTION
        return:
          type: HexagonalField
      overload: CardBattle.Networking.HexagonalFieldController.GetNeighbor*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Networking.HexagonalFieldController.GetNeighbors
      commentId: M:CardBattle.Networking.HexagonalFieldController.GetNeighbors
      language: CSharp
      name:
        CSharp: GetNeighbors()
        VB: GetNeighbors()
      nameWithType:
        CSharp: HexagonalFieldController.GetNeighbors()
        VB: HexagonalFieldController.GetNeighbors()
      qualifiedName:
        CSharp: CardBattle.Networking.HexagonalFieldController.GetNeighbors()
        VB: CardBattle.Networking.HexagonalFieldController.GetNeighbors()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Networking
      source:
        id: GetNeighbors
        path: ''
        startLine: 1808
      syntax:
        content:
          CSharp: public void GetNeighbors()
          VB: Public Sub GetNeighbors
      overload: CardBattle.Networking.HexagonalFieldController.GetNeighbors*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Networking.HexagonalFieldController.Lerp
      commentId: M:CardBattle.Networking.HexagonalFieldController.Lerp
      language: CSharp
      name:
        CSharp: Lerp()
        VB: Lerp()
      nameWithType:
        CSharp: HexagonalFieldController.Lerp()
        VB: HexagonalFieldController.Lerp()
      qualifiedName:
        CSharp: CardBattle.Networking.HexagonalFieldController.Lerp()
        VB: CardBattle.Networking.HexagonalFieldController.Lerp()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Networking
      source:
        id: Lerp
        path: ''
        startLine: 1813
      syntax:
        content:
          CSharp: public void Lerp()
          VB: Public Sub Lerp
      overload: CardBattle.Networking.HexagonalFieldController.Lerp*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: CardBattle.Networking.LevelChanger
    commentId: T:CardBattle.Networking.LevelChanger
    language: CSharp
    name:
      CSharp: LevelChanger
      VB: LevelChanger
    nameWithType:
      CSharp: LevelChanger
      VB: LevelChanger
    qualifiedName:
      CSharp: CardBattle.Networking.LevelChanger
      VB: CardBattle.Networking.LevelChanger
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: CardBattle.Networking
    source:
      id: LevelChanger
      path: ''
      startLine: 1840
    syntax:
      content:
        CSharp: 'public class LevelChanger : MonoBehaviour'
        VB: >-
          Public Class LevelChanger

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: CardBattle.Networking.LevelChanger.anim
      commentId: F:CardBattle.Networking.LevelChanger.anim
      language: CSharp
      name:
        CSharp: anim
        VB: anim
      nameWithType:
        CSharp: LevelChanger.anim
        VB: LevelChanger.anim
      qualifiedName:
        CSharp: CardBattle.Networking.LevelChanger.anim
        VB: CardBattle.Networking.LevelChanger.anim
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Networking
      source:
        id: anim
        path: ''
        startLine: 1842
      syntax:
        content:
          CSharp: public Animator anim
          VB: Public anim As Animator
        return:
          type: Animator
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Networking.LevelChanger.FadeToLevel(System.String)
      commentId: M:CardBattle.Networking.LevelChanger.FadeToLevel(System.String)
      language: CSharp
      name:
        CSharp: FadeToLevel(String)
        VB: FadeToLevel(String)
      nameWithType:
        CSharp: LevelChanger.FadeToLevel(String)
        VB: LevelChanger.FadeToLevel(String)
      qualifiedName:
        CSharp: CardBattle.Networking.LevelChanger.FadeToLevel(System.String)
        VB: CardBattle.Networking.LevelChanger.FadeToLevel(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Networking
      source:
        id: FadeToLevel
        path: ''
        startLine: 1846
      syntax:
        content:
          CSharp: public void FadeToLevel(string levelName)
          VB: Public Sub FadeToLevel(levelName As String)
        parameters:
        - id: levelName
          type: System.String
      overload: CardBattle.Networking.LevelChanger.FadeToLevel*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Networking.LevelChanger.OnFadeComplete
      commentId: M:CardBattle.Networking.LevelChanger.OnFadeComplete
      language: CSharp
      name:
        CSharp: OnFadeComplete()
        VB: OnFadeComplete()
      nameWithType:
        CSharp: LevelChanger.OnFadeComplete()
        VB: LevelChanger.OnFadeComplete()
      qualifiedName:
        CSharp: CardBattle.Networking.LevelChanger.OnFadeComplete()
        VB: CardBattle.Networking.LevelChanger.OnFadeComplete()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Networking
      source:
        id: OnFadeComplete
        path: ''
        startLine: 1852
      syntax:
        content:
          CSharp: public void OnFadeComplete()
          VB: Public Sub OnFadeComplete
      overload: CardBattle.Networking.LevelChanger.OnFadeComplete*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Networking.LevelChanger.OnFadeCompleteNetwork
      commentId: M:CardBattle.Networking.LevelChanger.OnFadeCompleteNetwork
      language: CSharp
      name:
        CSharp: OnFadeCompleteNetwork()
        VB: OnFadeCompleteNetwork()
      nameWithType:
        CSharp: LevelChanger.OnFadeCompleteNetwork()
        VB: LevelChanger.OnFadeCompleteNetwork()
      qualifiedName:
        CSharp: CardBattle.Networking.LevelChanger.OnFadeCompleteNetwork()
        VB: CardBattle.Networking.LevelChanger.OnFadeCompleteNetwork()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Networking
      source:
        id: OnFadeCompleteNetwork
        path: ''
        startLine: 1857
      syntax:
        content:
          CSharp: public void OnFadeCompleteNetwork()
          VB: Public Sub OnFadeCompleteNetwork
      overload: CardBattle.Networking.LevelChanger.OnFadeCompleteNetwork*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: CardBattle.Networking.MapGeneration
    commentId: T:CardBattle.Networking.MapGeneration
    language: CSharp
    name:
      CSharp: MapGeneration
      VB: MapGeneration
    nameWithType:
      CSharp: MapGeneration
      VB: MapGeneration
    qualifiedName:
      CSharp: CardBattle.Networking.MapGeneration
      VB: CardBattle.Networking.MapGeneration
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: CardBattle.Networking
    source:
      id: MapGeneration
      path: ''
      startLine: 1871
    syntax:
      content:
        CSharp: 'public class MapGeneration : MonoBehaviour'
        VB: >-
          Public Class MapGeneration

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: CardBattle.Networking.MapGeneration.HexagonalFields
      commentId: F:CardBattle.Networking.MapGeneration.HexagonalFields
      language: CSharp
      name:
        CSharp: HexagonalFields
        VB: HexagonalFields
      nameWithType:
        CSharp: MapGeneration.HexagonalFields
        VB: MapGeneration.HexagonalFields
      qualifiedName:
        CSharp: CardBattle.Networking.MapGeneration.HexagonalFields
        VB: CardBattle.Networking.MapGeneration.HexagonalFields
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Networking
      source:
        id: HexagonalFields
        path: ''
        startLine: 1877
      syntax:
        content:
          CSharp: public List<GameObject> HexagonalFields
          VB: Public HexagonalFields As List(Of GameObject)
        return:
          type: System.Collections.Generic.List{GameObject}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Networking.MapGeneration.AxialHexagonalFields
      commentId: F:CardBattle.Networking.MapGeneration.AxialHexagonalFields
      language: CSharp
      name:
        CSharp: AxialHexagonalFields
        VB: AxialHexagonalFields
      nameWithType:
        CSharp: MapGeneration.AxialHexagonalFields
        VB: MapGeneration.AxialHexagonalFields
      qualifiedName:
        CSharp: CardBattle.Networking.MapGeneration.AxialHexagonalFields
        VB: CardBattle.Networking.MapGeneration.AxialHexagonalFields
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Networking
      source:
        id: AxialHexagonalFields
        path: ''
        startLine: 1878
      syntax:
        content:
          CSharp: public Dictionary<Vector2, GameObject> AxialHexagonalFields
          VB: Public AxialHexagonalFields As Dictionary(Of Vector2, GameObject)
        return:
          type: System.Collections.Generic.Dictionary{Vector2,GameObject}
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Networking.MapGeneration.Finished
      commentId: F:CardBattle.Networking.MapGeneration.Finished
      language: CSharp
      name:
        CSharp: Finished
        VB: Finished
      nameWithType:
        CSharp: MapGeneration.Finished
        VB: MapGeneration.Finished
      qualifiedName:
        CSharp: CardBattle.Networking.MapGeneration.Finished
        VB: CardBattle.Networking.MapGeneration.Finished
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Networking
      source:
        id: Finished
        path: ''
        startLine: 1882
      syntax:
        content:
          CSharp: public bool Finished
          VB: Public Finished As Boolean
        return:
          type: System.Boolean
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Networking.MapGeneration.radius
      commentId: F:CardBattle.Networking.MapGeneration.radius
      language: CSharp
      name:
        CSharp: radius
        VB: radius
      nameWithType:
        CSharp: MapGeneration.radius
        VB: MapGeneration.radius
      qualifiedName:
        CSharp: CardBattle.Networking.MapGeneration.radius
        VB: CardBattle.Networking.MapGeneration.radius
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Networking
      source:
        id: radius
        path: ''
        startLine: 1883
      syntax:
        content:
          CSharp: public int radius
          VB: Public radius As Integer
        return:
          type: System.Int32
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Networking.MapGeneration.AllFieldsSlerped
      commentId: M:CardBattle.Networking.MapGeneration.AllFieldsSlerped
      language: CSharp
      name:
        CSharp: AllFieldsSlerped()
        VB: AllFieldsSlerped()
      nameWithType:
        CSharp: MapGeneration.AllFieldsSlerped()
        VB: MapGeneration.AllFieldsSlerped()
      qualifiedName:
        CSharp: CardBattle.Networking.MapGeneration.AllFieldsSlerped()
        VB: CardBattle.Networking.MapGeneration.AllFieldsSlerped()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Networking
      source:
        id: AllFieldsSlerped
        path: ''
        startLine: 2017
      syntax:
        content:
          CSharp: public bool AllFieldsSlerped()
          VB: Public Function AllFieldsSlerped As Boolean
        return:
          type: System.Boolean
      overload: CardBattle.Networking.MapGeneration.AllFieldsSlerped*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: CardBattle.Networking.NetworkManager
    commentId: T:CardBattle.Networking.NetworkManager
    language: CSharp
    name:
      CSharp: NetworkManager
      VB: NetworkManager
    nameWithType:
      CSharp: NetworkManager
      VB: NetworkManager
    qualifiedName:
      CSharp: CardBattle.Networking.NetworkManager
      VB: CardBattle.Networking.NetworkManager
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: CardBattle.Networking
    source:
      id: NetworkManager
      path: ''
      startLine: 2046
    syntax:
      content:
        CSharp: 'public class NetworkManager : MonoBehaviourPunCallbacks'
        VB: >-
          Public Class NetworkManager

              Inherits MonoBehaviourPunCallbacks
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: CardBattle.Networking.NetworkManager.selectedMatchType
      commentId: F:CardBattle.Networking.NetworkManager.selectedMatchType
      language: CSharp
      name:
        CSharp: selectedMatchType
        VB: selectedMatchType
      nameWithType:
        CSharp: NetworkManager.selectedMatchType
        VB: NetworkManager.selectedMatchType
      qualifiedName:
        CSharp: CardBattle.Networking.NetworkManager.selectedMatchType
        VB: CardBattle.Networking.NetworkManager.selectedMatchType
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Networking
      source:
        id: selectedMatchType
        path: ''
        startLine: 2048
      syntax:
        content:
          CSharp: public MatchType selectedMatchType
          VB: Public selectedMatchType As MatchType
        return:
          type: CardBattle.Core.MatchType
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Networking.NetworkManager.countdownText
      commentId: F:CardBattle.Networking.NetworkManager.countdownText
      language: CSharp
      name:
        CSharp: countdownText
        VB: countdownText
      nameWithType:
        CSharp: NetworkManager.countdownText
        VB: NetworkManager.countdownText
      qualifiedName:
        CSharp: CardBattle.Networking.NetworkManager.countdownText
        VB: CardBattle.Networking.NetworkManager.countdownText
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Networking
      source:
        id: countdownText
        path: ''
        startLine: 2049
      syntax:
        content:
          CSharp: public TMP_Text countdownText
          VB: Public countdownText As TMP_Text
        return:
          type: TMP_Text
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Networking.NetworkManager.levelChanger
      commentId: F:CardBattle.Networking.NetworkManager.levelChanger
      language: CSharp
      name:
        CSharp: levelChanger
        VB: levelChanger
      nameWithType:
        CSharp: NetworkManager.levelChanger
        VB: NetworkManager.levelChanger
      qualifiedName:
        CSharp: CardBattle.Networking.NetworkManager.levelChanger
        VB: CardBattle.Networking.NetworkManager.levelChanger
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Networking
      source:
        id: levelChanger
        path: ''
        startLine: 2050
      syntax:
        content:
          CSharp: public LevelChanger levelChanger
          VB: Public levelChanger As LevelChanger
        return:
          type: CardBattle.Networking.LevelChanger
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Networking.NetworkManager.lobbyName
      commentId: F:CardBattle.Networking.NetworkManager.lobbyName
      language: CSharp
      name:
        CSharp: lobbyName
        VB: lobbyName
      nameWithType:
        CSharp: NetworkManager.lobbyName
        VB: NetworkManager.lobbyName
      qualifiedName:
        CSharp: CardBattle.Networking.NetworkManager.lobbyName
        VB: CardBattle.Networking.NetworkManager.lobbyName
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Networking
      source:
        id: lobbyName
        path: ''
        startLine: 2051
      syntax:
        content:
          CSharp: public string lobbyName
          VB: Public lobbyName As String
        return:
          type: System.String
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Networking.NetworkManager.canvas
      commentId: F:CardBattle.Networking.NetworkManager.canvas
      language: CSharp
      name:
        CSharp: canvas
        VB: canvas
      nameWithType:
        CSharp: NetworkManager.canvas
        VB: NetworkManager.canvas
      qualifiedName:
        CSharp: CardBattle.Networking.NetworkManager.canvas
        VB: CardBattle.Networking.NetworkManager.canvas
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Networking
      source:
        id: canvas
        path: ''
        startLine: 2052
      syntax:
        content:
          CSharp: public GameObject canvas
          VB: Public canvas As GameObject
        return:
          type: GameObject
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Networking.NetworkManager.SetSelectedMatchType(System.String)
      commentId: M:CardBattle.Networking.NetworkManager.SetSelectedMatchType(System.String)
      language: CSharp
      name:
        CSharp: SetSelectedMatchType(String)
        VB: SetSelectedMatchType(String)
      nameWithType:
        CSharp: NetworkManager.SetSelectedMatchType(String)
        VB: NetworkManager.SetSelectedMatchType(String)
      qualifiedName:
        CSharp: CardBattle.Networking.NetworkManager.SetSelectedMatchType(System.String)
        VB: CardBattle.Networking.NetworkManager.SetSelectedMatchType(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Networking
      source:
        id: SetSelectedMatchType
        path: ''
        startLine: 2063
      syntax:
        content:
          CSharp: public void SetSelectedMatchType(string s)
          VB: Public Sub SetSelectedMatchType(s As String)
        parameters:
        - id: s
          type: System.String
      overload: CardBattle.Networking.NetworkManager.SetSelectedMatchType*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Networking.NetworkManager.SetPlayersNickName(System.String)
      commentId: M:CardBattle.Networking.NetworkManager.SetPlayersNickName(System.String)
      language: CSharp
      name:
        CSharp: SetPlayersNickName(String)
        VB: SetPlayersNickName(String)
      nameWithType:
        CSharp: NetworkManager.SetPlayersNickName(String)
        VB: NetworkManager.SetPlayersNickName(String)
      qualifiedName:
        CSharp: CardBattle.Networking.NetworkManager.SetPlayersNickName(System.String)
        VB: CardBattle.Networking.NetworkManager.SetPlayersNickName(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Networking
      source:
        id: SetPlayersNickName
        path: ''
        startLine: 2076
      syntax:
        content:
          CSharp: public void SetPlayersNickName(string s)
          VB: Public Sub SetPlayersNickName(s As String)
        parameters:
        - id: s
          type: System.String
      overload: CardBattle.Networking.NetworkManager.SetPlayersNickName*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Networking.NetworkManager.OnConnectedToMaster
      commentId: M:CardBattle.Networking.NetworkManager.OnConnectedToMaster
      language: CSharp
      name:
        CSharp: OnConnectedToMaster()
        VB: OnConnectedToMaster()
      nameWithType:
        CSharp: NetworkManager.OnConnectedToMaster()
        VB: NetworkManager.OnConnectedToMaster()
      qualifiedName:
        CSharp: CardBattle.Networking.NetworkManager.OnConnectedToMaster()
        VB: CardBattle.Networking.NetworkManager.OnConnectedToMaster()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Networking
      source:
        id: OnConnectedToMaster
        path: ''
        startLine: 2107
      syntax:
        content:
          CSharp: public override void OnConnectedToMaster()
          VB: Public Overrides Sub OnConnectedToMaster
      overload: CardBattle.Networking.NetworkManager.OnConnectedToMaster*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: CardBattle.Networking.NetworkManager.OnDisconnected(DisconnectCause)
      commentId: M:CardBattle.Networking.NetworkManager.OnDisconnected(DisconnectCause)
      language: CSharp
      name:
        CSharp: OnDisconnected(DisconnectCause)
        VB: OnDisconnected(DisconnectCause)
      nameWithType:
        CSharp: NetworkManager.OnDisconnected(DisconnectCause)
        VB: NetworkManager.OnDisconnected(DisconnectCause)
      qualifiedName:
        CSharp: CardBattle.Networking.NetworkManager.OnDisconnected(DisconnectCause)
        VB: CardBattle.Networking.NetworkManager.OnDisconnected(DisconnectCause)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Networking
      source:
        id: OnDisconnected
        path: ''
        startLine: 2113
      syntax:
        content:
          CSharp: public override void OnDisconnected(DisconnectCause cause)
          VB: Public Overrides Sub OnDisconnected(cause As DisconnectCause)
        parameters:
        - id: cause
          type: DisconnectCause
      overload: CardBattle.Networking.NetworkManager.OnDisconnected*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: CardBattle.Networking.NetworkManager.OnJoinedLobby
      commentId: M:CardBattle.Networking.NetworkManager.OnJoinedLobby
      language: CSharp
      name:
        CSharp: OnJoinedLobby()
        VB: OnJoinedLobby()
      nameWithType:
        CSharp: NetworkManager.OnJoinedLobby()
        VB: NetworkManager.OnJoinedLobby()
      qualifiedName:
        CSharp: CardBattle.Networking.NetworkManager.OnJoinedLobby()
        VB: CardBattle.Networking.NetworkManager.OnJoinedLobby()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Networking
      source:
        id: OnJoinedLobby
        path: ''
        startLine: 2121
      syntax:
        content:
          CSharp: public override void OnJoinedLobby()
          VB: Public Overrides Sub OnJoinedLobby
      overload: CardBattle.Networking.NetworkManager.OnJoinedLobby*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: CardBattle.Networking.NetworkManager.OnJoinMatchButtonPressed(TMP_InputField)
      commentId: M:CardBattle.Networking.NetworkManager.OnJoinMatchButtonPressed(TMP_InputField)
      language: CSharp
      name:
        CSharp: OnJoinMatchButtonPressed(TMP_InputField)
        VB: OnJoinMatchButtonPressed(TMP_InputField)
      nameWithType:
        CSharp: NetworkManager.OnJoinMatchButtonPressed(TMP_InputField)
        VB: NetworkManager.OnJoinMatchButtonPressed(TMP_InputField)
      qualifiedName:
        CSharp: CardBattle.Networking.NetworkManager.OnJoinMatchButtonPressed(TMP_InputField)
        VB: CardBattle.Networking.NetworkManager.OnJoinMatchButtonPressed(TMP_InputField)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Networking
      source:
        id: OnJoinMatchButtonPressed
        path: ''
        startLine: 2129
      syntax:
        content:
          CSharp: public void OnJoinMatchButtonPressed(TMP_InputField matchName)
          VB: Public Sub OnJoinMatchButtonPressed(matchName As TMP_InputField)
        parameters:
        - id: matchName
          type: TMP_InputField
      overload: CardBattle.Networking.NetworkManager.OnJoinMatchButtonPressed*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Networking.NetworkManager.OnJoinMatchButtonPressed
      commentId: M:CardBattle.Networking.NetworkManager.OnJoinMatchButtonPressed
      language: CSharp
      name:
        CSharp: OnJoinMatchButtonPressed()
        VB: OnJoinMatchButtonPressed()
      nameWithType:
        CSharp: NetworkManager.OnJoinMatchButtonPressed()
        VB: NetworkManager.OnJoinMatchButtonPressed()
      qualifiedName:
        CSharp: CardBattle.Networking.NetworkManager.OnJoinMatchButtonPressed()
        VB: CardBattle.Networking.NetworkManager.OnJoinMatchButtonPressed()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Networking
      source:
        id: OnJoinMatchButtonPressed
        path: ''
        startLine: 2135
      syntax:
        content:
          CSharp: public void OnJoinMatchButtonPressed()
          VB: Public Sub OnJoinMatchButtonPressed
      overload: CardBattle.Networking.NetworkManager.OnJoinMatchButtonPressed*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Networking.NetworkManager.JoinSpecificMatch(System.String)
      commentId: M:CardBattle.Networking.NetworkManager.JoinSpecificMatch(System.String)
      language: CSharp
      name:
        CSharp: JoinSpecificMatch(String)
        VB: JoinSpecificMatch(String)
      nameWithType:
        CSharp: NetworkManager.JoinSpecificMatch(String)
        VB: NetworkManager.JoinSpecificMatch(String)
      qualifiedName:
        CSharp: CardBattle.Networking.NetworkManager.JoinSpecificMatch(System.String)
        VB: CardBattle.Networking.NetworkManager.JoinSpecificMatch(System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Networking
      source:
        id: JoinSpecificMatch
        path: ''
        startLine: 2146
      syntax:
        content:
          CSharp: public void JoinSpecificMatch(string matchName)
          VB: Public Sub JoinSpecificMatch(matchName As String)
        parameters:
        - id: matchName
          type: System.String
      overload: CardBattle.Networking.NetworkManager.JoinSpecificMatch*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Networking.NetworkManager.OnJoinRandomFailed(System.Int16,System.String)
      commentId: M:CardBattle.Networking.NetworkManager.OnJoinRandomFailed(System.Int16,System.String)
      language: CSharp
      name:
        CSharp: OnJoinRandomFailed(Int16, String)
        VB: OnJoinRandomFailed(Int16, String)
      nameWithType:
        CSharp: NetworkManager.OnJoinRandomFailed(Int16, String)
        VB: NetworkManager.OnJoinRandomFailed(Int16, String)
      qualifiedName:
        CSharp: CardBattle.Networking.NetworkManager.OnJoinRandomFailed(System.Int16, System.String)
        VB: CardBattle.Networking.NetworkManager.OnJoinRandomFailed(System.Int16, System.String)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Networking
      source:
        id: OnJoinRandomFailed
        path: ''
        startLine: 2179
      syntax:
        content:
          CSharp: public override void OnJoinRandomFailed(short returnCode, string message)
          VB: Public Overrides Sub OnJoinRandomFailed(returnCode As Short, message As String)
        parameters:
        - id: returnCode
          type: System.Int16
        - id: message
          type: System.String
      overload: CardBattle.Networking.NetworkManager.OnJoinRandomFailed*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: CardBattle.Networking.NetworkManager.OnJoinedRoom
      commentId: M:CardBattle.Networking.NetworkManager.OnJoinedRoom
      language: CSharp
      name:
        CSharp: OnJoinedRoom()
        VB: OnJoinedRoom()
      nameWithType:
        CSharp: NetworkManager.OnJoinedRoom()
        VB: NetworkManager.OnJoinedRoom()
      qualifiedName:
        CSharp: CardBattle.Networking.NetworkManager.OnJoinedRoom()
        VB: CardBattle.Networking.NetworkManager.OnJoinedRoom()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Networking
      source:
        id: OnJoinedRoom
        path: ''
        startLine: 2185
      syntax:
        content:
          CSharp: public override void OnJoinedRoom()
          VB: Public Overrides Sub OnJoinedRoom
      overload: CardBattle.Networking.NetworkManager.OnJoinedRoom*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: CardBattle.Networking.NetworkManager.LeaveMatch
      commentId: M:CardBattle.Networking.NetworkManager.LeaveMatch
      language: CSharp
      name:
        CSharp: LeaveMatch()
        VB: LeaveMatch()
      nameWithType:
        CSharp: NetworkManager.LeaveMatch()
        VB: NetworkManager.LeaveMatch()
      qualifiedName:
        CSharp: CardBattle.Networking.NetworkManager.LeaveMatch()
        VB: CardBattle.Networking.NetworkManager.LeaveMatch()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Networking
      source:
        id: LeaveMatch
        path: ''
        startLine: 2235
      syntax:
        content:
          CSharp: public void LeaveMatch()
          VB: Public Sub LeaveMatch
      overload: CardBattle.Networking.NetworkManager.LeaveMatch*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: CardBattle.Networking.NetworkManagers
    commentId: T:CardBattle.Networking.NetworkManagers
    language: CSharp
    name:
      CSharp: NetworkManagers
      VB: NetworkManagers
    nameWithType:
      CSharp: NetworkManagers
      VB: NetworkManagers
    qualifiedName:
      CSharp: CardBattle.Networking.NetworkManagers
      VB: CardBattle.Networking.NetworkManagers
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: CardBattle.Networking
    source:
      id: NetworkManagers
      path: ''
      startLine: 2251
    syntax:
      content:
        CSharp: 'public class NetworkManagers : MonoBehaviourPunCallbacks'
        VB: >-
          Public Class NetworkManagers

              Inherits MonoBehaviourPunCallbacks
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: CardBattle.Networking.NetworkManagers.instance
      commentId: F:CardBattle.Networking.NetworkManagers.instance
      language: CSharp
      name:
        CSharp: instance
        VB: instance
      nameWithType:
        CSharp: NetworkManagers.instance
        VB: NetworkManagers.instance
      qualifiedName:
        CSharp: CardBattle.Networking.NetworkManagers.instance
        VB: CardBattle.Networking.NetworkManagers.instance
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Networking
      source:
        id: instance
        path: ''
        startLine: 2254
      syntax:
        content:
          CSharp: public static NetworkManagers instance
          VB: Public Shared instance As NetworkManagers
        return:
          type: CardBattle.Networking.NetworkManagers
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: CardBattle.Networking.NetworkManagers.Send(System.Object)
      commentId: M:CardBattle.Networking.NetworkManagers.Send(System.Object)
      language: CSharp
      name:
        CSharp: Send(Object)
        VB: Send(Object)
      nameWithType:
        CSharp: NetworkManagers.Send(Object)
        VB: NetworkManagers.Send(Object)
      qualifiedName:
        CSharp: CardBattle.Networking.NetworkManagers.Send(System.Object)
        VB: CardBattle.Networking.NetworkManagers.Send(System.Object)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Networking
      source:
        id: Send
        path: ''
        startLine: 2262
      syntax:
        content:
          CSharp: public void Send(object o)
          VB: Public Sub Send(o As Object)
        parameters:
        - id: o
          type: System.Object
      overload: CardBattle.Networking.NetworkManagers.Send*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Networking.NetworkManagers.Send``1(``0)
      commentId: M:CardBattle.Networking.NetworkManagers.Send``1(``0)
      language: CSharp
      name:
        CSharp: Send<T>(T)
        VB: Send(Of T)(T)
      nameWithType:
        CSharp: NetworkManagers.Send<T>(T)
        VB: NetworkManagers.Send(Of T)(T)
      qualifiedName:
        CSharp: CardBattle.Networking.NetworkManagers.Send<T>(T)
        VB: CardBattle.Networking.NetworkManagers.Send(Of T)(T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Networking
      source:
        id: Send
        path: ''
        startLine: 2267
      syntax:
        content:
          CSharp: public void Send<T>(T o)
          VB: Public Sub Send(Of T)(o As T)
        parameters:
        - id: o
          type: '{T}'
        typeParameters:
        - id: T
      overload: CardBattle.Networking.NetworkManagers.Send*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Networking.NetworkManagers.SendSecure(System.Object)
      commentId: M:CardBattle.Networking.NetworkManagers.SendSecure(System.Object)
      language: CSharp
      name:
        CSharp: SendSecure(Object)
        VB: SendSecure(Object)
      nameWithType:
        CSharp: NetworkManagers.SendSecure(Object)
        VB: NetworkManagers.SendSecure(Object)
      qualifiedName:
        CSharp: CardBattle.Networking.NetworkManagers.SendSecure(System.Object)
        VB: CardBattle.Networking.NetworkManagers.SendSecure(System.Object)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Networking
      source:
        id: SendSecure
        path: ''
        startLine: 2285
      syntax:
        content:
          CSharp: public void SendSecure(object o)
          VB: Public Sub SendSecure(o As Object)
        parameters:
        - id: o
          type: System.Object
      overload: CardBattle.Networking.NetworkManagers.SendSecure*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Networking.NetworkManagers.SendSecure``1(``0)
      commentId: M:CardBattle.Networking.NetworkManagers.SendSecure``1(``0)
      language: CSharp
      name:
        CSharp: SendSecure<T>(T)
        VB: SendSecure(Of T)(T)
      nameWithType:
        CSharp: NetworkManagers.SendSecure<T>(T)
        VB: NetworkManagers.SendSecure(Of T)(T)
      qualifiedName:
        CSharp: CardBattle.Networking.NetworkManagers.SendSecure<T>(T)
        VB: CardBattle.Networking.NetworkManagers.SendSecure(Of T)(T)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Networking
      source:
        id: SendSecure
        path: ''
        startLine: 2290
      syntax:
        content:
          CSharp: public void SendSecure<T>(T o)
          VB: Public Sub SendSecure(Of T)(o As T)
        parameters:
        - id: o
          type: '{T}'
        typeParameters:
        - id: T
      overload: CardBattle.Networking.NetworkManagers.SendSecure*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
  - id: CardBattle.Networking.NetworkSceneManager
    commentId: T:CardBattle.Networking.NetworkSceneManager
    language: CSharp
    name:
      CSharp: NetworkSceneManager
      VB: NetworkSceneManager
    nameWithType:
      CSharp: NetworkSceneManager
      VB: NetworkSceneManager
    qualifiedName:
      CSharp: CardBattle.Networking.NetworkSceneManager
      VB: CardBattle.Networking.NetworkSceneManager
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: CardBattle.Networking
    source:
      id: NetworkSceneManager
      path: ''
      startLine: 2316
    syntax:
      content:
        CSharp: 'public class NetworkSceneManager : MonoBehaviour'
        VB: >-
          Public Class NetworkSceneManager

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: CardBattle.Networking.NetworkSceneManager.currentIndex
      commentId: P:CardBattle.Networking.NetworkSceneManager.currentIndex
      language: CSharp
      name:
        CSharp: currentIndex
        VB: currentIndex
      nameWithType:
        CSharp: NetworkSceneManager.currentIndex
        VB: NetworkSceneManager.currentIndex
      qualifiedName:
        CSharp: CardBattle.Networking.NetworkSceneManager.currentIndex
        VB: CardBattle.Networking.NetworkSceneManager.currentIndex
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Networking
      source:
        id: currentIndex
        path: ''
        startLine: 2318
      syntax:
        content:
          CSharp: public int currentIndex { get; }
          VB: Public ReadOnly Property currentIndex As Integer
        parameters: []
        return:
          type: System.Int32
      overload: CardBattle.Networking.NetworkSceneManager.currentIndex*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: CardBattle.Networking.NetworkSceneManager.currentName
      commentId: P:CardBattle.Networking.NetworkSceneManager.currentName
      language: CSharp
      name:
        CSharp: currentName
        VB: currentName
      nameWithType:
        CSharp: NetworkSceneManager.currentName
        VB: NetworkSceneManager.currentName
      qualifiedName:
        CSharp: CardBattle.Networking.NetworkSceneManager.currentName
        VB: CardBattle.Networking.NetworkSceneManager.currentName
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Networking
      source:
        id: currentName
        path: ''
        startLine: 2319
      syntax:
        content:
          CSharp: public string currentName { get; }
          VB: Public ReadOnly Property currentName As String
        parameters: []
        return:
          type: System.String
      overload: CardBattle.Networking.NetworkSceneManager.currentName*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: CardBattle.Networking.NetworkSceneManager.IsSceneLoaded
      commentId: P:CardBattle.Networking.NetworkSceneManager.IsSceneLoaded
      language: CSharp
      name:
        CSharp: IsSceneLoaded
        VB: IsSceneLoaded
      nameWithType:
        CSharp: NetworkSceneManager.IsSceneLoaded
        VB: NetworkSceneManager.IsSceneLoaded
      qualifiedName:
        CSharp: CardBattle.Networking.NetworkSceneManager.IsSceneLoaded
        VB: CardBattle.Networking.NetworkSceneManager.IsSceneLoaded
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Networking
      source:
        id: IsSceneLoaded
        path: ''
        startLine: 2320
      syntax:
        content:
          CSharp: public bool IsSceneLoaded { get; }
          VB: Public ReadOnly Property IsSceneLoaded As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: CardBattle.Networking.NetworkSceneManager.IsSceneLoaded*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
  - id: CardBattle.Networking.Quit
    commentId: T:CardBattle.Networking.Quit
    language: CSharp
    name:
      CSharp: Quit
      VB: Quit
    nameWithType:
      CSharp: Quit
      VB: Quit
    qualifiedName:
      CSharp: CardBattle.Networking.Quit
      VB: CardBattle.Networking.Quit
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: CardBattle.Networking
    source:
      id: Quit
      path: ''
      startLine: 2430
    syntax:
      content:
        CSharp: 'public class Quit : MonoBehaviourPunCallbacks'
        VB: >-
          Public Class Quit

              Inherits MonoBehaviourPunCallbacks
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: CardBattle.Networking.Quit.ExitRoom
      commentId: M:CardBattle.Networking.Quit.ExitRoom
      language: CSharp
      name:
        CSharp: ExitRoom()
        VB: ExitRoom()
      nameWithType:
        CSharp: Quit.ExitRoom()
        VB: Quit.ExitRoom()
      qualifiedName:
        CSharp: CardBattle.Networking.Quit.ExitRoom()
        VB: CardBattle.Networking.Quit.ExitRoom()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Networking
      source:
        id: ExitRoom
        path: ''
        startLine: 2435
      syntax:
        content:
          CSharp: public void ExitRoom()
          VB: Public Sub ExitRoom
      overload: CardBattle.Networking.Quit.ExitRoom*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Networking.Quit.Exit
      commentId: M:CardBattle.Networking.Quit.Exit
      language: CSharp
      name:
        CSharp: Exit()
        VB: Exit()
      nameWithType:
        CSharp: Quit.Exit()
        VB: Quit.Exit()
      qualifiedName:
        CSharp: CardBattle.Networking.Quit.Exit()
        VB: CardBattle.Networking.Quit.Exit()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Networking
      source:
        id: Exit
        path: ''
        startLine: 2462
      syntax:
        content:
          CSharp: public void Exit()
          VB: Public Sub Exit
      overload: CardBattle.Networking.Quit.Exit*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: CardBattle.Networking.Quit.OnLeftRoom
      commentId: M:CardBattle.Networking.Quit.OnLeftRoom
      language: CSharp
      name:
        CSharp: OnLeftRoom()
        VB: OnLeftRoom()
      nameWithType:
        CSharp: Quit.OnLeftRoom()
        VB: Quit.OnLeftRoom()
      qualifiedName:
        CSharp: CardBattle.Networking.Quit.OnLeftRoom()
        VB: CardBattle.Networking.Quit.OnLeftRoom()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Networking
      source:
        id: OnLeftRoom
        path: ''
        startLine: 2477
      syntax:
        content:
          CSharp: public override void OnLeftRoom()
          VB: Public Overrides Sub OnLeftRoom
      overload: CardBattle.Networking.Quit.OnLeftRoom*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: CardBattle.Networking.Quit.OnLeftLobby
      commentId: M:CardBattle.Networking.Quit.OnLeftLobby
      language: CSharp
      name:
        CSharp: OnLeftLobby()
        VB: OnLeftLobby()
      nameWithType:
        CSharp: Quit.OnLeftLobby()
        VB: Quit.OnLeftLobby()
      qualifiedName:
        CSharp: CardBattle.Networking.Quit.OnLeftLobby()
        VB: CardBattle.Networking.Quit.OnLeftLobby()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Networking
      source:
        id: OnLeftLobby
        path: ''
        startLine: 2483
      syntax:
        content:
          CSharp: public override void OnLeftLobby()
          VB: Public Overrides Sub OnLeftLobby
      overload: CardBattle.Networking.Quit.OnLeftLobby*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
    - id: CardBattle.Networking.Quit.OnDisconnected(DisconnectCause)
      commentId: M:CardBattle.Networking.Quit.OnDisconnected(DisconnectCause)
      language: CSharp
      name:
        CSharp: OnDisconnected(DisconnectCause)
        VB: OnDisconnected(DisconnectCause)
      nameWithType:
        CSharp: Quit.OnDisconnected(DisconnectCause)
        VB: Quit.OnDisconnected(DisconnectCause)
      qualifiedName:
        CSharp: CardBattle.Networking.Quit.OnDisconnected(DisconnectCause)
        VB: CardBattle.Networking.Quit.OnDisconnected(DisconnectCause)
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Networking
      source:
        id: OnDisconnected
        path: ''
        startLine: 2490
      syntax:
        content:
          CSharp: public override void OnDisconnected(DisconnectCause cause)
          VB: Public Overrides Sub OnDisconnected(cause As DisconnectCause)
        parameters:
        - id: cause
          type: DisconnectCause
      overload: CardBattle.Networking.Quit.OnDisconnected*
      modifiers:
        CSharp:
        - public
        - override
        VB:
        - Public
        - Overrides
- id: CardBattle.Networking.PlayerSync
  commentId: N:CardBattle.Networking.PlayerSync
  language: CSharp
  name:
    CSharp: CardBattle.Networking.PlayerSync
    VB: CardBattle.Networking.PlayerSync
  nameWithType:
    CSharp: CardBattle.Networking.PlayerSync
    VB: CardBattle.Networking.PlayerSync
  qualifiedName:
    CSharp: CardBattle.Networking.PlayerSync
    VB: CardBattle.Networking.PlayerSync
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: CardBattle.Networking.PlayerSync.EndTurnButton
    commentId: T:CardBattle.Networking.PlayerSync.EndTurnButton
    language: CSharp
    name:
      CSharp: EndTurnButton
      VB: EndTurnButton
    nameWithType:
      CSharp: EndTurnButton
      VB: EndTurnButton
    qualifiedName:
      CSharp: CardBattle.Networking.PlayerSync.EndTurnButton
      VB: CardBattle.Networking.PlayerSync.EndTurnButton
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: CardBattle.Networking.PlayerSync
    source:
      id: EndTurnButton
      path: ''
      startLine: 2585
    syntax:
      content:
        CSharp: 'public class EndTurnButton : MonoBehaviour'
        VB: >-
          Public Class EndTurnButton

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: CardBattle.Networking.PlayerSync.EndTurnButton.game
      commentId: F:CardBattle.Networking.PlayerSync.EndTurnButton.game
      language: CSharp
      name:
        CSharp: game
        VB: game
      nameWithType:
        CSharp: EndTurnButton.game
        VB: EndTurnButton.game
      qualifiedName:
        CSharp: CardBattle.Networking.PlayerSync.EndTurnButton.game
        VB: CardBattle.Networking.PlayerSync.EndTurnButton.game
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.Networking.PlayerSync
      source:
        id: game
        path: ''
        startLine: 2588
      syntax:
        content:
          CSharp: public GeneralMatchController game
          VB: Public game As GeneralMatchController
        return:
          type: GeneralMatchController
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: CardBattle.RemoteConfig
  commentId: N:CardBattle.RemoteConfig
  language: CSharp
  name:
    CSharp: CardBattle.RemoteConfig
    VB: CardBattle.RemoteConfig
  nameWithType:
    CSharp: CardBattle.RemoteConfig
    VB: CardBattle.RemoteConfig
  qualifiedName:
    CSharp: CardBattle.RemoteConfig
    VB: CardBattle.RemoteConfig
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: CardBattle.RemoteConfig.Configs
    commentId: T:CardBattle.RemoteConfig.Configs
    language: CSharp
    name:
      CSharp: Configs
      VB: Configs
    nameWithType:
      CSharp: Configs
      VB: Configs
    qualifiedName:
      CSharp: CardBattle.RemoteConfig.Configs
      VB: CardBattle.RemoteConfig.Configs
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: CardBattle.RemoteConfig
    source:
      id: Configs
      path: ''
      startLine: 2675
    syntax:
      content:
        CSharp: 'public class Configs : MonoBehaviour'
        VB: >-
          Public Class Configs

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: CardBattle.RemoteConfig.Configs.Instance
      commentId: F:CardBattle.RemoteConfig.Configs.Instance
      language: CSharp
      name:
        CSharp: Instance
        VB: Instance
      nameWithType:
        CSharp: Configs.Instance
        VB: Configs.Instance
      qualifiedName:
        CSharp: CardBattle.RemoteConfig.Configs.Instance
        VB: CardBattle.RemoteConfig.Configs.Instance
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.RemoteConfig
      source:
        id: Instance
        path: ''
        startLine: 2677
      syntax:
        content:
          CSharp: public static Configs Instance
          VB: Public Shared Instance As Configs
        return:
          type: CardBattle.RemoteConfig.Configs
      modifiers:
        CSharp:
        - public
        - static
        VB:
        - Public
        - Shared
    - id: CardBattle.RemoteConfig.Configs.Fetched
      commentId: P:CardBattle.RemoteConfig.Configs.Fetched
      language: CSharp
      name:
        CSharp: Fetched
        VB: Fetched
      nameWithType:
        CSharp: Configs.Fetched
        VB: Configs.Fetched
      qualifiedName:
        CSharp: CardBattle.RemoteConfig.Configs.Fetched
        VB: CardBattle.RemoteConfig.Configs.Fetched
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.RemoteConfig
      source:
        id: Fetched
        path: ''
        startLine: 2684
      syntax:
        content:
          CSharp: public bool Fetched { get; }
          VB: Public ReadOnly Property Fetched As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: CardBattle.RemoteConfig.Configs.Fetched*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: CardBattle.RemoteConfig.Configs.FinanceBox_DiceAmount
      commentId: P:CardBattle.RemoteConfig.Configs.FinanceBox_DiceAmount
      language: CSharp
      name:
        CSharp: FinanceBox_DiceAmount
        VB: FinanceBox_DiceAmount
      nameWithType:
        CSharp: Configs.FinanceBox_DiceAmount
        VB: Configs.FinanceBox_DiceAmount
      qualifiedName:
        CSharp: CardBattle.RemoteConfig.Configs.FinanceBox_DiceAmount
        VB: CardBattle.RemoteConfig.Configs.FinanceBox_DiceAmount
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.RemoteConfig
      source:
        id: FinanceBox_DiceAmount
        path: ''
        startLine: 2687
      syntax:
        content:
          CSharp: public static int FinanceBox_DiceAmount { get; }
          VB: Public Shared ReadOnly Property FinanceBox_DiceAmount As Integer
        parameters: []
        return:
          type: System.Int32
      overload: CardBattle.RemoteConfig.Configs.FinanceBox_DiceAmount*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: CardBattle.RemoteConfig.Configs.Debt_Interest
      commentId: P:CardBattle.RemoteConfig.Configs.Debt_Interest
      language: CSharp
      name:
        CSharp: Debt_Interest
        VB: Debt_Interest
      nameWithType:
        CSharp: Configs.Debt_Interest
        VB: Configs.Debt_Interest
      qualifiedName:
        CSharp: CardBattle.RemoteConfig.Configs.Debt_Interest
        VB: CardBattle.RemoteConfig.Configs.Debt_Interest
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.RemoteConfig
      source:
        id: Debt_Interest
        path: ''
        startLine: 2690
      syntax:
        content:
          CSharp: public static float Debt_Interest { get; }
          VB: Public Shared ReadOnly Property Debt_Interest As Single
        parameters: []
        return:
          type: System.Single
      overload: CardBattle.RemoteConfig.Configs.Debt_Interest*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: CardBattle.RemoteConfig.Configs.Revenue_TownFactor
      commentId: P:CardBattle.RemoteConfig.Configs.Revenue_TownFactor
      language: CSharp
      name:
        CSharp: Revenue_TownFactor
        VB: Revenue_TownFactor
      nameWithType:
        CSharp: Configs.Revenue_TownFactor
        VB: Configs.Revenue_TownFactor
      qualifiedName:
        CSharp: CardBattle.RemoteConfig.Configs.Revenue_TownFactor
        VB: CardBattle.RemoteConfig.Configs.Revenue_TownFactor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.RemoteConfig
      source:
        id: Revenue_TownFactor
        path: ''
        startLine: 2693
      syntax:
        content:
          CSharp: public static float Revenue_TownFactor { get; }
          VB: Public Shared ReadOnly Property Revenue_TownFactor As Single
        parameters: []
        return:
          type: System.Single
      overload: CardBattle.RemoteConfig.Configs.Revenue_TownFactor*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: CardBattle.RemoteConfig.Configs.Revenue_VillageFactor
      commentId: P:CardBattle.RemoteConfig.Configs.Revenue_VillageFactor
      language: CSharp
      name:
        CSharp: Revenue_VillageFactor
        VB: Revenue_VillageFactor
      nameWithType:
        CSharp: Configs.Revenue_VillageFactor
        VB: Configs.Revenue_VillageFactor
      qualifiedName:
        CSharp: CardBattle.RemoteConfig.Configs.Revenue_VillageFactor
        VB: CardBattle.RemoteConfig.Configs.Revenue_VillageFactor
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.RemoteConfig
      source:
        id: Revenue_VillageFactor
        path: ''
        startLine: 2696
      syntax:
        content:
          CSharp: public static float Revenue_VillageFactor { get; }
          VB: Public Shared ReadOnly Property Revenue_VillageFactor As Single
        parameters: []
        return:
          type: System.Single
      overload: CardBattle.RemoteConfig.Configs.Revenue_VillageFactor*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: CardBattle.RemoteConfig.Configs.GameManager_InitialMoney
      commentId: P:CardBattle.RemoteConfig.Configs.GameManager_InitialMoney
      language: CSharp
      name:
        CSharp: GameManager_InitialMoney
        VB: GameManager_InitialMoney
      nameWithType:
        CSharp: Configs.GameManager_InitialMoney
        VB: Configs.GameManager_InitialMoney
      qualifiedName:
        CSharp: CardBattle.RemoteConfig.Configs.GameManager_InitialMoney
        VB: CardBattle.RemoteConfig.Configs.GameManager_InitialMoney
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.RemoteConfig
      source:
        id: GameManager_InitialMoney
        path: ''
        startLine: 2699
      syntax:
        content:
          CSharp: public static int GameManager_InitialMoney { get; }
          VB: Public Shared ReadOnly Property GameManager_InitialMoney As Integer
        parameters: []
        return:
          type: System.Int32
      overload: CardBattle.RemoteConfig.Configs.GameManager_InitialMoney*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: CardBattle.RemoteConfig.Configs.PlayerController_Speed
      commentId: P:CardBattle.RemoteConfig.Configs.PlayerController_Speed
      language: CSharp
      name:
        CSharp: PlayerController_Speed
        VB: PlayerController_Speed
      nameWithType:
        CSharp: Configs.PlayerController_Speed
        VB: Configs.PlayerController_Speed
      qualifiedName:
        CSharp: CardBattle.RemoteConfig.Configs.PlayerController_Speed
        VB: CardBattle.RemoteConfig.Configs.PlayerController_Speed
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.RemoteConfig
      source:
        id: PlayerController_Speed
        path: ''
        startLine: 2702
      syntax:
        content:
          CSharp: public static float PlayerController_Speed { get; }
          VB: Public Shared ReadOnly Property PlayerController_Speed As Single
        parameters: []
        return:
          type: System.Single
      overload: CardBattle.RemoteConfig.Configs.PlayerController_Speed*
      modifiers:
        CSharp:
        - public
        - static
        - get
        VB:
        - Public
        - Shared
        - ReadOnly
    - id: CardBattle.RemoteConfig.Configs.ConfigVersion
      commentId: P:CardBattle.RemoteConfig.Configs.ConfigVersion
      language: CSharp
      name:
        CSharp: ConfigVersion
        VB: ConfigVersion
      nameWithType:
        CSharp: Configs.ConfigVersion
        VB: Configs.ConfigVersion
      qualifiedName:
        CSharp: CardBattle.RemoteConfig.Configs.ConfigVersion
        VB: CardBattle.RemoteConfig.Configs.ConfigVersion
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: CardBattle.RemoteConfig
      source:
        id: ConfigVersion
        path: ''
        startLine: 2705
      syntax:
        content:
          CSharp: public int ConfigVersion { get; }
          VB: Public ReadOnly Property ConfigVersion As Integer
        parameters: []
        return:
          type: System.Int32
      overload: CardBattle.RemoteConfig.Configs.ConfigVersion*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
  - id: CardBattle.RemoteConfig.Configs.userAttributes
    commentId: T:CardBattle.RemoteConfig.Configs.userAttributes
    language: CSharp
    name:
      CSharp: Configs.userAttributes
      VB: Configs.userAttributes
    nameWithType:
      CSharp: Configs.userAttributes
      VB: Configs.userAttributes
    qualifiedName:
      CSharp: CardBattle.RemoteConfig.Configs.userAttributes
      VB: CardBattle.RemoteConfig.Configs.userAttributes
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: CardBattle.RemoteConfig
    source:
      id: userAttributes
      path: ''
      startLine: 2679
    syntax:
      content:
        CSharp: public struct userAttributes
        VB: Public Structure userAttributes
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetType
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items: []
  - id: CardBattle.RemoteConfig.Configs.appAttributes
    commentId: T:CardBattle.RemoteConfig.Configs.appAttributes
    language: CSharp
    name:
      CSharp: Configs.appAttributes
      VB: Configs.appAttributes
    nameWithType:
      CSharp: Configs.appAttributes
      VB: Configs.appAttributes
    qualifiedName:
      CSharp: CardBattle.RemoteConfig.Configs.appAttributes
      VB: CardBattle.RemoteConfig.Configs.appAttributes
    type: Struct
    assemblies:
    - cs.temp.dll
    namespace: CardBattle.RemoteConfig
    source:
      id: appAttributes
      path: ''
      startLine: 2681
    syntax:
      content:
        CSharp: public struct appAttributes
        VB: Public Structure appAttributes
    inheritedMembers:
    - System.ValueType.Equals(System.Object)
    - System.ValueType.GetHashCode
    - System.ValueType.ToString
    - System.Object.Equals(System.Object,System.Object)
    - System.Object.ReferenceEquals(System.Object,System.Object)
    - System.Object.GetType
    modifiers:
      CSharp:
      - public
      - struct
      VB:
      - Public
      - Structure
    items: []
- id: Assets.Scripts.Networking
  commentId: N:Assets.Scripts.Networking
  language: CSharp
  name:
    CSharp: Assets.Scripts.Networking
    VB: Assets.Scripts.Networking
  nameWithType:
    CSharp: Assets.Scripts.Networking
    VB: Assets.Scripts.Networking
  qualifiedName:
    CSharp: Assets.Scripts.Networking
    VB: Assets.Scripts.Networking
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: Assets.Scripts.Networking.GeneralMatchController
    commentId: T:Assets.Scripts.Networking.GeneralMatchController
    language: CSharp
    name:
      CSharp: GeneralMatchController
      VB: GeneralMatchController
    nameWithType:
      CSharp: GeneralMatchController
      VB: GeneralMatchController
    qualifiedName:
      CSharp: Assets.Scripts.Networking.GeneralMatchController
      VB: Assets.Scripts.Networking.GeneralMatchController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: Assets.Scripts.Networking
    source:
      id: GeneralMatchController
      path: ''
      startLine: 1689
    syntax:
      content:
        CSharp: 'public class GeneralMatchController : MonoBehaviourPunCallbacks'
        VB: >-
          Public Class GeneralMatchController

              Inherits MonoBehaviourPunCallbacks
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: Assets.Scripts.Networking.GeneralMatchController.turnTimeLimit
      commentId: F:Assets.Scripts.Networking.GeneralMatchController.turnTimeLimit
      language: CSharp
      name:
        CSharp: turnTimeLimit
        VB: turnTimeLimit
      nameWithType:
        CSharp: GeneralMatchController.turnTimeLimit
        VB: GeneralMatchController.turnTimeLimit
      qualifiedName:
        CSharp: Assets.Scripts.Networking.GeneralMatchController.turnTimeLimit
        VB: Assets.Scripts.Networking.GeneralMatchController.turnTimeLimit
      type: Field
      assemblies:
      - cs.temp.dll
      namespace: Assets.Scripts.Networking
      source:
        id: turnTimeLimit
        path: ''
        startLine: 1692
      syntax:
        content:
          CSharp: public float turnTimeLimit
          VB: Public turnTimeLimit As Single
        return:
          type: System.Single
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Assets.Scripts.Networking.GeneralMatchController.Turn
      commentId: P:Assets.Scripts.Networking.GeneralMatchController.Turn
      language: CSharp
      name:
        CSharp: Turn
        VB: Turn
      nameWithType:
        CSharp: GeneralMatchController.Turn
        VB: GeneralMatchController.Turn
      qualifiedName:
        CSharp: Assets.Scripts.Networking.GeneralMatchController.Turn
        VB: Assets.Scripts.Networking.GeneralMatchController.Turn
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Assets.Scripts.Networking
      source:
        id: Turn
        path: ''
        startLine: 1706
      syntax:
        content:
          CSharp: public int Turn { get; }
          VB: Public ReadOnly Property Turn As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Assets.Scripts.Networking.GeneralMatchController.Turn*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Assets.Scripts.Networking.GeneralMatchController.CurrentPlayerId
      commentId: P:Assets.Scripts.Networking.GeneralMatchController.CurrentPlayerId
      language: CSharp
      name:
        CSharp: CurrentPlayerId
        VB: CurrentPlayerId
      nameWithType:
        CSharp: GeneralMatchController.CurrentPlayerId
        VB: GeneralMatchController.CurrentPlayerId
      qualifiedName:
        CSharp: Assets.Scripts.Networking.GeneralMatchController.CurrentPlayerId
        VB: Assets.Scripts.Networking.GeneralMatchController.CurrentPlayerId
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: Assets.Scripts.Networking
      source:
        id: CurrentPlayerId
        path: ''
        startLine: 1707
      syntax:
        content:
          CSharp: public int CurrentPlayerId { get; }
          VB: Public ReadOnly Property CurrentPlayerId As Integer
        parameters: []
        return:
          type: System.Int32
      overload: Assets.Scripts.Networking.GeneralMatchController.CurrentPlayerId*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: Assets.Scripts.Networking.GeneralMatchController.StartTurn
      commentId: M:Assets.Scripts.Networking.GeneralMatchController.StartTurn
      language: CSharp
      name:
        CSharp: StartTurn()
        VB: StartTurn()
      nameWithType:
        CSharp: GeneralMatchController.StartTurn()
        VB: GeneralMatchController.StartTurn()
      qualifiedName:
        CSharp: Assets.Scripts.Networking.GeneralMatchController.StartTurn()
        VB: Assets.Scripts.Networking.GeneralMatchController.StartTurn()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Assets.Scripts.Networking
      source:
        id: StartTurn
        path: ''
        startLine: 1727
      syntax:
        content:
          CSharp: public void StartTurn()
          VB: Public Sub StartTurn
      overload: Assets.Scripts.Networking.GeneralMatchController.StartTurn*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
    - id: Assets.Scripts.Networking.GeneralMatchController.EndTurn
      commentId: M:Assets.Scripts.Networking.GeneralMatchController.EndTurn
      language: CSharp
      name:
        CSharp: EndTurn()
        VB: EndTurn()
      nameWithType:
        CSharp: GeneralMatchController.EndTurn()
        VB: GeneralMatchController.EndTurn()
      qualifiedName:
        CSharp: Assets.Scripts.Networking.GeneralMatchController.EndTurn()
        VB: Assets.Scripts.Networking.GeneralMatchController.EndTurn()
      type: Method
      assemblies:
      - cs.temp.dll
      namespace: Assets.Scripts.Networking
      source:
        id: EndTurn
        path: ''
        startLine: 1743
      syntax:
        content:
          CSharp: public void EndTurn()
          VB: Public Sub
      overload: Assets.Scripts.Networking.GeneralMatchController.EndTurn*
      modifiers:
        CSharp:
        - public
        VB:
        - Public
- id: TheInvaders.Battlefield
  commentId: N:TheInvaders.Battlefield
  language: CSharp
  name:
    CSharp: TheInvaders.Battlefield
    VB: TheInvaders.Battlefield
  nameWithType:
    CSharp: TheInvaders.Battlefield
    VB: TheInvaders.Battlefield
  qualifiedName:
    CSharp: TheInvaders.Battlefield
    VB: TheInvaders.Battlefield
  type: Namespace
  assemblies:
  - cs.temp.dll
  modifiers: {}
  items:
  - id: TheInvaders.Battlefield.PlayerController
    commentId: T:TheInvaders.Battlefield.PlayerController
    language: CSharp
    name:
      CSharp: PlayerController
      VB: PlayerController
    nameWithType:
      CSharp: PlayerController
      VB: PlayerController
    qualifiedName:
      CSharp: TheInvaders.Battlefield.PlayerController
      VB: TheInvaders.Battlefield.PlayerController
    type: Class
    assemblies:
    - cs.temp.dll
    namespace: TheInvaders.Battlefield
    source:
      id: PlayerController
      path: ''
      startLine: 2625
    summary: "\nThe cam and unit selection controller of the battlefields\n"
    example: []
    syntax:
      content:
        CSharp: 'public class PlayerController : MonoBehaviour'
        VB: >-
          Public Class PlayerController

              Inherits MonoBehaviour
    inheritance:
    - System.Object
    modifiers:
      CSharp:
      - public
      - class
      VB:
      - Public
      - Class
    items:
    - id: TheInvaders.Battlefield.PlayerController.IsOnTurn
      commentId: P:TheInvaders.Battlefield.PlayerController.IsOnTurn
      language: CSharp
      name:
        CSharp: IsOnTurn
        VB: IsOnTurn
      nameWithType:
        CSharp: PlayerController.IsOnTurn
        VB: PlayerController.IsOnTurn
      qualifiedName:
        CSharp: TheInvaders.Battlefield.PlayerController.IsOnTurn
        VB: TheInvaders.Battlefield.PlayerController.IsOnTurn
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: TheInvaders.Battlefield
      source:
        id: IsOnTurn
        path: ''
        startLine: 2647
      summary: "\nIs this player&apos;s turn?\n"
      example: []
      syntax:
        content:
          CSharp: public bool IsOnTurn { get; }
          VB: Public ReadOnly Property IsOnTurn As Boolean
        parameters: []
        return:
          type: System.Boolean
      overload: TheInvaders.Battlefield.PlayerController.IsOnTurn*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
    - id: TheInvaders.Battlefield.PlayerController.P
      commentId: P:TheInvaders.Battlefield.PlayerController.P
      language: CSharp
      name:
        CSharp: P
        VB: P
      nameWithType:
        CSharp: PlayerController.P
        VB: PlayerController.P
      qualifiedName:
        CSharp: TheInvaders.Battlefield.PlayerController.P
        VB: TheInvaders.Battlefield.PlayerController.P
      type: Property
      assemblies:
      - cs.temp.dll
      namespace: TheInvaders.Battlefield
      source:
        id: P
        path: ''
        startLine: 2653
      summary: "\nThe player who is using this camera\n"
      example: []
      syntax:
        content:
          CSharp: public Photon.Realtime.Player P { get; }
          VB: Public ReadOnly Property P As Photon.Realtime.Player
        parameters: []
        return:
          type: Photon.Realtime.Player
      overload: TheInvaders.Battlefield.PlayerController.P*
      modifiers:
        CSharp:
        - public
        - get
        VB:
        - Public
        - ReadOnly
references:
  CardBattle.Core:
    name:
      CSharp:
      - name: CardBattle.Core
        nameWithType: CardBattle.Core
        qualifiedName: CardBattle.Core
      VB:
      - name: CardBattle.Core
        nameWithType: CardBattle.Core
        qualifiedName: CardBattle.Core
    isDefinition: true
    commentId: N:CardBattle.Core
  CardBattle.Core.COLOR:
    name:
      CSharp:
      - id: CardBattle.Core.COLOR
        name: COLOR
        nameWithType: COLOR
        qualifiedName: CardBattle.Core.COLOR
      VB:
      - id: CardBattle.Core.COLOR
        name: COLOR
        nameWithType: COLOR
        qualifiedName: CardBattle.Core.COLOR
    isDefinition: true
    parent: CardBattle.Core
    commentId: T:CardBattle.Core.COLOR
  CardBattle.Core.MULTIPLIER:
    name:
      CSharp:
      - id: CardBattle.Core.MULTIPLIER
        name: MULTIPLIER
        nameWithType: MULTIPLIER
        qualifiedName: CardBattle.Core.MULTIPLIER
      VB:
      - id: CardBattle.Core.MULTIPLIER
        name: MULTIPLIER
        nameWithType: MULTIPLIER
        qualifiedName: CardBattle.Core.MULTIPLIER
    isDefinition: true
    parent: CardBattle.Core
    commentId: T:CardBattle.Core.MULTIPLIER
  CardBattle.Core.DIRECTION:
    name:
      CSharp:
      - id: CardBattle.Core.DIRECTION
        name: DIRECTION
        nameWithType: DIRECTION
        qualifiedName: CardBattle.Core.DIRECTION
      VB:
      - id: CardBattle.Core.DIRECTION
        name: DIRECTION
        nameWithType: DIRECTION
        qualifiedName: CardBattle.Core.DIRECTION
    isDefinition: true
    parent: CardBattle.Core
    commentId: T:CardBattle.Core.DIRECTION
  CardBattle.Core.MatchType:
    name:
      CSharp:
      - id: CardBattle.Core.MatchType
        name: MatchType
        nameWithType: MatchType
        qualifiedName: CardBattle.Core.MatchType
      VB:
      - id: CardBattle.Core.MatchType
        name: MatchType
        nameWithType: MatchType
        qualifiedName: CardBattle.Core.MatchType
    isDefinition: true
    parent: CardBattle.Core
    commentId: T:CardBattle.Core.MatchType
  CardBattle.Core.DIFFICULTY:
    name:
      CSharp:
      - id: CardBattle.Core.DIFFICULTY
        name: DIFFICULTY
        nameWithType: DIFFICULTY
        qualifiedName: CardBattle.Core.DIFFICULTY
      VB:
      - id: CardBattle.Core.DIFFICULTY
        name: DIFFICULTY
        nameWithType: DIFFICULTY
        qualifiedName: CardBattle.Core.DIFFICULTY
    isDefinition: true
    parent: CardBattle.Core
    commentId: T:CardBattle.Core.DIFFICULTY
  CardBattle.Core.GameManager:
    name:
      CSharp:
      - id: CardBattle.Core.GameManager
        name: GameManager
        nameWithType: GameManager
        qualifiedName: CardBattle.Core.GameManager
      VB:
      - id: CardBattle.Core.GameManager
        name: GameManager
        nameWithType: GameManager
        qualifiedName: CardBattle.Core.GameManager
    isDefinition: true
    parent: CardBattle.Core
    commentId: T:CardBattle.Core.GameManager
  TurnManager:
    name:
      CSharp:
      - id: TurnManager
        name: TurnManager
        nameWithType: TurnManager
        qualifiedName: TurnManager
        isExternal: true
      VB:
      - id: TurnManager
        name: TurnManager
        nameWithType: TurnManager
        qualifiedName: TurnManager
        isExternal: true
    isDefinition: true
    commentId: '!:TurnManager'
  System.Collections.Generic.List`1:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.List`1
  System.Collections.Generic:
    name:
      CSharp:
      - name: System.Collections.Generic
        nameWithType: System.Collections.Generic
        qualifiedName: System.Collections.Generic
        isExternal: true
      VB:
      - name: System.Collections.Generic
        nameWithType: System.Collections.Generic
        qualifiedName: System.Collections.Generic
    isDefinition: true
    commentId: N:System.Collections.Generic
  System.Collections.Generic.List{Player}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Player
        name: Player
        nameWithType: Player
        qualifiedName: Player
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Player
        name: Player
        nameWithType: Player
        qualifiedName: Player
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Player}
  CardBattle.Core.AI:
    name:
      CSharp:
      - name: CardBattle.Core.AI
        nameWithType: CardBattle.Core.AI
        qualifiedName: CardBattle.Core.AI
      VB:
      - name: CardBattle.Core.AI
        nameWithType: CardBattle.Core.AI
        qualifiedName: CardBattle.Core.AI
    isDefinition: true
    commentId: N:CardBattle.Core.AI
  CardBattle.Core.AI.Bot:
    name:
      CSharp:
      - id: CardBattle.Core.AI.Bot
        name: Bot
        nameWithType: Bot
        qualifiedName: CardBattle.Core.AI.Bot
      VB:
      - id: CardBattle.Core.AI.Bot
        name: Bot
        nameWithType: Bot
        qualifiedName: CardBattle.Core.AI.Bot
    isDefinition: true
    parent: CardBattle.Core.AI
    commentId: T:CardBattle.Core.AI.Bot
  CardBattle.Core.GameManager.Awake*:
    name:
      CSharp:
      - id: CardBattle.Core.GameManager.Awake*
        name: Awake
        nameWithType: GameManager.Awake
        qualifiedName: CardBattle.Core.GameManager.Awake
      VB:
      - id: CardBattle.Core.GameManager.Awake*
        name: Awake
        nameWithType: GameManager.Awake
        qualifiedName: CardBattle.Core.GameManager.Awake
    isDefinition: true
    commentId: Overload:CardBattle.Core.GameManager.Awake
  CardBattle.Core.GameManager.Start*:
    name:
      CSharp:
      - id: CardBattle.Core.GameManager.Start*
        name: Start
        nameWithType: GameManager.Start
        qualifiedName: CardBattle.Core.GameManager.Start
      VB:
      - id: CardBattle.Core.GameManager.Start*
        name: Start
        nameWithType: GameManager.Start
        qualifiedName: CardBattle.Core.GameManager.Start
    isDefinition: true
    commentId: Overload:CardBattle.Core.GameManager.Start
  CardBattle.Core.GameManager.Initiate*:
    name:
      CSharp:
      - id: CardBattle.Core.GameManager.Initiate*
        name: Initiate
        nameWithType: GameManager.Initiate
        qualifiedName: CardBattle.Core.GameManager.Initiate
      VB:
      - id: CardBattle.Core.GameManager.Initiate*
        name: Initiate
        nameWithType: GameManager.Initiate
        qualifiedName: CardBattle.Core.GameManager.Initiate
    isDefinition: true
    commentId: Overload:CardBattle.Core.GameManager.Initiate
  System.Collections.Generic.List{GameObject}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{GameObject}
  System.Collections.Generic.List{Photon.Realtime.Player}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Photon.Realtime.Player
        name: Photon.Realtime.Player
        nameWithType: Photon.Realtime.Player
        qualifiedName: Photon.Realtime.Player
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Photon.Realtime.Player
        name: Photon.Realtime.Player
        nameWithType: Photon.Realtime.Player
        qualifiedName: Photon.Realtime.Player
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Photon.Realtime.Player}
  Transform:
    name:
      CSharp:
      - id: Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
      VB:
      - id: Transform
        name: Transform
        nameWithType: Transform
        qualifiedName: Transform
        isExternal: true
    isDefinition: true
    commentId: '!:Transform'
  UnityEvent`1:
    name:
      CSharp:
      - id: UnityEvent`1
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: UnityEvent`1
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
  UnityEvent{System.String}:
    name:
      CSharp:
      - id: UnityEvent`1
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: UnityEvent`1
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: UnityEvent`1
    commentId: '!:UnityEvent{System.String}'
  UnityEvent{System.Int32}:
    name:
      CSharp:
      - id: UnityEvent`1
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: UnityEvent`1
        name: UnityEvent
        nameWithType: UnityEvent
        qualifiedName: UnityEvent
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: UnityEvent`1
    commentId: '!:UnityEvent{System.Int32}'
  System.Exception:
    commentId: T:System.Exception
  T:
    name:
      CSharp:
      - name: T
        nameWithType: T
        qualifiedName: T
      VB:
      - name: T
        nameWithType: T
        qualifiedName: T
    isDefinition: true
  '{T}':
    name:
      CSharp:
      - name: T
        nameWithType: T
        qualifiedName: T
      VB:
      - name: T
        nameWithType: T
        qualifiedName: T
    isDefinition: false
    definition: T
    commentId: '!:T'
  CardBattle.Core.Slider.GetCurrent*:
    name:
      CSharp:
      - id: CardBattle.Core.Slider.GetCurrent*
        name: GetCurrent
        nameWithType: Slider.GetCurrent
        qualifiedName: CardBattle.Core.Slider.GetCurrent
      VB:
      - id: CardBattle.Core.Slider.GetCurrent*
        name: GetCurrent
        nameWithType: Slider.GetCurrent
        qualifiedName: CardBattle.Core.Slider.GetCurrent
    isDefinition: true
    commentId: Overload:CardBattle.Core.Slider.GetCurrent
  CardBattle.Core.Slider:
    name:
      CSharp:
      - id: CardBattle.Core.Slider
        name: Slider
        nameWithType: Slider
        qualifiedName: CardBattle.Core.Slider
      VB:
      - id: CardBattle.Core.Slider
        name: Slider
        nameWithType: Slider
        qualifiedName: CardBattle.Core.Slider
    isDefinition: true
    commentId: T:CardBattle.Core.Slider
  CardBattle.Core.Turns.QuickMatch.FinishTurn*:
    name:
      CSharp:
      - id: CardBattle.Core.Turns.QuickMatch.FinishTurn*
        name: FinishTurn
        nameWithType: QuickMatch.FinishTurn
        qualifiedName: CardBattle.Core.Turns.QuickMatch.FinishTurn
      VB:
      - id: CardBattle.Core.Turns.QuickMatch.FinishTurn*
        name: FinishTurn
        nameWithType: QuickMatch.FinishTurn
        qualifiedName: CardBattle.Core.Turns.QuickMatch.FinishTurn
    isDefinition: true
    commentId: Overload:CardBattle.Core.Turns.QuickMatch.FinishTurn
  CardBattle.Core.Turns.QuickMatch:
    name:
      CSharp:
      - id: CardBattle.Core.Turns.QuickMatch
        name: QuickMatch
        nameWithType: QuickMatch
        qualifiedName: CardBattle.Core.Turns.QuickMatch
      VB:
      - id: CardBattle.Core.Turns.QuickMatch
        name: QuickMatch
        nameWithType: QuickMatch
        qualifiedName: CardBattle.Core.Turns.QuickMatch
    isDefinition: true
    commentId: T:CardBattle.Core.Turns.QuickMatch
  CardBattle.Core.Turns.StandardMatch:
    name:
      CSharp:
      - id: CardBattle.Core.Turns.StandardMatch
        name: StandardMatch
        nameWithType: StandardMatch
        qualifiedName: CardBattle.Core.Turns.StandardMatch
      VB:
      - id: CardBattle.Core.Turns.StandardMatch
        name: StandardMatch
        nameWithType: StandardMatch
        qualifiedName: CardBattle.Core.Turns.StandardMatch
    isDefinition: true
    commentId: T:CardBattle.Core.Turns.StandardMatch
  System:
    name:
      CSharp:
      - name: System
        nameWithType: System
        qualifiedName: System
        isExternal: true
      VB:
      - name: System
        nameWithType: System
        qualifiedName: System
    isDefinition: true
    commentId: N:System
  System.Object:
    name:
      CSharp:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      VB:
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Object
  System.Object.ToString:
    name:
      CSharp:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ToString
        name: ToString
        nameWithType: Object.ToString
        qualifiedName: System.Object.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ToString
  System.Object.Equals(System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object)
  System.Object.Equals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.Equals(System.Object,System.Object)
        name: Equals
        nameWithType: Object.Equals
        qualifiedName: System.Object.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.Equals(System.Object,System.Object)
  System.Object.ReferenceEquals(System.Object,System.Object):
    name:
      CSharp:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.ReferenceEquals(System.Object,System.Object)
        name: ReferenceEquals
        nameWithType: Object.ReferenceEquals
        qualifiedName: System.Object.ReferenceEquals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.ReferenceEquals(System.Object,System.Object)
  System.Object.GetHashCode:
    name:
      CSharp:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetHashCode
        name: GetHashCode
        nameWithType: Object.GetHashCode
        qualifiedName: System.Object.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetHashCode
  System.Object.GetType:
    name:
      CSharp:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.GetType
        name: GetType
        nameWithType: Object.GetType
        qualifiedName: System.Object.GetType
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.GetType
  System.Object.MemberwiseClone:
    name:
      CSharp:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.Object.MemberwiseClone
        name: MemberwiseClone
        nameWithType: Object.MemberwiseClone
        qualifiedName: System.Object.MemberwiseClone
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.Object
    commentId: M:System.Object.MemberwiseClone
  System.Collections.Generic.List{System.Action}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: System.Action
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: System.Action
        name: Action
        nameWithType: Action
        qualifiedName: System.Action
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{System.Action}
  Player:
    name:
      CSharp:
      - id: Player
        name: Player
        nameWithType: Player
        qualifiedName: Player
        isExternal: true
      VB:
      - id: Player
        name: Player
        nameWithType: Player
        qualifiedName: Player
        isExternal: true
    isDefinition: true
  CardBattle.Core.Turns.Turn.#ctor*:
    name:
      CSharp:
      - id: CardBattle.Core.Turns.Turn.#ctor*
        name: Turn
        nameWithType: Turn.Turn
        qualifiedName: CardBattle.Core.Turns.Turn.Turn
      VB:
      - id: CardBattle.Core.Turns.Turn.#ctor*
        name: Turn
        nameWithType: Turn.Turn
        qualifiedName: CardBattle.Core.Turns.Turn.Turn
    isDefinition: true
    commentId: Overload:CardBattle.Core.Turns.Turn.#ctor
  CardBattle.Core.Turns.Turn.Reset*:
    name:
      CSharp:
      - id: CardBattle.Core.Turns.Turn.Reset*
        name: Reset
        nameWithType: Turn.Reset
        qualifiedName: CardBattle.Core.Turns.Turn.Reset
      VB:
      - id: CardBattle.Core.Turns.Turn.Reset*
        name: Reset
        nameWithType: Turn.Reset
        qualifiedName: CardBattle.Core.Turns.Turn.Reset
    isDefinition: true
    commentId: Overload:CardBattle.Core.Turns.Turn.Reset
  CardBattle.Core.Turns.Turn:
    name:
      CSharp:
      - id: CardBattle.Core.Turns.Turn
        name: Turn
        nameWithType: Turn
        qualifiedName: CardBattle.Core.Turns.Turn
      VB:
      - id: CardBattle.Core.Turns.Turn
        name: Turn
        nameWithType: Turn
        qualifiedName: CardBattle.Core.Turns.Turn
    isDefinition: true
    commentId: T:CardBattle.Core.Turns.Turn
  CardStack`1:
    name:
      CSharp:
      - id: CardStack`1
        name: CardStack
        nameWithType: CardStack
        qualifiedName: CardStack
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: CardStack`1
        name: CardStack
        nameWithType: CardStack
        qualifiedName: CardStack
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: ''
        nameWithType: ''
        qualifiedName: ''
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: '!:CardStack`1'
  CardStack{Card}:
    name:
      CSharp:
      - id: CardStack`1
        name: CardStack
        nameWithType: CardStack
        qualifiedName: CardStack
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Card
        name: Card
        nameWithType: Card
        qualifiedName: Card
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: CardStack`1
        name: CardStack
        nameWithType: CardStack
        qualifiedName: CardStack
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Card
        name: Card
        nameWithType: Card
        qualifiedName: Card
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: CardStack`1
    commentId: '!:CardStack{Card}'
  CardBattle.Core.Turns.TurnManager.CurrentPlayer*:
    name:
      CSharp:
      - id: CardBattle.Core.Turns.TurnManager.CurrentPlayer*
        name: CurrentPlayer
        nameWithType: TurnManager.CurrentPlayer
        qualifiedName: CardBattle.Core.Turns.TurnManager.CurrentPlayer
      VB:
      - id: CardBattle.Core.Turns.TurnManager.CurrentPlayer*
        name: CurrentPlayer
        nameWithType: TurnManager.CurrentPlayer
        qualifiedName: CardBattle.Core.Turns.TurnManager.CurrentPlayer
    isDefinition: true
    commentId: Overload:CardBattle.Core.Turns.TurnManager.CurrentPlayer
  CardBattle.Core.Turns.TurnManager.OpponentPlayer*:
    name:
      CSharp:
      - id: CardBattle.Core.Turns.TurnManager.OpponentPlayer*
        name: OpponentPlayer
        nameWithType: TurnManager.OpponentPlayer
        qualifiedName: CardBattle.Core.Turns.TurnManager.OpponentPlayer
      VB:
      - id: CardBattle.Core.Turns.TurnManager.OpponentPlayer*
        name: OpponentPlayer
        nameWithType: TurnManager.OpponentPlayer
        qualifiedName: CardBattle.Core.Turns.TurnManager.OpponentPlayer
    isDefinition: true
    commentId: Overload:CardBattle.Core.Turns.TurnManager.OpponentPlayer
  Bot:
    name:
      CSharp:
      - id: Bot
        name: Bot
        nameWithType: Bot
        qualifiedName: Bot
        isExternal: true
      VB:
      - id: Bot
        name: Bot
        nameWithType: Bot
        qualifiedName: Bot
        isExternal: true
    isDefinition: true
  CardBattle.Core.Turns.TurnManager.Bot*:
    name:
      CSharp:
      - id: CardBattle.Core.Turns.TurnManager.Bot*
        name: Bot
        nameWithType: TurnManager.Bot
        qualifiedName: CardBattle.Core.Turns.TurnManager.Bot
      VB:
      - id: CardBattle.Core.Turns.TurnManager.Bot*
        name: Bot
        nameWithType: TurnManager.Bot
        qualifiedName: CardBattle.Core.Turns.TurnManager.Bot
    isDefinition: true
    commentId: Overload:CardBattle.Core.Turns.TurnManager.Bot
  CardBattle.Core.Turns.TurnManager.Init*:
    name:
      CSharp:
      - id: CardBattle.Core.Turns.TurnManager.Init*
        name: Init
        nameWithType: TurnManager.Init
        qualifiedName: CardBattle.Core.Turns.TurnManager.Init
      VB:
      - id: CardBattle.Core.Turns.TurnManager.Init*
        name: Init
        nameWithType: TurnManager.Init
        qualifiedName: CardBattle.Core.Turns.TurnManager.Init
    isDefinition: true
    commentId: Overload:CardBattle.Core.Turns.TurnManager.Init
  CardBattle.Core.Turns.TurnManager.FirstTurn*:
    name:
      CSharp:
      - id: CardBattle.Core.Turns.TurnManager.FirstTurn*
        name: FirstTurn
        nameWithType: TurnManager.FirstTurn
        qualifiedName: CardBattle.Core.Turns.TurnManager.FirstTurn
      VB:
      - id: CardBattle.Core.Turns.TurnManager.FirstTurn*
        name: FirstTurn
        nameWithType: TurnManager.FirstTurn
        qualifiedName: CardBattle.Core.Turns.TurnManager.FirstTurn
    isDefinition: true
    commentId: Overload:CardBattle.Core.Turns.TurnManager.FirstTurn
  CardBattle.Core.Turns.TurnManager.NextTurn*:
    name:
      CSharp:
      - id: CardBattle.Core.Turns.TurnManager.NextTurn*
        name: NextTurn
        nameWithType: TurnManager.NextTurn
        qualifiedName: CardBattle.Core.Turns.TurnManager.NextTurn
      VB:
      - id: CardBattle.Core.Turns.TurnManager.NextTurn*
        name: NextTurn
        nameWithType: TurnManager.NextTurn
        qualifiedName: CardBattle.Core.Turns.TurnManager.NextTurn
    isDefinition: true
    commentId: Overload:CardBattle.Core.Turns.TurnManager.NextTurn
  CardBattle.Core.Turns.TurnManager:
    name:
      CSharp:
      - id: CardBattle.Core.Turns.TurnManager
        name: TurnManager
        nameWithType: TurnManager
        qualifiedName: CardBattle.Core.Turns.TurnManager
      VB:
      - id: CardBattle.Core.Turns.TurnManager
        name: TurnManager
        nameWithType: TurnManager
        qualifiedName: CardBattle.Core.Turns.TurnManager
    isDefinition: true
    commentId: T:CardBattle.Core.Turns.TurnManager
  CardBattle.Core.Turns:
    name:
      CSharp:
      - name: CardBattle.Core.Turns
        nameWithType: CardBattle.Core.Turns
        qualifiedName: CardBattle.Core.Turns
      VB:
      - name: CardBattle.Core.Turns
        nameWithType: CardBattle.Core.Turns
        qualifiedName: CardBattle.Core.Turns
    isDefinition: true
    commentId: N:CardBattle.Core.Turns
  System.Boolean:
    name:
      CSharp:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      VB:
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Boolean
  CardBattle.Core.Actions.Action.#ctor*:
    name:
      CSharp:
      - id: CardBattle.Core.Actions.Action.#ctor*
        name: Action
        nameWithType: Action.Action
        qualifiedName: CardBattle.Core.Actions.Action.Action
      VB:
      - id: CardBattle.Core.Actions.Action.#ctor*
        name: Action
        nameWithType: Action.Action
        qualifiedName: CardBattle.Core.Actions.Action.Action
    isDefinition: true
    commentId: Overload:CardBattle.Core.Actions.Action.#ctor
  CardBattle.Core.Actions.Action.Execute*:
    name:
      CSharp:
      - id: CardBattle.Core.Actions.Action.Execute*
        name: Execute
        nameWithType: Action.Execute
        qualifiedName: CardBattle.Core.Actions.Action.Execute
      VB:
      - id: CardBattle.Core.Actions.Action.Execute*
        name: Execute
        nameWithType: Action.Execute
        qualifiedName: CardBattle.Core.Actions.Action.Execute
    isDefinition: true
    commentId: Overload:CardBattle.Core.Actions.Action.Execute
  CardBattle.Core.Actions.Action:
    name:
      CSharp:
      - id: CardBattle.Core.Actions.Action
        name: Action
        nameWithType: Action
        qualifiedName: CardBattle.Core.Actions.Action
      VB:
      - id: CardBattle.Core.Actions.Action
        name: Action
        nameWithType: Action
        qualifiedName: CardBattle.Core.Actions.Action
    isDefinition: true
    parent: CardBattle.Core.Actions
    commentId: T:CardBattle.Core.Actions.Action
  CardBattle.Core.Actions:
    name:
      CSharp:
      - name: CardBattle.Core.Actions
        nameWithType: CardBattle.Core.Actions
        qualifiedName: CardBattle.Core.Actions
      VB:
      - name: CardBattle.Core.Actions
        nameWithType: CardBattle.Core.Actions
        qualifiedName: CardBattle.Core.Actions
    isDefinition: true
    commentId: N:CardBattle.Core.Actions
  System.String:
    name:
      CSharp:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
      VB:
      - id: System.String
        name: String
        nameWithType: String
        qualifiedName: System.String
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.String
  CardBattle.Core.Actions.Derived.Card.CardTitle*:
    name:
      CSharp:
      - id: CardBattle.Core.Actions.Derived.Card.CardTitle*
        name: CardTitle
        nameWithType: Card.CardTitle
        qualifiedName: CardBattle.Core.Actions.Derived.Card.CardTitle
      VB:
      - id: CardBattle.Core.Actions.Derived.Card.CardTitle*
        name: CardTitle
        nameWithType: Card.CardTitle
        qualifiedName: CardBattle.Core.Actions.Derived.Card.CardTitle
    isDefinition: true
    commentId: Overload:CardBattle.Core.Actions.Derived.Card.CardTitle
  CardBattle.Core.Actions.Derived.Card.Description*:
    name:
      CSharp:
      - id: CardBattle.Core.Actions.Derived.Card.Description*
        name: Description
        nameWithType: Card.Description
        qualifiedName: CardBattle.Core.Actions.Derived.Card.Description
      VB:
      - id: CardBattle.Core.Actions.Derived.Card.Description*
        name: Description
        nameWithType: Card.Description
        qualifiedName: CardBattle.Core.Actions.Derived.Card.Description
    isDefinition: true
    commentId: Overload:CardBattle.Core.Actions.Derived.Card.Description
  System.Collections.Generic.List{Material}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Material
        name: Material
        nameWithType: Material
        qualifiedName: Material
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Material
        name: Material
        nameWithType: Material
        qualifiedName: Material
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Material}
  CardBattle.Core.Actions.Derived.Card.Materials*:
    name:
      CSharp:
      - id: CardBattle.Core.Actions.Derived.Card.Materials*
        name: Materials
        nameWithType: Card.Materials
        qualifiedName: CardBattle.Core.Actions.Derived.Card.Materials
      VB:
      - id: CardBattle.Core.Actions.Derived.Card.Materials*
        name: Materials
        nameWithType: Card.Materials
        qualifiedName: CardBattle.Core.Actions.Derived.Card.Materials
    isDefinition: true
    commentId: Overload:CardBattle.Core.Actions.Derived.Card.Materials
  CardBattle.Core.Actions.Derived.Card.#ctor*:
    name:
      CSharp:
      - id: CardBattle.Core.Actions.Derived.Card.#ctor*
        name: Card
        nameWithType: Card.Card
        qualifiedName: CardBattle.Core.Actions.Derived.Card.Card
      VB:
      - id: CardBattle.Core.Actions.Derived.Card.#ctor*
        name: Card
        nameWithType: Card.Card
        qualifiedName: CardBattle.Core.Actions.Derived.Card.Card
    isDefinition: true
    commentId: Overload:CardBattle.Core.Actions.Derived.Card.#ctor
  CardBattle.Core.Actions.Derived.Card.Execute*:
    name:
      CSharp:
      - id: CardBattle.Core.Actions.Derived.Card.Execute*
        name: Execute
        nameWithType: Card.Execute
        qualifiedName: CardBattle.Core.Actions.Derived.Card.Execute
      VB:
      - id: CardBattle.Core.Actions.Derived.Card.Execute*
        name: Execute
        nameWithType: Card.Execute
        qualifiedName: CardBattle.Core.Actions.Derived.Card.Execute
    isDefinition: true
    commentId: Overload:CardBattle.Core.Actions.Derived.Card.Execute
  CardBattle.Core.Actions.Derived.Card:
    name:
      CSharp:
      - id: CardBattle.Core.Actions.Derived.Card
        name: Card
        nameWithType: Card
        qualifiedName: CardBattle.Core.Actions.Derived.Card
      VB:
      - id: CardBattle.Core.Actions.Derived.Card
        name: Card
        nameWithType: Card
        qualifiedName: CardBattle.Core.Actions.Derived.Card
    isDefinition: true
    commentId: T:CardBattle.Core.Actions.Derived.Card
  CardBattle.Core.Actions.Action.isOptional:
    name:
      CSharp:
      - id: CardBattle.Core.Actions.Action.isOptional
        name: isOptional
        nameWithType: Action.isOptional
        qualifiedName: CardBattle.Core.Actions.Action.isOptional
      VB:
      - id: CardBattle.Core.Actions.Action.isOptional
        name: isOptional
        nameWithType: Action.isOptional
        qualifiedName: CardBattle.Core.Actions.Action.isOptional
    isDefinition: true
    parent: CardBattle.Core.Actions.Action
    commentId: F:CardBattle.Core.Actions.Action.isOptional
  System.Collections.Generic.List{{T}}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{`0}
  CardBattle.Core.Actions.Derived.CardStack`1.#ctor*:
    name:
      CSharp:
      - id: CardBattle.Core.Actions.Derived.CardStack`1.#ctor*
        name: CardStack
        nameWithType: CardStack<T>.CardStack
        qualifiedName: CardBattle.Core.Actions.Derived.CardStack<T>.CardStack
      VB:
      - id: CardBattle.Core.Actions.Derived.CardStack`1.#ctor*
        name: CardStack
        nameWithType: CardStack(Of T).CardStack
        qualifiedName: CardBattle.Core.Actions.Derived.CardStack(Of T).CardStack
    isDefinition: true
    commentId: Overload:CardBattle.Core.Actions.Derived.CardStack`1.#ctor
  CardBattle.Core.Actions.Derived.CardStack`1.Shuffle*:
    name:
      CSharp:
      - id: CardBattle.Core.Actions.Derived.CardStack`1.Shuffle*
        name: Shuffle
        nameWithType: CardStack<T>.Shuffle
        qualifiedName: CardBattle.Core.Actions.Derived.CardStack<T>.Shuffle
      VB:
      - id: CardBattle.Core.Actions.Derived.CardStack`1.Shuffle*
        name: Shuffle
        nameWithType: CardStack(Of T).Shuffle
        qualifiedName: CardBattle.Core.Actions.Derived.CardStack(Of T).Shuffle
    isDefinition: true
    commentId: Overload:CardBattle.Core.Actions.Derived.CardStack`1.Shuffle
  CardBattle.Core.Actions.Derived.CardStack`1.DrawCard*:
    name:
      CSharp:
      - id: CardBattle.Core.Actions.Derived.CardStack`1.DrawCard*
        name: DrawCard
        nameWithType: CardStack<T>.DrawCard
        qualifiedName: CardBattle.Core.Actions.Derived.CardStack<T>.DrawCard
      VB:
      - id: CardBattle.Core.Actions.Derived.CardStack`1.DrawCard*
        name: DrawCard
        nameWithType: CardStack(Of T).DrawCard
        qualifiedName: CardBattle.Core.Actions.Derived.CardStack(Of T).DrawCard
    isDefinition: true
    commentId: Overload:CardBattle.Core.Actions.Derived.CardStack`1.DrawCard
  CardBattle.Core.Actions.Action.Execute:
    name:
      CSharp:
      - id: CardBattle.Core.Actions.Action.Execute
        name: Execute
        nameWithType: Action.Execute
        qualifiedName: CardBattle.Core.Actions.Action.Execute
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: CardBattle.Core.Actions.Action.Execute
        name: Execute
        nameWithType: Action.Execute
        qualifiedName: CardBattle.Core.Actions.Action.Execute
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: CardBattle.Core.Actions.Action
    commentId: M:CardBattle.Core.Actions.Action.Execute
  CardBattle.Core.Actions.Derived.CardStack`1.Execute*:
    name:
      CSharp:
      - id: CardBattle.Core.Actions.Derived.CardStack`1.Execute*
        name: Execute
        nameWithType: CardStack<T>.Execute
        qualifiedName: CardBattle.Core.Actions.Derived.CardStack<T>.Execute
      VB:
      - id: CardBattle.Core.Actions.Derived.CardStack`1.Execute*
        name: Execute
        nameWithType: CardStack(Of T).Execute
        qualifiedName: CardBattle.Core.Actions.Derived.CardStack(Of T).Execute
    isDefinition: true
    commentId: Overload:CardBattle.Core.Actions.Derived.CardStack`1.Execute
  CardBattle.Core.Actions.Derived.CardStack`1:
    name:
      CSharp:
      - id: CardBattle.Core.Actions.Derived.CardStack`1
        name: CardStack
        nameWithType: CardStack
        qualifiedName: CardBattle.Core.Actions.Derived.CardStack
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: CardBattle.Core.Actions.Derived.CardStack`1
        name: CardStack
        nameWithType: CardStack
        qualifiedName: CardBattle.Core.Actions.Derived.CardStack
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:CardBattle.Core.Actions.Derived.CardStack`1
  CardBattle.Core.Actions.Derived.ColorDice.#ctor*:
    name:
      CSharp:
      - id: CardBattle.Core.Actions.Derived.ColorDice.#ctor*
        name: ColorDice
        nameWithType: ColorDice.ColorDice
        qualifiedName: CardBattle.Core.Actions.Derived.ColorDice.ColorDice
      VB:
      - id: CardBattle.Core.Actions.Derived.ColorDice.#ctor*
        name: ColorDice
        nameWithType: ColorDice.ColorDice
        qualifiedName: CardBattle.Core.Actions.Derived.ColorDice.ColorDice
    isDefinition: true
    commentId: Overload:CardBattle.Core.Actions.Derived.ColorDice.#ctor
  CardBattle.Core.Actions.Derived.ColorDice.Execute*:
    name:
      CSharp:
      - id: CardBattle.Core.Actions.Derived.ColorDice.Execute*
        name: Execute
        nameWithType: ColorDice.Execute
        qualifiedName: CardBattle.Core.Actions.Derived.ColorDice.Execute
      VB:
      - id: CardBattle.Core.Actions.Derived.ColorDice.Execute*
        name: Execute
        nameWithType: ColorDice.Execute
        qualifiedName: CardBattle.Core.Actions.Derived.ColorDice.Execute
    isDefinition: true
    commentId: Overload:CardBattle.Core.Actions.Derived.ColorDice.Execute
  CardBattle.Core.Actions.Derived.ColorDice:
    name:
      CSharp:
      - id: CardBattle.Core.Actions.Derived.ColorDice
        name: ColorDice
        nameWithType: ColorDice
        qualifiedName: CardBattle.Core.Actions.Derived.ColorDice
      VB:
      - id: CardBattle.Core.Actions.Derived.ColorDice
        name: ColorDice
        nameWithType: ColorDice
        qualifiedName: CardBattle.Core.Actions.Derived.ColorDice
    isDefinition: true
    commentId: T:CardBattle.Core.Actions.Derived.ColorDice
  CardBattle.Core.Actions.Action[]:
    name:
      CSharp:
      - id: CardBattle.Core.Actions.Action
        name: Action
        nameWithType: Action
        qualifiedName: CardBattle.Core.Actions.Action
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: CardBattle.Core.Actions.Action
        name: Action
        nameWithType: Action
        qualifiedName: CardBattle.Core.Actions.Action
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  CardBattle.Core.Actions.Derived.Dice.#ctor*:
    name:
      CSharp:
      - id: CardBattle.Core.Actions.Derived.Dice.#ctor*
        name: Dice
        nameWithType: Dice.Dice
        qualifiedName: CardBattle.Core.Actions.Derived.Dice.Dice
      VB:
      - id: CardBattle.Core.Actions.Derived.Dice.#ctor*
        name: Dice
        nameWithType: Dice.Dice
        qualifiedName: CardBattle.Core.Actions.Derived.Dice.Dice
    isDefinition: true
    commentId: Overload:CardBattle.Core.Actions.Derived.Dice.#ctor
  System.Int32:
    name:
      CSharp:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      VB:
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Int32
  CardBattle.Core.Actions.Derived.Dice.Throw*:
    name:
      CSharp:
      - id: CardBattle.Core.Actions.Derived.Dice.Throw*
        name: Throw
        nameWithType: Dice.Throw
        qualifiedName: CardBattle.Core.Actions.Derived.Dice.Throw
      VB:
      - id: CardBattle.Core.Actions.Derived.Dice.Throw*
        name: Throw
        nameWithType: Dice.Throw
        qualifiedName: CardBattle.Core.Actions.Derived.Dice.Throw
    isDefinition: true
    commentId: Overload:CardBattle.Core.Actions.Derived.Dice.Throw
  CardBattle.Core.Actions.Derived.Dice.Execute*:
    name:
      CSharp:
      - id: CardBattle.Core.Actions.Derived.Dice.Execute*
        name: Execute
        nameWithType: Dice.Execute
        qualifiedName: CardBattle.Core.Actions.Derived.Dice.Execute
      VB:
      - id: CardBattle.Core.Actions.Derived.Dice.Execute*
        name: Execute
        nameWithType: Dice.Execute
        qualifiedName: CardBattle.Core.Actions.Derived.Dice.Execute
    isDefinition: true
    commentId: Overload:CardBattle.Core.Actions.Derived.Dice.Execute
  CardBattle.Core.Actions.Derived.Dice:
    name:
      CSharp:
      - id: CardBattle.Core.Actions.Derived.Dice
        name: Dice
        nameWithType: Dice
        qualifiedName: CardBattle.Core.Actions.Derived.Dice
      VB:
      - id: CardBattle.Core.Actions.Derived.Dice
        name: Dice
        nameWithType: Dice
        qualifiedName: CardBattle.Core.Actions.Derived.Dice
    isDefinition: true
    commentId: T:CardBattle.Core.Actions.Derived.Dice
  CardBattle.Core.Actions.Derived.DiceBox.#ctor*:
    name:
      CSharp:
      - id: CardBattle.Core.Actions.Derived.DiceBox.#ctor*
        name: DiceBox
        nameWithType: DiceBox.DiceBox
        qualifiedName: CardBattle.Core.Actions.Derived.DiceBox.DiceBox
      VB:
      - id: CardBattle.Core.Actions.Derived.DiceBox.#ctor*
        name: DiceBox
        nameWithType: DiceBox.DiceBox
        qualifiedName: CardBattle.Core.Actions.Derived.DiceBox.DiceBox
    isDefinition: true
    commentId: Overload:CardBattle.Core.Actions.Derived.DiceBox.#ctor
  CardBattle.Core.Actions.Derived.DiceBox.Execute*:
    name:
      CSharp:
      - id: CardBattle.Core.Actions.Derived.DiceBox.Execute*
        name: Execute
        nameWithType: DiceBox.Execute
        qualifiedName: CardBattle.Core.Actions.Derived.DiceBox.Execute
      VB:
      - id: CardBattle.Core.Actions.Derived.DiceBox.Execute*
        name: Execute
        nameWithType: DiceBox.Execute
        qualifiedName: CardBattle.Core.Actions.Derived.DiceBox.Execute
    isDefinition: true
    commentId: Overload:CardBattle.Core.Actions.Derived.DiceBox.Execute
  CardBattle.Core.Actions.Derived.DiceBox:
    name:
      CSharp:
      - id: CardBattle.Core.Actions.Derived.DiceBox
        name: DiceBox
        nameWithType: DiceBox
        qualifiedName: CardBattle.Core.Actions.Derived.DiceBox
      VB:
      - id: CardBattle.Core.Actions.Derived.DiceBox
        name: DiceBox
        nameWithType: DiceBox
        qualifiedName: CardBattle.Core.Actions.Derived.DiceBox
    isDefinition: true
    commentId: T:CardBattle.Core.Actions.Derived.DiceBox
  CardBattle.Core.Actions.Derived.FinanceAction.#ctor*:
    name:
      CSharp:
      - id: CardBattle.Core.Actions.Derived.FinanceAction.#ctor*
        name: FinanceAction
        nameWithType: FinanceAction.FinanceAction
        qualifiedName: CardBattle.Core.Actions.Derived.FinanceAction.FinanceAction
      VB:
      - id: CardBattle.Core.Actions.Derived.FinanceAction.#ctor*
        name: FinanceAction
        nameWithType: FinanceAction.FinanceAction
        qualifiedName: CardBattle.Core.Actions.Derived.FinanceAction.FinanceAction
    isDefinition: true
    commentId: Overload:CardBattle.Core.Actions.Derived.FinanceAction.#ctor
  CardBattle.Core.Actions.Derived.FinanceAction.Execute*:
    name:
      CSharp:
      - id: CardBattle.Core.Actions.Derived.FinanceAction.Execute*
        name: Execute
        nameWithType: FinanceAction.Execute
        qualifiedName: CardBattle.Core.Actions.Derived.FinanceAction.Execute
      VB:
      - id: CardBattle.Core.Actions.Derived.FinanceAction.Execute*
        name: Execute
        nameWithType: FinanceAction.Execute
        qualifiedName: CardBattle.Core.Actions.Derived.FinanceAction.Execute
    isDefinition: true
    commentId: Overload:CardBattle.Core.Actions.Derived.FinanceAction.Execute
  CardBattle.Core.Actions.Derived.FinanceAction:
    name:
      CSharp:
      - id: CardBattle.Core.Actions.Derived.FinanceAction
        name: FinanceAction
        nameWithType: FinanceAction
        qualifiedName: CardBattle.Core.Actions.Derived.FinanceAction
      VB:
      - id: CardBattle.Core.Actions.Derived.FinanceAction
        name: FinanceAction
        nameWithType: FinanceAction
        qualifiedName: CardBattle.Core.Actions.Derived.FinanceAction
    isDefinition: true
    parent: CardBattle.Core.Actions.Derived
    commentId: T:CardBattle.Core.Actions.Derived.FinanceAction
  CardBattle.Core.Actions.Derived:
    name:
      CSharp:
      - name: CardBattle.Core.Actions.Derived
        nameWithType: CardBattle.Core.Actions.Derived
        qualifiedName: CardBattle.Core.Actions.Derived
      VB:
      - name: CardBattle.Core.Actions.Derived
        nameWithType: CardBattle.Core.Actions.Derived
        qualifiedName: CardBattle.Core.Actions.Derived
    isDefinition: true
    commentId: N:CardBattle.Core.Actions.Derived
  CardBattle.Core.Actions.Derived.FinanceBox.#ctor*:
    name:
      CSharp:
      - id: CardBattle.Core.Actions.Derived.FinanceBox.#ctor*
        name: FinanceBox
        nameWithType: FinanceBox.FinanceBox
        qualifiedName: CardBattle.Core.Actions.Derived.FinanceBox.FinanceBox
      VB:
      - id: CardBattle.Core.Actions.Derived.FinanceBox.#ctor*
        name: FinanceBox
        nameWithType: FinanceBox.FinanceBox
        qualifiedName: CardBattle.Core.Actions.Derived.FinanceBox.FinanceBox
    isDefinition: true
    commentId: Overload:CardBattle.Core.Actions.Derived.FinanceBox.#ctor
  CardBattle.Core.Actions.Derived.FinanceBox.Execute*:
    name:
      CSharp:
      - id: CardBattle.Core.Actions.Derived.FinanceBox.Execute*
        name: Execute
        nameWithType: FinanceBox.Execute
        qualifiedName: CardBattle.Core.Actions.Derived.FinanceBox.Execute
      VB:
      - id: CardBattle.Core.Actions.Derived.FinanceBox.Execute*
        name: Execute
        nameWithType: FinanceBox.Execute
        qualifiedName: CardBattle.Core.Actions.Derived.FinanceBox.Execute
    isDefinition: true
    commentId: Overload:CardBattle.Core.Actions.Derived.FinanceBox.Execute
  CardBattle.Core.Actions.Derived.FinanceBox:
    name:
      CSharp:
      - id: CardBattle.Core.Actions.Derived.FinanceBox
        name: FinanceBox
        nameWithType: FinanceBox
        qualifiedName: CardBattle.Core.Actions.Derived.FinanceBox
      VB:
      - id: CardBattle.Core.Actions.Derived.FinanceBox
        name: FinanceBox
        nameWithType: FinanceBox
        qualifiedName: CardBattle.Core.Actions.Derived.FinanceBox
    isDefinition: true
    commentId: T:CardBattle.Core.Actions.Derived.FinanceBox
  GameObject:
    name:
      CSharp:
      - id: GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      VB:
      - id: GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
    isDefinition: true
  CardBattle.Core.AI.Bot.AddComponentTo*:
    name:
      CSharp:
      - id: CardBattle.Core.AI.Bot.AddComponentTo*
        name: AddComponentTo
        nameWithType: Bot.AddComponentTo
        qualifiedName: CardBattle.Core.AI.Bot.AddComponentTo
      VB:
      - id: CardBattle.Core.AI.Bot.AddComponentTo*
        name: AddComponentTo
        nameWithType: Bot.AddComponentTo
        qualifiedName: CardBattle.Core.AI.Bot.AddComponentTo
    isDefinition: true
    commentId: Overload:CardBattle.Core.AI.Bot.AddComponentTo
  CardBattle.Core.AI.Bot.StartTurn*:
    name:
      CSharp:
      - id: CardBattle.Core.AI.Bot.StartTurn*
        name: StartTurn
        nameWithType: Bot.StartTurn
        qualifiedName: CardBattle.Core.AI.Bot.StartTurn
      VB:
      - id: CardBattle.Core.AI.Bot.StartTurn*
        name: StartTurn
        nameWithType: Bot.StartTurn
        qualifiedName: CardBattle.Core.AI.Bot.StartTurn
    isDefinition: true
    commentId: Overload:CardBattle.Core.AI.Bot.StartTurn
  T0:
    name:
      CSharp:
      - name: T0
        nameWithType: T0
        qualifiedName: T0
      VB:
      - name: T0
        nameWithType: T0
        qualifiedName: T0
    isDefinition: true
  '{T0}':
    name:
      CSharp:
      - name: T0
        nameWithType: T0
        qualifiedName: T0
      VB:
      - name: T0
        nameWithType: T0
        qualifiedName: T0
    isDefinition: false
    definition: T0
    commentId: '!:T0'
  T1:
    name:
      CSharp:
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      VB:
      - name: T1
        nameWithType: T1
        qualifiedName: T1
    isDefinition: true
  '{T1}':
    name:
      CSharp:
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      VB:
      - name: T1
        nameWithType: T1
        qualifiedName: T1
    isDefinition: false
    definition: T1
    commentId: '!:T1'
  CardBattle.Core.Collections.Dictionary`2.Item*:
    name:
      CSharp:
      - id: CardBattle.Core.Collections.Dictionary`2.Item*
        name: Item
        nameWithType: Dictionary<T0, T1>.Item
        qualifiedName: CardBattle.Core.Collections.Dictionary<T0, T1>.Item
      VB:
      - id: CardBattle.Core.Collections.Dictionary`2.Item*
        name: Item
        nameWithType: Dictionary(Of T0, T1).Item
        qualifiedName: CardBattle.Core.Collections.Dictionary(Of T0, T1).Item
    isDefinition: true
    commentId: Overload:CardBattle.Core.Collections.Dictionary`2.Item
  System.Collections.Generic.List{CardBattle.Core.Collections.DictionaryPair{{T0},{T1}}}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: CardBattle.Core.Collections.DictionaryPair`2
        name: DictionaryPair
        nameWithType: DictionaryPair
        qualifiedName: CardBattle.Core.Collections.DictionaryPair
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T0
        nameWithType: T0
        qualifiedName: T0
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: CardBattle.Core.Collections.DictionaryPair`2
        name: DictionaryPair
        nameWithType: DictionaryPair
        qualifiedName: CardBattle.Core.Collections.DictionaryPair
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T0
        nameWithType: T0
        qualifiedName: T0
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: )
        nameWithType: )
        qualifiedName: )
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{CardBattle.Core.Collections.DictionaryPair{`0,`1}}
  CardBattle.Core.Collections.Dictionary`2.Find*:
    name:
      CSharp:
      - id: CardBattle.Core.Collections.Dictionary`2.Find*
        name: Find
        nameWithType: Dictionary<T0, T1>.Find
        qualifiedName: CardBattle.Core.Collections.Dictionary<T0, T1>.Find
      VB:
      - id: CardBattle.Core.Collections.Dictionary`2.Find*
        name: Find
        nameWithType: Dictionary(Of T0, T1).Find
        qualifiedName: CardBattle.Core.Collections.Dictionary(Of T0, T1).Find
    isDefinition: true
    commentId: Overload:CardBattle.Core.Collections.Dictionary`2.Find
  CardBattle.Core.Collections.DictionaryPair`2:
    name:
      CSharp:
      - id: CardBattle.Core.Collections.DictionaryPair`2
        name: DictionaryPair
        nameWithType: DictionaryPair
        qualifiedName: CardBattle.Core.Collections.DictionaryPair
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T0
        nameWithType: T0
        qualifiedName: T0
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: CardBattle.Core.Collections.DictionaryPair`2
        name: DictionaryPair
        nameWithType: DictionaryPair
        qualifiedName: CardBattle.Core.Collections.DictionaryPair
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T0
        nameWithType: T0
        qualifiedName: T0
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:CardBattle.Core.Collections.DictionaryPair`2
  CardBattle.Core.Collections:
    name:
      CSharp:
      - name: CardBattle.Core.Collections
        nameWithType: CardBattle.Core.Collections
        qualifiedName: CardBattle.Core.Collections
      VB:
      - name: CardBattle.Core.Collections
        nameWithType: CardBattle.Core.Collections
        qualifiedName: CardBattle.Core.Collections
    isDefinition: true
    commentId: N:CardBattle.Core.Collections
  CardBattle.Core.Collections.DictionaryPair{{T0},{T1}}:
    name:
      CSharp:
      - id: CardBattle.Core.Collections.DictionaryPair`2
        name: DictionaryPair
        nameWithType: DictionaryPair
        qualifiedName: CardBattle.Core.Collections.DictionaryPair
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T0
        nameWithType: T0
        qualifiedName: T0
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: CardBattle.Core.Collections.DictionaryPair`2
        name: DictionaryPair
        nameWithType: DictionaryPair
        qualifiedName: CardBattle.Core.Collections.DictionaryPair
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T0
        nameWithType: T0
        qualifiedName: T0
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: CardBattle.Core.Collections.DictionaryPair`2
    parent: CardBattle.Core.Collections
    commentId: T:CardBattle.Core.Collections.DictionaryPair{`0,`1}
  CardBattle.Core.Collections.Dictionary`2.GetDictionaryPair*:
    name:
      CSharp:
      - id: CardBattle.Core.Collections.Dictionary`2.GetDictionaryPair*
        name: GetDictionaryPair
        nameWithType: Dictionary<T0, T1>.GetDictionaryPair
        qualifiedName: CardBattle.Core.Collections.Dictionary<T0, T1>.GetDictionaryPair
      VB:
      - id: CardBattle.Core.Collections.Dictionary`2.GetDictionaryPair*
        name: GetDictionaryPair
        nameWithType: Dictionary(Of T0, T1).GetDictionaryPair
        qualifiedName: CardBattle.Core.Collections.Dictionary(Of T0, T1).GetDictionaryPair
    isDefinition: true
    commentId: Overload:CardBattle.Core.Collections.Dictionary`2.GetDictionaryPair
  CardBattle.Core.Collections.Dictionary`2.Add*:
    name:
      CSharp:
      - id: CardBattle.Core.Collections.Dictionary`2.Add*
        name: Add
        nameWithType: Dictionary<T0, T1>.Add
        qualifiedName: CardBattle.Core.Collections.Dictionary<T0, T1>.Add
      VB:
      - id: CardBattle.Core.Collections.Dictionary`2.Add*
        name: Add
        nameWithType: Dictionary(Of T0, T1).Add
        qualifiedName: CardBattle.Core.Collections.Dictionary(Of T0, T1).Add
    isDefinition: true
    commentId: Overload:CardBattle.Core.Collections.Dictionary`2.Add
  CardBattle.Core.Collections.Dictionary`2:
    name:
      CSharp:
      - id: CardBattle.Core.Collections.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: CardBattle.Core.Collections.Dictionary
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T0
        nameWithType: T0
        qualifiedName: T0
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: CardBattle.Core.Collections.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: CardBattle.Core.Collections.Dictionary
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T0
        nameWithType: T0
        qualifiedName: T0
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: T1
        nameWithType: T1
        qualifiedName: T1
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:CardBattle.Core.Collections.Dictionary`2
  System.SerializableAttribute:
    name:
      CSharp:
      - id: System.SerializableAttribute
        name: SerializableAttribute
        nameWithType: SerializableAttribute
        qualifiedName: System.SerializableAttribute
        isExternal: true
      VB:
      - id: System.SerializableAttribute
        name: SerializableAttribute
        nameWithType: SerializableAttribute
        qualifiedName: System.SerializableAttribute
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.SerializableAttribute
  System.SerializableAttribute.#ctor:
    name:
      CSharp:
      - id: System.SerializableAttribute.#ctor
        name: SerializableAttribute
        nameWithType: SerializableAttribute.SerializableAttribute
        qualifiedName: System.SerializableAttribute.SerializableAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.SerializableAttribute.#ctor
        name: SerializableAttribute
        nameWithType: SerializableAttribute.SerializableAttribute
        qualifiedName: System.SerializableAttribute.SerializableAttribute
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.SerializableAttribute
    commentId: M:System.SerializableAttribute.#ctor
  Vector2:
    name:
      CSharp:
      - id: Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Vector2
        isExternal: true
      VB:
      - id: Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Vector2
        isExternal: true
    isDefinition: true
  CardBattle.Core.Controls.ControlMapping.GetAxis*:
    name:
      CSharp:
      - id: CardBattle.Core.Controls.ControlMapping.GetAxis*
        name: GetAxis
        nameWithType: ControlMapping.GetAxis
        qualifiedName: CardBattle.Core.Controls.ControlMapping.GetAxis
      VB:
      - id: CardBattle.Core.Controls.ControlMapping.GetAxis*
        name: GetAxis
        nameWithType: ControlMapping.GetAxis
        qualifiedName: CardBattle.Core.Controls.ControlMapping.GetAxis
    isDefinition: true
    commentId: Overload:CardBattle.Core.Controls.ControlMapping.GetAxis
  CardBattle.Core.Controls.ControlMapping.ZoomAxis*:
    name:
      CSharp:
      - id: CardBattle.Core.Controls.ControlMapping.ZoomAxis*
        name: ZoomAxis
        nameWithType: ControlMapping.ZoomAxis
        qualifiedName: CardBattle.Core.Controls.ControlMapping.ZoomAxis
      VB:
      - id: CardBattle.Core.Controls.ControlMapping.ZoomAxis*
        name: ZoomAxis
        nameWithType: ControlMapping.ZoomAxis
        qualifiedName: CardBattle.Core.Controls.ControlMapping.ZoomAxis
    isDefinition: true
    commentId: Overload:CardBattle.Core.Controls.ControlMapping.ZoomAxis
  System.Nullable`1:
    name:
      CSharp:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: T
        nameWithType: T
        qualifiedName: T
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Nullable`1
  System.Nullable{KeyCode}:
    name:
      CSharp:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: KeyCode
        name: KeyCode
        nameWithType: KeyCode
        qualifiedName: KeyCode
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Nullable`1
        name: Nullable
        nameWithType: Nullable
        qualifiedName: System.Nullable
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: KeyCode
        name: KeyCode
        nameWithType: KeyCode
        qualifiedName: KeyCode
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Nullable`1
    parent: System
    commentId: T:System.Nullable{KeyCode}
  KeyCode[]:
    name:
      CSharp:
      - id: KeyCode
        name: KeyCode
        nameWithType: KeyCode
        qualifiedName: KeyCode
        isExternal: true
      - name: '[]'
        nameWithType: '[]'
        qualifiedName: '[]'
      VB:
      - id: KeyCode
        name: KeyCode
        nameWithType: KeyCode
        qualifiedName: KeyCode
        isExternal: true
      - name: ()
        nameWithType: ()
        qualifiedName: ()
    isDefinition: false
  CardBattle.Core.Controls.ControlMapping.Zoom02*:
    name:
      CSharp:
      - id: CardBattle.Core.Controls.ControlMapping.Zoom02*
        name: Zoom02
        nameWithType: ControlMapping.Zoom02
        qualifiedName: CardBattle.Core.Controls.ControlMapping.Zoom02
      VB:
      - id: CardBattle.Core.Controls.ControlMapping.Zoom02*
        name: Zoom02
        nameWithType: ControlMapping.Zoom02
        qualifiedName: CardBattle.Core.Controls.ControlMapping.Zoom02
    isDefinition: true
    commentId: Overload:CardBattle.Core.Controls.ControlMapping.Zoom02
  KeyCode:
    name:
      CSharp:
      - id: KeyCode
        name: KeyCode
        nameWithType: KeyCode
        qualifiedName: KeyCode
        isExternal: true
      VB:
      - id: KeyCode
        name: KeyCode
        nameWithType: KeyCode
        qualifiedName: KeyCode
        isExternal: true
    isDefinition: true
    commentId: '!:KeyCode'
  CardBattle.Core.Controls.ControlMapping.UnitAction*:
    name:
      CSharp:
      - id: CardBattle.Core.Controls.ControlMapping.UnitAction*
        name: UnitAction
        nameWithType: ControlMapping.UnitAction
        qualifiedName: CardBattle.Core.Controls.ControlMapping.UnitAction
      VB:
      - id: CardBattle.Core.Controls.ControlMapping.UnitAction*
        name: UnitAction
        nameWithType: ControlMapping.UnitAction
        qualifiedName: CardBattle.Core.Controls.ControlMapping.UnitAction
    isDefinition: true
    commentId: Overload:CardBattle.Core.Controls.ControlMapping.UnitAction
  CardBattle.Core.Controls.ControlMapping.ScrollSensivity*:
    name:
      CSharp:
      - id: CardBattle.Core.Controls.ControlMapping.ScrollSensivity*
        name: ScrollSensivity
        nameWithType: ControlMapping.ScrollSensivity
        qualifiedName: CardBattle.Core.Controls.ControlMapping.ScrollSensivity
      VB:
      - id: CardBattle.Core.Controls.ControlMapping.ScrollSensivity*
        name: ScrollSensivity
        nameWithType: ControlMapping.ScrollSensivity
        qualifiedName: CardBattle.Core.Controls.ControlMapping.ScrollSensivity
    isDefinition: true
    commentId: Overload:CardBattle.Core.Controls.ControlMapping.ScrollSensivity
  System.Single:
    name:
      CSharp:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
      VB:
      - id: System.Single
        name: Single
        nameWithType: Single
        qualifiedName: System.Single
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Single
  CardBattle.Core.Controls.ControlMapping.Zoom*:
    name:
      CSharp:
      - id: CardBattle.Core.Controls.ControlMapping.Zoom*
        name: Zoom
        nameWithType: ControlMapping.Zoom
        qualifiedName: CardBattle.Core.Controls.ControlMapping.Zoom
      VB:
      - id: CardBattle.Core.Controls.ControlMapping.Zoom*
        name: Zoom
        nameWithType: ControlMapping.Zoom
        qualifiedName: CardBattle.Core.Controls.ControlMapping.Zoom
    isDefinition: true
    commentId: Overload:CardBattle.Core.Controls.ControlMapping.Zoom
  CardBattle.Core.Controls:
    name:
      CSharp:
      - name: CardBattle.Core.Controls
        nameWithType: CardBattle.Core.Controls
        qualifiedName: CardBattle.Core.Controls
      VB:
      - name: CardBattle.Core.Controls
        nameWithType: CardBattle.Core.Controls
        qualifiedName: CardBattle.Core.Controls
    isDefinition: true
    commentId: N:CardBattle.Core.Controls
  CardBattle.Core.Controls.ControlMapping.UNIT_MODE:
    name:
      CSharp:
      - id: CardBattle.Core.Controls.ControlMapping.UNIT_MODE
        name: ControlMapping.UNIT_MODE
        nameWithType: ControlMapping.UNIT_MODE
        qualifiedName: CardBattle.Core.Controls.ControlMapping.UNIT_MODE
      VB:
      - id: CardBattle.Core.Controls.ControlMapping.UNIT_MODE
        name: ControlMapping.UNIT_MODE
        nameWithType: ControlMapping.UNIT_MODE
        qualifiedName: CardBattle.Core.Controls.ControlMapping.UNIT_MODE
    isDefinition: true
    parent: CardBattle.Core.Controls
    commentId: T:CardBattle.Core.Controls.ControlMapping.UNIT_MODE
  CardBattle.Core.Controls.ControlMapping.GetUnitMode*:
    name:
      CSharp:
      - id: CardBattle.Core.Controls.ControlMapping.GetUnitMode*
        name: GetUnitMode
        nameWithType: ControlMapping.GetUnitMode
        qualifiedName: CardBattle.Core.Controls.ControlMapping.GetUnitMode
      VB:
      - id: CardBattle.Core.Controls.ControlMapping.GetUnitMode*
        name: GetUnitMode
        nameWithType: ControlMapping.GetUnitMode
        qualifiedName: CardBattle.Core.Controls.ControlMapping.GetUnitMode
    isDefinition: true
    commentId: Overload:CardBattle.Core.Controls.ControlMapping.GetUnitMode
  CardBattle.Core.Controls.ControlMapping:
    name:
      CSharp:
      - id: CardBattle.Core.Controls.ControlMapping
        name: ControlMapping
        nameWithType: ControlMapping
        qualifiedName: CardBattle.Core.Controls.ControlMapping
      VB:
      - id: CardBattle.Core.Controls.ControlMapping
        name: ControlMapping
        nameWithType: ControlMapping
        qualifiedName: CardBattle.Core.Controls.ControlMapping
    isDefinition: true
    commentId: T:CardBattle.Core.Controls.ControlMapping
  HexagonalFieldController:
    name:
      CSharp:
      - id: HexagonalFieldController
        name: HexagonalFieldController
        nameWithType: HexagonalFieldController
        qualifiedName: HexagonalFieldController
        isExternal: true
      VB:
      - id: HexagonalFieldController
        name: HexagonalFieldController
        nameWithType: HexagonalFieldController
        qualifiedName: HexagonalFieldController
        isExternal: true
    isDefinition: true
    commentId: '!:HexagonalFieldController'
  CardBattle.Core.Elements.HexagonalField.AxialCoordinates*:
    name:
      CSharp:
      - id: CardBattle.Core.Elements.HexagonalField.AxialCoordinates*
        name: AxialCoordinates
        nameWithType: HexagonalField.AxialCoordinates
        qualifiedName: CardBattle.Core.Elements.HexagonalField.AxialCoordinates
      VB:
      - id: CardBattle.Core.Elements.HexagonalField.AxialCoordinates*
        name: AxialCoordinates
        nameWithType: HexagonalField.AxialCoordinates
        qualifiedName: CardBattle.Core.Elements.HexagonalField.AxialCoordinates
    isDefinition: true
    commentId: Overload:CardBattle.Core.Elements.HexagonalField.AxialCoordinates
  Vector3:
    name:
      CSharp:
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
      VB:
      - id: Vector3
        name: Vector3
        nameWithType: Vector3
        qualifiedName: Vector3
        isExternal: true
    isDefinition: true
  CardBattle.Core.Elements.HexagonalField.CubeCoordinates*:
    name:
      CSharp:
      - id: CardBattle.Core.Elements.HexagonalField.CubeCoordinates*
        name: CubeCoordinates
        nameWithType: HexagonalField.CubeCoordinates
        qualifiedName: CardBattle.Core.Elements.HexagonalField.CubeCoordinates
      VB:
      - id: CardBattle.Core.Elements.HexagonalField.CubeCoordinates*
        name: CubeCoordinates
        nameWithType: HexagonalField.CubeCoordinates
        qualifiedName: CardBattle.Core.Elements.HexagonalField.CubeCoordinates
    isDefinition: true
    commentId: Overload:CardBattle.Core.Elements.HexagonalField.CubeCoordinates
  CardBattle.Core.Elements.HexagonalField.Coordinates*:
    name:
      CSharp:
      - id: CardBattle.Core.Elements.HexagonalField.Coordinates*
        name: Coordinates
        nameWithType: HexagonalField.Coordinates
        qualifiedName: CardBattle.Core.Elements.HexagonalField.Coordinates
      VB:
      - id: CardBattle.Core.Elements.HexagonalField.Coordinates*
        name: Coordinates
        nameWithType: HexagonalField.Coordinates
        qualifiedName: CardBattle.Core.Elements.HexagonalField.Coordinates
    isDefinition: true
    commentId: Overload:CardBattle.Core.Elements.HexagonalField.Coordinates
  MapGeneration:
    name:
      CSharp:
      - id: MapGeneration
        name: MapGeneration
        nameWithType: MapGeneration
        qualifiedName: MapGeneration
        isExternal: true
      VB:
      - id: MapGeneration
        name: MapGeneration
        nameWithType: MapGeneration
        qualifiedName: MapGeneration
        isExternal: true
    isDefinition: true
  CardBattle.Core.Elements.HexagonalField.IndexedBy*:
    name:
      CSharp:
      - id: CardBattle.Core.Elements.HexagonalField.IndexedBy*
        name: IndexedBy
        nameWithType: HexagonalField.IndexedBy
        qualifiedName: CardBattle.Core.Elements.HexagonalField.IndexedBy
      VB:
      - id: CardBattle.Core.Elements.HexagonalField.IndexedBy*
        name: IndexedBy
        nameWithType: HexagonalField.IndexedBy
        qualifiedName: CardBattle.Core.Elements.HexagonalField.IndexedBy
    isDefinition: true
    commentId: Overload:CardBattle.Core.Elements.HexagonalField.IndexedBy
  CardBattle.Core.Elements:
    name:
      CSharp:
      - name: CardBattle.Core.Elements
        nameWithType: CardBattle.Core.Elements
        qualifiedName: CardBattle.Core.Elements
      VB:
      - name: CardBattle.Core.Elements
        nameWithType: CardBattle.Core.Elements
        qualifiedName: CardBattle.Core.Elements
    isDefinition: true
    commentId: N:CardBattle.Core.Elements
  CardBattle.Core.Elements.HexagonalField:
    name:
      CSharp:
      - id: CardBattle.Core.Elements.HexagonalField
        name: HexagonalField
        nameWithType: HexagonalField
        qualifiedName: CardBattle.Core.Elements.HexagonalField
      VB:
      - id: CardBattle.Core.Elements.HexagonalField
        name: HexagonalField
        nameWithType: HexagonalField
        qualifiedName: CardBattle.Core.Elements.HexagonalField
    isDefinition: true
    parent: CardBattle.Core.Elements
    commentId: T:CardBattle.Core.Elements.HexagonalField
  CardBattle.Core.Elements.HexagonalField.Item*:
    name:
      CSharp:
      - id: CardBattle.Core.Elements.HexagonalField.Item*
        name: Item
        nameWithType: HexagonalField.Item
        qualifiedName: CardBattle.Core.Elements.HexagonalField.Item
      VB:
      - id: CardBattle.Core.Elements.HexagonalField.Item*
        name: Item
        nameWithType: HexagonalField.Item
        qualifiedName: CardBattle.Core.Elements.HexagonalField.Item
    isDefinition: true
    commentId: Overload:CardBattle.Core.Elements.HexagonalField.Item
  CardBattle.Core.Elements.HexagonalField.Initialize*:
    name:
      CSharp:
      - id: CardBattle.Core.Elements.HexagonalField.Initialize*
        name: Initialize
        nameWithType: HexagonalField.Initialize
        qualifiedName: CardBattle.Core.Elements.HexagonalField.Initialize
      VB:
      - id: CardBattle.Core.Elements.HexagonalField.Initialize*
        name: Initialize
        nameWithType: HexagonalField.Initialize
        qualifiedName: CardBattle.Core.Elements.HexagonalField.Initialize
    isDefinition: true
    commentId: Overload:CardBattle.Core.Elements.HexagonalField.Initialize
  CardBattle.Core.Elements.HexagonalField.GetNeighbors*:
    name:
      CSharp:
      - id: CardBattle.Core.Elements.HexagonalField.GetNeighbors*
        name: GetNeighbors
        nameWithType: HexagonalField.GetNeighbors
        qualifiedName: CardBattle.Core.Elements.HexagonalField.GetNeighbors
      VB:
      - id: CardBattle.Core.Elements.HexagonalField.GetNeighbors*
        name: GetNeighbors
        nameWithType: HexagonalField.GetNeighbors
        qualifiedName: CardBattle.Core.Elements.HexagonalField.GetNeighbors
    isDefinition: true
    commentId: Overload:CardBattle.Core.Elements.HexagonalField.GetNeighbors
  System.Collections.Generic.List{CardBattle.Core.Generation.Biome}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: CardBattle.Core.Generation.Biome
        name: Biome
        nameWithType: Biome
        qualifiedName: CardBattle.Core.Generation.Biome
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: CardBattle.Core.Generation.Biome
        name: Biome
        nameWithType: Biome
        qualifiedName: CardBattle.Core.Generation.Biome
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{CardBattle.Core.Generation.Biome}
  Material:
    name:
      CSharp:
      - id: Material
        name: Material
        nameWithType: Material
        qualifiedName: Material
        isExternal: true
      VB:
      - id: Material
        name: Material
        nameWithType: Material
        qualifiedName: Material
        isExternal: true
    isDefinition: true
  CardBattle.Core.Generation.Biome.Material*:
    name:
      CSharp:
      - id: CardBattle.Core.Generation.Biome.Material*
        name: Material
        nameWithType: Biome.Material
        qualifiedName: CardBattle.Core.Generation.Biome.Material
      VB:
      - id: CardBattle.Core.Generation.Biome.Material*
        name: Material
        nameWithType: Biome.Material
        qualifiedName: CardBattle.Core.Generation.Biome.Material
    isDefinition: true
    commentId: Overload:CardBattle.Core.Generation.Biome.Material
  CardBattle.Core.Generation.Biome.Name*:
    name:
      CSharp:
      - id: CardBattle.Core.Generation.Biome.Name*
        name: Name
        nameWithType: Biome.Name
        qualifiedName: CardBattle.Core.Generation.Biome.Name
      VB:
      - id: CardBattle.Core.Generation.Biome.Name*
        name: Name
        nameWithType: Biome.Name
        qualifiedName: CardBattle.Core.Generation.Biome.Name
    isDefinition: true
    commentId: Overload:CardBattle.Core.Generation.Biome.Name
  CardBattle.Core.Generation.Biome.HeightMultiplier*:
    name:
      CSharp:
      - id: CardBattle.Core.Generation.Biome.HeightMultiplier*
        name: HeightMultiplier
        nameWithType: Biome.HeightMultiplier
        qualifiedName: CardBattle.Core.Generation.Biome.HeightMultiplier
      VB:
      - id: CardBattle.Core.Generation.Biome.HeightMultiplier*
        name: HeightMultiplier
        nameWithType: Biome.HeightMultiplier
        qualifiedName: CardBattle.Core.Generation.Biome.HeightMultiplier
    isDefinition: true
    commentId: Overload:CardBattle.Core.Generation.Biome.HeightMultiplier
  CardBattle.Core.Generation.Biome.#ctor*:
    name:
      CSharp:
      - id: CardBattle.Core.Generation.Biome.#ctor*
        name: Biome
        nameWithType: Biome.Biome
        qualifiedName: CardBattle.Core.Generation.Biome.Biome
      VB:
      - id: CardBattle.Core.Generation.Biome.#ctor*
        name: Biome
        nameWithType: Biome.Biome
        qualifiedName: CardBattle.Core.Generation.Biome.Biome
    isDefinition: true
    commentId: Overload:CardBattle.Core.Generation.Biome.#ctor
  CardBattle.Core.Generation.Biome:
    name:
      CSharp:
      - id: CardBattle.Core.Generation.Biome
        name: Biome
        nameWithType: Biome
        qualifiedName: CardBattle.Core.Generation.Biome
      VB:
      - id: CardBattle.Core.Generation.Biome
        name: Biome
        nameWithType: Biome
        qualifiedName: CardBattle.Core.Generation.Biome
    isDefinition: true
    commentId: T:CardBattle.Core.Generation.Biome
  CardBattle.Core.Generation:
    name:
      CSharp:
      - name: CardBattle.Core.Generation
        nameWithType: CardBattle.Core.Generation
        qualifiedName: CardBattle.Core.Generation
      VB:
      - name: CardBattle.Core.Generation
        nameWithType: CardBattle.Core.Generation
        qualifiedName: CardBattle.Core.Generation
    isDefinition: true
    commentId: N:CardBattle.Core.Generation
  CardBattle.Core.Players.Debt.Amount*:
    name:
      CSharp:
      - id: CardBattle.Core.Players.Debt.Amount*
        name: Amount
        nameWithType: Debt.Amount
        qualifiedName: CardBattle.Core.Players.Debt.Amount
      VB:
      - id: CardBattle.Core.Players.Debt.Amount*
        name: Amount
        nameWithType: Debt.Amount
        qualifiedName: CardBattle.Core.Players.Debt.Amount
    isDefinition: true
    commentId: Overload:CardBattle.Core.Players.Debt.Amount
  CardBattle.Core.Players.Debt.Time*:
    name:
      CSharp:
      - id: CardBattle.Core.Players.Debt.Time*
        name: Time
        nameWithType: Debt.Time
        qualifiedName: CardBattle.Core.Players.Debt.Time
      VB:
      - id: CardBattle.Core.Players.Debt.Time*
        name: Time
        nameWithType: Debt.Time
        qualifiedName: CardBattle.Core.Players.Debt.Time
    isDefinition: true
    commentId: Overload:CardBattle.Core.Players.Debt.Time
  CardBattle.Core.Players:
    name:
      CSharp:
      - name: CardBattle.Core.Players
        nameWithType: CardBattle.Core.Players
        qualifiedName: CardBattle.Core.Players
      VB:
      - name: CardBattle.Core.Players
        nameWithType: CardBattle.Core.Players
        qualifiedName: CardBattle.Core.Players
    isDefinition: true
    commentId: N:CardBattle.Core.Players
  CardBattle.Core.Players.PlayerStats:
    name:
      CSharp:
      - id: CardBattle.Core.Players.PlayerStats
        name: PlayerStats
        nameWithType: PlayerStats
        qualifiedName: CardBattle.Core.Players.PlayerStats
      VB:
      - id: CardBattle.Core.Players.PlayerStats
        name: PlayerStats
        nameWithType: PlayerStats
        qualifiedName: CardBattle.Core.Players.PlayerStats
    isDefinition: true
    parent: CardBattle.Core.Players
    commentId: T:CardBattle.Core.Players.PlayerStats
  CardBattle.Core.Players.Debt.Creditor*:
    name:
      CSharp:
      - id: CardBattle.Core.Players.Debt.Creditor*
        name: Creditor
        nameWithType: Debt.Creditor
        qualifiedName: CardBattle.Core.Players.Debt.Creditor
      VB:
      - id: CardBattle.Core.Players.Debt.Creditor*
        name: Creditor
        nameWithType: Debt.Creditor
        qualifiedName: CardBattle.Core.Players.Debt.Creditor
    isDefinition: true
    commentId: Overload:CardBattle.Core.Players.Debt.Creditor
  CardBattle.Core.Players.Debt.Debtor*:
    name:
      CSharp:
      - id: CardBattle.Core.Players.Debt.Debtor*
        name: Debtor
        nameWithType: Debt.Debtor
        qualifiedName: CardBattle.Core.Players.Debt.Debtor
      VB:
      - id: CardBattle.Core.Players.Debt.Debtor*
        name: Debtor
        nameWithType: Debt.Debtor
        qualifiedName: CardBattle.Core.Players.Debt.Debtor
    isDefinition: true
    commentId: Overload:CardBattle.Core.Players.Debt.Debtor
  CardBattle.Core.Players.Debt.#ctor*:
    name:
      CSharp:
      - id: CardBattle.Core.Players.Debt.#ctor*
        name: Debt
        nameWithType: Debt.Debt
        qualifiedName: CardBattle.Core.Players.Debt.Debt
      VB:
      - id: CardBattle.Core.Players.Debt.#ctor*
        name: Debt
        nameWithType: Debt.Debt
        qualifiedName: CardBattle.Core.Players.Debt.Debt
    isDefinition: true
    commentId: Overload:CardBattle.Core.Players.Debt.#ctor
  CardBattle.Core.Players.Debt.UpdateTime*:
    name:
      CSharp:
      - id: CardBattle.Core.Players.Debt.UpdateTime*
        name: UpdateTime
        nameWithType: Debt.UpdateTime
        qualifiedName: CardBattle.Core.Players.Debt.UpdateTime
      VB:
      - id: CardBattle.Core.Players.Debt.UpdateTime*
        name: UpdateTime
        nameWithType: Debt.UpdateTime
        qualifiedName: CardBattle.Core.Players.Debt.UpdateTime
    isDefinition: true
    commentId: Overload:CardBattle.Core.Players.Debt.UpdateTime
  CardBattle.Core.Players.Debt.AddDebt*:
    name:
      CSharp:
      - id: CardBattle.Core.Players.Debt.AddDebt*
        name: AddDebt
        nameWithType: Debt.AddDebt
        qualifiedName: CardBattle.Core.Players.Debt.AddDebt
      VB:
      - id: CardBattle.Core.Players.Debt.AddDebt*
        name: AddDebt
        nameWithType: Debt.AddDebt
        qualifiedName: CardBattle.Core.Players.Debt.AddDebt
    isDefinition: true
    commentId: Overload:CardBattle.Core.Players.Debt.AddDebt
  CardBattle.Core.Players.Debt.PayDebt*:
    name:
      CSharp:
      - id: CardBattle.Core.Players.Debt.PayDebt*
        name: PayDebt
        nameWithType: Debt.PayDebt
        qualifiedName: CardBattle.Core.Players.Debt.PayDebt
      VB:
      - id: CardBattle.Core.Players.Debt.PayDebt*
        name: PayDebt
        nameWithType: Debt.PayDebt
        qualifiedName: CardBattle.Core.Players.Debt.PayDebt
    isDefinition: true
    commentId: Overload:CardBattle.Core.Players.Debt.PayDebt
  CardBattle.Core.Players.Debt:
    name:
      CSharp:
      - id: CardBattle.Core.Players.Debt
        name: Debt
        nameWithType: Debt
        qualifiedName: CardBattle.Core.Players.Debt
      VB:
      - id: CardBattle.Core.Players.Debt
        name: Debt
        nameWithType: Debt
        qualifiedName: CardBattle.Core.Players.Debt
    isDefinition: true
    commentId: T:CardBattle.Core.Players.Debt
  CardBattle.Core.Players.IPlayerStats.Money*:
    name:
      CSharp:
      - id: CardBattle.Core.Players.IPlayerStats.Money*
        name: Money
        nameWithType: IPlayerStats.Money
        qualifiedName: CardBattle.Core.Players.IPlayerStats.Money
      VB:
      - id: CardBattle.Core.Players.IPlayerStats.Money*
        name: Money
        nameWithType: IPlayerStats.Money
        qualifiedName: CardBattle.Core.Players.IPlayerStats.Money
    isDefinition: true
    commentId: Overload:CardBattle.Core.Players.IPlayerStats.Money
  System.Collections.Generic.List{CardBattle.Core.Players.Debt}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: CardBattle.Core.Players.Debt
        name: Debt
        nameWithType: Debt
        qualifiedName: CardBattle.Core.Players.Debt
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: CardBattle.Core.Players.Debt
        name: Debt
        nameWithType: Debt
        qualifiedName: CardBattle.Core.Players.Debt
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{CardBattle.Core.Players.Debt}
  CardBattle.Core.Players.IPlayerStats.Debts*:
    name:
      CSharp:
      - id: CardBattle.Core.Players.IPlayerStats.Debts*
        name: Debts
        nameWithType: IPlayerStats.Debts
        qualifiedName: CardBattle.Core.Players.IPlayerStats.Debts
      VB:
      - id: CardBattle.Core.Players.IPlayerStats.Debts*
        name: Debts
        nameWithType: IPlayerStats.Debts
        qualifiedName: CardBattle.Core.Players.IPlayerStats.Debts
    isDefinition: true
    commentId: Overload:CardBattle.Core.Players.IPlayerStats.Debts
  CardBattle.Core.Players.IPlayerStats.VillageCount*:
    name:
      CSharp:
      - id: CardBattle.Core.Players.IPlayerStats.VillageCount*
        name: VillageCount
        nameWithType: IPlayerStats.VillageCount
        qualifiedName: CardBattle.Core.Players.IPlayerStats.VillageCount
      VB:
      - id: CardBattle.Core.Players.IPlayerStats.VillageCount*
        name: VillageCount
        nameWithType: IPlayerStats.VillageCount
        qualifiedName: CardBattle.Core.Players.IPlayerStats.VillageCount
    isDefinition: true
    commentId: Overload:CardBattle.Core.Players.IPlayerStats.VillageCount
  CardBattle.Core.Players.IPlayerStats.TownCount*:
    name:
      CSharp:
      - id: CardBattle.Core.Players.IPlayerStats.TownCount*
        name: TownCount
        nameWithType: IPlayerStats.TownCount
        qualifiedName: CardBattle.Core.Players.IPlayerStats.TownCount
      VB:
      - id: CardBattle.Core.Players.IPlayerStats.TownCount*
        name: TownCount
        nameWithType: IPlayerStats.TownCount
        qualifiedName: CardBattle.Core.Players.IPlayerStats.TownCount
    isDefinition: true
    commentId: Overload:CardBattle.Core.Players.IPlayerStats.TownCount
  CardBattle.Core.Players.IPlayerStats:
    name:
      CSharp:
      - id: CardBattle.Core.Players.IPlayerStats
        name: IPlayerStats
        nameWithType: IPlayerStats
        qualifiedName: CardBattle.Core.Players.IPlayerStats
      VB:
      - id: CardBattle.Core.Players.IPlayerStats
        name: IPlayerStats
        nameWithType: IPlayerStats
        qualifiedName: CardBattle.Core.Players.IPlayerStats
    isDefinition: true
    parent: CardBattle.Core.Players
    commentId: T:CardBattle.Core.Players.IPlayerStats
  CardBattle.Core.Players.PlayerStats.debts:
    name:
      CSharp:
      - id: CardBattle.Core.Players.PlayerStats.debts
        name: debts
        nameWithType: PlayerStats.debts
        qualifiedName: CardBattle.Core.Players.PlayerStats.debts
      VB:
      - id: CardBattle.Core.Players.PlayerStats.debts
        name: debts
        nameWithType: PlayerStats.debts
        qualifiedName: CardBattle.Core.Players.PlayerStats.debts
    isDefinition: true
    parent: CardBattle.Core.Players.PlayerStats
    commentId: F:CardBattle.Core.Players.PlayerStats.debts
  CardBattle.Core.Players.PlayerStats.revenue:
    name:
      CSharp:
      - id: CardBattle.Core.Players.PlayerStats.revenue
        name: revenue
        nameWithType: PlayerStats.revenue
        qualifiedName: CardBattle.Core.Players.PlayerStats.revenue
      VB:
      - id: CardBattle.Core.Players.PlayerStats.revenue
        name: revenue
        nameWithType: PlayerStats.revenue
        qualifiedName: CardBattle.Core.Players.PlayerStats.revenue
    isDefinition: true
    parent: CardBattle.Core.Players.PlayerStats
    commentId: F:CardBattle.Core.Players.PlayerStats.revenue
  CardBattle.Core.Players.PlayerStats.Money:
    name:
      CSharp:
      - id: CardBattle.Core.Players.PlayerStats.Money
        name: Money
        nameWithType: PlayerStats.Money
        qualifiedName: CardBattle.Core.Players.PlayerStats.Money
      VB:
      - id: CardBattle.Core.Players.PlayerStats.Money
        name: Money
        nameWithType: PlayerStats.Money
        qualifiedName: CardBattle.Core.Players.PlayerStats.Money
    isDefinition: true
    parent: CardBattle.Core.Players.PlayerStats
    commentId: P:CardBattle.Core.Players.PlayerStats.Money
  CardBattle.Core.Players.PlayerStats.Debts:
    name:
      CSharp:
      - id: CardBattle.Core.Players.PlayerStats.Debts
        name: Debts
        nameWithType: PlayerStats.Debts
        qualifiedName: CardBattle.Core.Players.PlayerStats.Debts
      VB:
      - id: CardBattle.Core.Players.PlayerStats.Debts
        name: Debts
        nameWithType: PlayerStats.Debts
        qualifiedName: CardBattle.Core.Players.PlayerStats.Debts
    isDefinition: true
    parent: CardBattle.Core.Players.PlayerStats
    commentId: P:CardBattle.Core.Players.PlayerStats.Debts
  CardBattle.Core.Players.PlayerStats.VillageCount:
    name:
      CSharp:
      - id: CardBattle.Core.Players.PlayerStats.VillageCount
        name: VillageCount
        nameWithType: PlayerStats.VillageCount
        qualifiedName: CardBattle.Core.Players.PlayerStats.VillageCount
      VB:
      - id: CardBattle.Core.Players.PlayerStats.VillageCount
        name: VillageCount
        nameWithType: PlayerStats.VillageCount
        qualifiedName: CardBattle.Core.Players.PlayerStats.VillageCount
    isDefinition: true
    parent: CardBattle.Core.Players.PlayerStats
    commentId: P:CardBattle.Core.Players.PlayerStats.VillageCount
  CardBattle.Core.Players.PlayerStats.TownCount:
    name:
      CSharp:
      - id: CardBattle.Core.Players.PlayerStats.TownCount
        name: TownCount
        nameWithType: PlayerStats.TownCount
        qualifiedName: CardBattle.Core.Players.PlayerStats.TownCount
      VB:
      - id: CardBattle.Core.Players.PlayerStats.TownCount
        name: TownCount
        nameWithType: PlayerStats.TownCount
        qualifiedName: CardBattle.Core.Players.PlayerStats.TownCount
    isDefinition: true
    parent: CardBattle.Core.Players.PlayerStats
    commentId: P:CardBattle.Core.Players.PlayerStats.TownCount
  CardBattle.Core.Players.Player.PlayerIndex*:
    name:
      CSharp:
      - id: CardBattle.Core.Players.Player.PlayerIndex*
        name: PlayerIndex
        nameWithType: Player.PlayerIndex
        qualifiedName: CardBattle.Core.Players.Player.PlayerIndex
      VB:
      - id: CardBattle.Core.Players.Player.PlayerIndex*
        name: PlayerIndex
        nameWithType: Player.PlayerIndex
        qualifiedName: CardBattle.Core.Players.Player.PlayerIndex
    isDefinition: true
    commentId: Overload:CardBattle.Core.Players.Player.PlayerIndex
  Photon.Realtime.Player:
    name:
      CSharp:
      - id: Photon.Realtime.Player
        name: Photon.Realtime.Player
        nameWithType: Photon.Realtime.Player
        qualifiedName: Photon.Realtime.Player
        isExternal: true
      VB:
      - id: Photon.Realtime.Player
        name: Photon.Realtime.Player
        nameWithType: Photon.Realtime.Player
        qualifiedName: Photon.Realtime.Player
        isExternal: true
    isDefinition: true
  CardBattle.Core.Players.Player.NetworkPlayer*:
    name:
      CSharp:
      - id: CardBattle.Core.Players.Player.NetworkPlayer*
        name: NetworkPlayer
        nameWithType: Player.NetworkPlayer
        qualifiedName: CardBattle.Core.Players.Player.NetworkPlayer
      VB:
      - id: CardBattle.Core.Players.Player.NetworkPlayer*
        name: NetworkPlayer
        nameWithType: Player.NetworkPlayer
        qualifiedName: CardBattle.Core.Players.Player.NetworkPlayer
    isDefinition: true
    commentId: Overload:CardBattle.Core.Players.Player.NetworkPlayer
  CardBattle.Core.Players.Player:
    name:
      CSharp:
      - id: CardBattle.Core.Players.Player
        name: Player
        nameWithType: Player
        qualifiedName: CardBattle.Core.Players.Player
      VB:
      - id: CardBattle.Core.Players.Player
        name: Player
        nameWithType: Player
        qualifiedName: CardBattle.Core.Players.Player
    isDefinition: true
    parent: CardBattle.Core.Players
    commentId: T:CardBattle.Core.Players.Player
  CardBattle.Core.Players.Player.AddComponentTo*:
    name:
      CSharp:
      - id: CardBattle.Core.Players.Player.AddComponentTo*
        name: AddComponentTo
        nameWithType: Player.AddComponentTo
        qualifiedName: CardBattle.Core.Players.Player.AddComponentTo
      VB:
      - id: CardBattle.Core.Players.Player.AddComponentTo*
        name: AddComponentTo
        nameWithType: Player.AddComponentTo
        qualifiedName: CardBattle.Core.Players.Player.AddComponentTo
    isDefinition: true
    commentId: Overload:CardBattle.Core.Players.Player.AddComponentTo
  CardBattle.Core.Players.Revenue:
    name:
      CSharp:
      - id: CardBattle.Core.Players.Revenue
        name: Revenue
        nameWithType: Revenue
        qualifiedName: CardBattle.Core.Players.Revenue
      VB:
      - id: CardBattle.Core.Players.Revenue
        name: Revenue
        nameWithType: Revenue
        qualifiedName: CardBattle.Core.Players.Revenue
    isDefinition: true
    parent: CardBattle.Core.Players
    commentId: T:CardBattle.Core.Players.Revenue
  CardBattle.Core.Players.PlayerStats.Money*:
    name:
      CSharp:
      - id: CardBattle.Core.Players.PlayerStats.Money*
        name: Money
        nameWithType: PlayerStats.Money
        qualifiedName: CardBattle.Core.Players.PlayerStats.Money
      VB:
      - id: CardBattle.Core.Players.PlayerStats.Money*
        name: Money
        nameWithType: PlayerStats.Money
        qualifiedName: CardBattle.Core.Players.PlayerStats.Money
    isDefinition: true
    commentId: Overload:CardBattle.Core.Players.PlayerStats.Money
  CardBattle.Core.Players.IPlayerStats.Money:
    name:
      CSharp:
      - id: CardBattle.Core.Players.IPlayerStats.Money
        name: Money
        nameWithType: IPlayerStats.Money
        qualifiedName: CardBattle.Core.Players.IPlayerStats.Money
      VB:
      - id: CardBattle.Core.Players.IPlayerStats.Money
        name: Money
        nameWithType: IPlayerStats.Money
        qualifiedName: CardBattle.Core.Players.IPlayerStats.Money
    isDefinition: true
    parent: CardBattle.Core.Players.IPlayerStats
    commentId: P:CardBattle.Core.Players.IPlayerStats.Money
  CardBattle.Core.Players.PlayerStats.Debts*:
    name:
      CSharp:
      - id: CardBattle.Core.Players.PlayerStats.Debts*
        name: Debts
        nameWithType: PlayerStats.Debts
        qualifiedName: CardBattle.Core.Players.PlayerStats.Debts
      VB:
      - id: CardBattle.Core.Players.PlayerStats.Debts*
        name: Debts
        nameWithType: PlayerStats.Debts
        qualifiedName: CardBattle.Core.Players.PlayerStats.Debts
    isDefinition: true
    commentId: Overload:CardBattle.Core.Players.PlayerStats.Debts
  CardBattle.Core.Players.IPlayerStats.Debts:
    name:
      CSharp:
      - id: CardBattle.Core.Players.IPlayerStats.Debts
        name: Debts
        nameWithType: IPlayerStats.Debts
        qualifiedName: CardBattle.Core.Players.IPlayerStats.Debts
      VB:
      - id: CardBattle.Core.Players.IPlayerStats.Debts
        name: Debts
        nameWithType: IPlayerStats.Debts
        qualifiedName: CardBattle.Core.Players.IPlayerStats.Debts
    isDefinition: true
    parent: CardBattle.Core.Players.IPlayerStats
    commentId: P:CardBattle.Core.Players.IPlayerStats.Debts
  CardBattle.Core.Players.PlayerStats.VillageCount*:
    name:
      CSharp:
      - id: CardBattle.Core.Players.PlayerStats.VillageCount*
        name: VillageCount
        nameWithType: PlayerStats.VillageCount
        qualifiedName: CardBattle.Core.Players.PlayerStats.VillageCount
      VB:
      - id: CardBattle.Core.Players.PlayerStats.VillageCount*
        name: VillageCount
        nameWithType: PlayerStats.VillageCount
        qualifiedName: CardBattle.Core.Players.PlayerStats.VillageCount
    isDefinition: true
    commentId: Overload:CardBattle.Core.Players.PlayerStats.VillageCount
  CardBattle.Core.Players.IPlayerStats.VillageCount:
    name:
      CSharp:
      - id: CardBattle.Core.Players.IPlayerStats.VillageCount
        name: VillageCount
        nameWithType: IPlayerStats.VillageCount
        qualifiedName: CardBattle.Core.Players.IPlayerStats.VillageCount
      VB:
      - id: CardBattle.Core.Players.IPlayerStats.VillageCount
        name: VillageCount
        nameWithType: IPlayerStats.VillageCount
        qualifiedName: CardBattle.Core.Players.IPlayerStats.VillageCount
    isDefinition: true
    parent: CardBattle.Core.Players.IPlayerStats
    commentId: P:CardBattle.Core.Players.IPlayerStats.VillageCount
  CardBattle.Core.Players.PlayerStats.TownCount*:
    name:
      CSharp:
      - id: CardBattle.Core.Players.PlayerStats.TownCount*
        name: TownCount
        nameWithType: PlayerStats.TownCount
        qualifiedName: CardBattle.Core.Players.PlayerStats.TownCount
      VB:
      - id: CardBattle.Core.Players.PlayerStats.TownCount*
        name: TownCount
        nameWithType: PlayerStats.TownCount
        qualifiedName: CardBattle.Core.Players.PlayerStats.TownCount
    isDefinition: true
    commentId: Overload:CardBattle.Core.Players.PlayerStats.TownCount
  CardBattle.Core.Players.IPlayerStats.TownCount:
    name:
      CSharp:
      - id: CardBattle.Core.Players.IPlayerStats.TownCount
        name: TownCount
        nameWithType: IPlayerStats.TownCount
        qualifiedName: CardBattle.Core.Players.IPlayerStats.TownCount
      VB:
      - id: CardBattle.Core.Players.IPlayerStats.TownCount
        name: TownCount
        nameWithType: IPlayerStats.TownCount
        qualifiedName: CardBattle.Core.Players.IPlayerStats.TownCount
    isDefinition: true
    parent: CardBattle.Core.Players.IPlayerStats
    commentId: P:CardBattle.Core.Players.IPlayerStats.TownCount
  System.Collections.Generic.Dictionary`2:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - name: TKey
        nameWithType: TKey
        qualifiedName: TKey
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - name: TValue
        nameWithType: TValue
        qualifiedName: TValue
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    commentId: T:System.Collections.Generic.Dictionary`2
  System.Collections.Generic.Dictionary{CardBattle.Core.Players.PlayerStats,System.Int32}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: CardBattle.Core.Players.PlayerStats
        name: PlayerStats
        nameWithType: PlayerStats
        qualifiedName: CardBattle.Core.Players.PlayerStats
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: CardBattle.Core.Players.PlayerStats
        name: PlayerStats
        nameWithType: PlayerStats
        qualifiedName: CardBattle.Core.Players.PlayerStats
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: System.Int32
        name: Int32
        nameWithType: Int32
        qualifiedName: System.Int32
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{CardBattle.Core.Players.PlayerStats,System.Int32}
  CardBattle.Core.Players.Revenue.Multiplier*:
    name:
      CSharp:
      - id: CardBattle.Core.Players.Revenue.Multiplier*
        name: Multiplier
        nameWithType: Revenue.Multiplier
        qualifiedName: CardBattle.Core.Players.Revenue.Multiplier
      VB:
      - id: CardBattle.Core.Players.Revenue.Multiplier*
        name: Multiplier
        nameWithType: Revenue.Multiplier
        qualifiedName: CardBattle.Core.Players.Revenue.Multiplier
    isDefinition: true
    commentId: Overload:CardBattle.Core.Players.Revenue.Multiplier
  CardBattle.Core.Players.Revenue.#ctor*:
    name:
      CSharp:
      - id: CardBattle.Core.Players.Revenue.#ctor*
        name: Revenue
        nameWithType: Revenue.Revenue
        qualifiedName: CardBattle.Core.Players.Revenue.Revenue
      VB:
      - id: CardBattle.Core.Players.Revenue.#ctor*
        name: Revenue
        nameWithType: Revenue.Revenue
        qualifiedName: CardBattle.Core.Players.Revenue.Revenue
    isDefinition: true
    commentId: Overload:CardBattle.Core.Players.Revenue.#ctor
  CardBattle.Core.Players.Revenue.DoubleMultiplier*:
    name:
      CSharp:
      - id: CardBattle.Core.Players.Revenue.DoubleMultiplier*
        name: DoubleMultiplier
        nameWithType: Revenue.DoubleMultiplier
        qualifiedName: CardBattle.Core.Players.Revenue.DoubleMultiplier
      VB:
      - id: CardBattle.Core.Players.Revenue.DoubleMultiplier*
        name: DoubleMultiplier
        nameWithType: Revenue.DoubleMultiplier
        qualifiedName: CardBattle.Core.Players.Revenue.DoubleMultiplier
    isDefinition: true
    commentId: Overload:CardBattle.Core.Players.Revenue.DoubleMultiplier
  CardBattle.Core.Players.Revenue.QuadrupleMultiplier*:
    name:
      CSharp:
      - id: CardBattle.Core.Players.Revenue.QuadrupleMultiplier*
        name: QuadrupleMultiplier
        nameWithType: Revenue.QuadrupleMultiplier
        qualifiedName: CardBattle.Core.Players.Revenue.QuadrupleMultiplier
      VB:
      - id: CardBattle.Core.Players.Revenue.QuadrupleMultiplier*
        name: QuadrupleMultiplier
        nameWithType: Revenue.QuadrupleMultiplier
        qualifiedName: CardBattle.Core.Players.Revenue.QuadrupleMultiplier
    isDefinition: true
    commentId: Overload:CardBattle.Core.Players.Revenue.QuadrupleMultiplier
  CardBattle.Core.Players.Revenue.ZeroMultiplier*:
    name:
      CSharp:
      - id: CardBattle.Core.Players.Revenue.ZeroMultiplier*
        name: ZeroMultiplier
        nameWithType: Revenue.ZeroMultiplier
        qualifiedName: CardBattle.Core.Players.Revenue.ZeroMultiplier
      VB:
      - id: CardBattle.Core.Players.Revenue.ZeroMultiplier*
        name: ZeroMultiplier
        nameWithType: Revenue.ZeroMultiplier
        qualifiedName: CardBattle.Core.Players.Revenue.ZeroMultiplier
    isDefinition: true
    commentId: Overload:CardBattle.Core.Players.Revenue.ZeroMultiplier
  CardBattle.Core.Players.Revenue.ResetMultiplier*:
    name:
      CSharp:
      - id: CardBattle.Core.Players.Revenue.ResetMultiplier*
        name: ResetMultiplier
        nameWithType: Revenue.ResetMultiplier
        qualifiedName: CardBattle.Core.Players.Revenue.ResetMultiplier
      VB:
      - id: CardBattle.Core.Players.Revenue.ResetMultiplier*
        name: ResetMultiplier
        nameWithType: Revenue.ResetMultiplier
        qualifiedName: CardBattle.Core.Players.Revenue.ResetMultiplier
    isDefinition: true
    commentId: Overload:CardBattle.Core.Players.Revenue.ResetMultiplier
  CardBattle.Core.Players.Revenue.GetRevenue*:
    name:
      CSharp:
      - id: CardBattle.Core.Players.Revenue.GetRevenue*
        name: GetRevenue
        nameWithType: Revenue.GetRevenue
        qualifiedName: CardBattle.Core.Players.Revenue.GetRevenue
      VB:
      - id: CardBattle.Core.Players.Revenue.GetRevenue*
        name: GetRevenue
        nameWithType: Revenue.GetRevenue
        qualifiedName: CardBattle.Core.Players.Revenue.GetRevenue
    isDefinition: true
    commentId: Overload:CardBattle.Core.Players.Revenue.GetRevenue
  CardBattle.Display.HUD:
    name:
      CSharp:
      - id: CardBattle.Display.HUD
        name: HUD
        nameWithType: HUD
        qualifiedName: CardBattle.Display.HUD
      VB:
      - id: CardBattle.Display.HUD
        name: HUD
        nameWithType: HUD
        qualifiedName: CardBattle.Display.HUD
    isDefinition: true
    commentId: T:CardBattle.Display.HUD
  CardBattle.Display:
    name:
      CSharp:
      - name: CardBattle.Display
        nameWithType: CardBattle.Display
        qualifiedName: CardBattle.Display
      VB:
      - name: CardBattle.Display
        nameWithType: CardBattle.Display
        qualifiedName: CardBattle.Display
    isDefinition: true
    commentId: N:CardBattle.Display
  CardBattle.Display.MenuManager:
    name:
      CSharp:
      - id: CardBattle.Display.MenuManager
        name: MenuManager
        nameWithType: MenuManager
        qualifiedName: CardBattle.Display.MenuManager
      VB:
      - id: CardBattle.Display.MenuManager
        name: MenuManager
        nameWithType: MenuManager
        qualifiedName: CardBattle.Display.MenuManager
    isDefinition: true
    parent: CardBattle.Display
    commentId: T:CardBattle.Display.MenuManager
  CardBattle.Display.PanelManager:
    name:
      CSharp:
      - id: CardBattle.Display.PanelManager
        name: PanelManager
        nameWithType: PanelManager
        qualifiedName: CardBattle.Display.PanelManager
      VB:
      - id: CardBattle.Display.PanelManager
        name: PanelManager
        nameWithType: PanelManager
        qualifiedName: CardBattle.Display.PanelManager
    isDefinition: true
    parent: CardBattle.Display
    commentId: T:CardBattle.Display.PanelManager
  System.Collections.Generic.List{Selectable}:
    name:
      CSharp:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Selectable
        name: Selectable
        nameWithType: Selectable
        qualifiedName: Selectable
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.List`1
        name: List
        nameWithType: List
        qualifiedName: System.Collections.Generic.List
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Selectable
        name: Selectable
        nameWithType: Selectable
        qualifiedName: Selectable
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.List`1
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.List{Selectable}
  CardBattle.Display.Panel.Open*:
    name:
      CSharp:
      - id: CardBattle.Display.Panel.Open*
        name: Open
        nameWithType: Panel.Open
        qualifiedName: CardBattle.Display.Panel.Open
      VB:
      - id: CardBattle.Display.Panel.Open*
        name: Open
        nameWithType: Panel.Open
        qualifiedName: CardBattle.Display.Panel.Open
    isDefinition: true
    commentId: Overload:CardBattle.Display.Panel.Open
  CardBattle.Display.Panel.Close*:
    name:
      CSharp:
      - id: CardBattle.Display.Panel.Close*
        name: Close
        nameWithType: Panel.Close
        qualifiedName: CardBattle.Display.Panel.Close
      VB:
      - id: CardBattle.Display.Panel.Close*
        name: Close
        nameWithType: Panel.Close
        qualifiedName: CardBattle.Display.Panel.Close
    isDefinition: true
    commentId: Overload:CardBattle.Display.Panel.Close
  CardBattle.Display.Panel.Load*:
    name:
      CSharp:
      - id: CardBattle.Display.Panel.Load*
        name: Load
        nameWithType: Panel.Load
        qualifiedName: CardBattle.Display.Panel.Load
      VB:
      - id: CardBattle.Display.Panel.Load*
        name: Load
        nameWithType: Panel.Load
        qualifiedName: CardBattle.Display.Panel.Load
    isDefinition: true
    commentId: Overload:CardBattle.Display.Panel.Load
  CardBattle.Display.Panel.Update*:
    name:
      CSharp:
      - id: CardBattle.Display.Panel.Update*
        name: Update
        nameWithType: Panel.Update
        qualifiedName: CardBattle.Display.Panel.Update
      VB:
      - id: CardBattle.Display.Panel.Update*
        name: Update
        nameWithType: Panel.Update
        qualifiedName: CardBattle.Display.Panel.Update
    isDefinition: true
    commentId: Overload:CardBattle.Display.Panel.Update
  CardBattle.Display.Panel.Start*:
    name:
      CSharp:
      - id: CardBattle.Display.Panel.Start*
        name: Start
        nameWithType: Panel.Start
        qualifiedName: CardBattle.Display.Panel.Start
      VB:
      - id: CardBattle.Display.Panel.Start*
        name: Start
        nameWithType: Panel.Start
        qualifiedName: CardBattle.Display.Panel.Start
    isDefinition: true
    commentId: Overload:CardBattle.Display.Panel.Start
  CardBattle.Display.Panel.Awake*:
    name:
      CSharp:
      - id: CardBattle.Display.Panel.Awake*
        name: Awake
        nameWithType: Panel.Awake
        qualifiedName: CardBattle.Display.Panel.Awake
      VB:
      - id: CardBattle.Display.Panel.Awake*
        name: Awake
        nameWithType: Panel.Awake
        qualifiedName: CardBattle.Display.Panel.Awake
    isDefinition: true
    commentId: Overload:CardBattle.Display.Panel.Awake
  CardBattle.Display.Panel.Set*:
    name:
      CSharp:
      - id: CardBattle.Display.Panel.Set*
        name: Set
        nameWithType: Panel.Set
        qualifiedName: CardBattle.Display.Panel.Set
      VB:
      - id: CardBattle.Display.Panel.Set*
        name: Set
        nameWithType: Panel.Set
        qualifiedName: CardBattle.Display.Panel.Set
    isDefinition: true
    commentId: Overload:CardBattle.Display.Panel.Set
  CardBattle.Display.Panel:
    name:
      CSharp:
      - id: CardBattle.Display.Panel
        name: Panel
        nameWithType: Panel
        qualifiedName: CardBattle.Display.Panel
      VB:
      - id: CardBattle.Display.Panel
        name: Panel
        nameWithType: Panel
        qualifiedName: CardBattle.Display.Panel
    isDefinition: true
    parent: CardBattle.Display
    commentId: T:CardBattle.Display.Panel
  CardBattle.Display.PanelManager.GetPanel*:
    name:
      CSharp:
      - id: CardBattle.Display.PanelManager.GetPanel*
        name: GetPanel
        nameWithType: PanelManager.GetPanel
        qualifiedName: CardBattle.Display.PanelManager.GetPanel
      VB:
      - id: CardBattle.Display.PanelManager.GetPanel*
        name: GetPanel
        nameWithType: PanelManager.GetPanel
        qualifiedName: CardBattle.Display.PanelManager.GetPanel
    isDefinition: true
    commentId: Overload:CardBattle.Display.PanelManager.GetPanel
  CardBattle.Display.PanelManager.OpenPanel*:
    name:
      CSharp:
      - id: CardBattle.Display.PanelManager.OpenPanel*
        name: OpenPanel
        nameWithType: PanelManager.OpenPanel
        qualifiedName: CardBattle.Display.PanelManager.OpenPanel
      VB:
      - id: CardBattle.Display.PanelManager.OpenPanel*
        name: OpenPanel
        nameWithType: PanelManager.OpenPanel
        qualifiedName: CardBattle.Display.PanelManager.OpenPanel
    isDefinition: true
    commentId: Overload:CardBattle.Display.PanelManager.OpenPanel
  CardBattle.Display.PanelManager.ClosePanel*:
    name:
      CSharp:
      - id: CardBattle.Display.PanelManager.ClosePanel*
        name: ClosePanel
        nameWithType: PanelManager.ClosePanel
        qualifiedName: CardBattle.Display.PanelManager.ClosePanel
      VB:
      - id: CardBattle.Display.PanelManager.ClosePanel*
        name: ClosePanel
        nameWithType: PanelManager.ClosePanel
        qualifiedName: CardBattle.Display.PanelManager.ClosePanel
    isDefinition: true
    commentId: Overload:CardBattle.Display.PanelManager.ClosePanel
  CardBattle.Display.ReplaceWith:
    name:
      CSharp:
      - id: CardBattle.Display.ReplaceWith
        name: ReplaceWith
        nameWithType: ReplaceWith
        qualifiedName: CardBattle.Display.ReplaceWith
      VB:
      - id: CardBattle.Display.ReplaceWith
        name: ReplaceWith
        nameWithType: ReplaceWith
        qualifiedName: CardBattle.Display.ReplaceWith
    isDefinition: true
    commentId: T:CardBattle.Display.ReplaceWith
  CardBattle.Display.Panel.panelName:
    name:
      CSharp:
      - id: CardBattle.Display.Panel.panelName
        name: panelName
        nameWithType: Panel.panelName
        qualifiedName: CardBattle.Display.Panel.panelName
      VB:
      - id: CardBattle.Display.Panel.panelName
        name: panelName
        nameWithType: Panel.panelName
        qualifiedName: CardBattle.Display.Panel.panelName
    isDefinition: true
    parent: CardBattle.Display.Panel
    commentId: F:CardBattle.Display.Panel.panelName
  CardBattle.Display.Panel.interactables:
    name:
      CSharp:
      - id: CardBattle.Display.Panel.interactables
        name: interactables
        nameWithType: Panel.interactables
        qualifiedName: CardBattle.Display.Panel.interactables
      VB:
      - id: CardBattle.Display.Panel.interactables
        name: interactables
        nameWithType: Panel.interactables
        qualifiedName: CardBattle.Display.Panel.interactables
    isDefinition: true
    parent: CardBattle.Display.Panel
    commentId: F:CardBattle.Display.Panel.interactables
  CardBattle.Display.Panel.Open:
    name:
      CSharp:
      - id: CardBattle.Display.Panel.Open
        name: Open
        nameWithType: Panel.Open
        qualifiedName: CardBattle.Display.Panel.Open
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: CardBattle.Display.Panel.Open
        name: Open
        nameWithType: Panel.Open
        qualifiedName: CardBattle.Display.Panel.Open
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: CardBattle.Display.Panel
    commentId: M:CardBattle.Display.Panel.Open
  CardBattle.Display.Panel.Close:
    name:
      CSharp:
      - id: CardBattle.Display.Panel.Close
        name: Close
        nameWithType: Panel.Close
        qualifiedName: CardBattle.Display.Panel.Close
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: CardBattle.Display.Panel.Close
        name: Close
        nameWithType: Panel.Close
        qualifiedName: CardBattle.Display.Panel.Close
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: CardBattle.Display.Panel
    commentId: M:CardBattle.Display.Panel.Close
  CardBattle.Display.Panel.Update:
    name:
      CSharp:
      - id: CardBattle.Display.Panel.Update
        name: Update
        nameWithType: Panel.Update
        qualifiedName: CardBattle.Display.Panel.Update
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: CardBattle.Display.Panel.Update
        name: Update
        nameWithType: Panel.Update
        qualifiedName: CardBattle.Display.Panel.Update
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: CardBattle.Display.Panel
    commentId: M:CardBattle.Display.Panel.Update
  CardBattle.Display.Panel.Start:
    name:
      CSharp:
      - id: CardBattle.Display.Panel.Start
        name: Start
        nameWithType: Panel.Start
        qualifiedName: CardBattle.Display.Panel.Start
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: CardBattle.Display.Panel.Start
        name: Start
        nameWithType: Panel.Start
        qualifiedName: CardBattle.Display.Panel.Start
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: CardBattle.Display.Panel
    commentId: M:CardBattle.Display.Panel.Start
  CardBattle.Display.Panel.Awake:
    name:
      CSharp:
      - id: CardBattle.Display.Panel.Awake
        name: Awake
        nameWithType: Panel.Awake
        qualifiedName: CardBattle.Display.Panel.Awake
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: CardBattle.Display.Panel.Awake
        name: Awake
        nameWithType: Panel.Awake
        qualifiedName: CardBattle.Display.Panel.Awake
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: CardBattle.Display.Panel
    commentId: M:CardBattle.Display.Panel.Awake
  CardBattle.Display.Panel.Set(System.Boolean):
    name:
      CSharp:
      - id: CardBattle.Display.Panel.Set(System.Boolean)
        name: Set
        nameWithType: Panel.Set
        qualifiedName: CardBattle.Display.Panel.Set
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: CardBattle.Display.Panel.Set(System.Boolean)
        name: Set
        nameWithType: Panel.Set
        qualifiedName: CardBattle.Display.Panel.Set
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Boolean
        name: Boolean
        nameWithType: Boolean
        qualifiedName: System.Boolean
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: CardBattle.Display.Panel
    commentId: M:CardBattle.Display.Panel.Set(System.Boolean)
  CardBattle.Display.Panel.Load:
    name:
      CSharp:
      - id: CardBattle.Display.Panel.Load
        name: Load
        nameWithType: Panel.Load
        qualifiedName: CardBattle.Display.Panel.Load
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: CardBattle.Display.Panel.Load
        name: Load
        nameWithType: Panel.Load
        qualifiedName: CardBattle.Display.Panel.Load
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: CardBattle.Display.Panel
    commentId: M:CardBattle.Display.Panel.Load
  CardBattle.Display.Panels.StandardPanel.Load*:
    name:
      CSharp:
      - id: CardBattle.Display.Panels.StandardPanel.Load*
        name: Load
        nameWithType: StandardPanel.Load
        qualifiedName: CardBattle.Display.Panels.StandardPanel.Load
      VB:
      - id: CardBattle.Display.Panels.StandardPanel.Load*
        name: Load
        nameWithType: StandardPanel.Load
        qualifiedName: CardBattle.Display.Panels.StandardPanel.Load
    isDefinition: true
    commentId: Overload:CardBattle.Display.Panels.StandardPanel.Load
  CardBattle.Display.Panels.StandardPanel:
    name:
      CSharp:
      - id: CardBattle.Display.Panels.StandardPanel
        name: StandardPanel
        nameWithType: StandardPanel
        qualifiedName: CardBattle.Display.Panels.StandardPanel
      VB:
      - id: CardBattle.Display.Panels.StandardPanel
        name: StandardPanel
        nameWithType: StandardPanel
        qualifiedName: CardBattle.Display.Panels.StandardPanel
    isDefinition: true
    commentId: T:CardBattle.Display.Panels.StandardPanel
  CardBattle.Display.Panels:
    name:
      CSharp:
      - name: CardBattle.Display.Panels
        nameWithType: CardBattle.Display.Panels
        qualifiedName: CardBattle.Display.Panels
      VB:
      - name: CardBattle.Display.Panels
        nameWithType: CardBattle.Display.Panels
        qualifiedName: CardBattle.Display.Panels
    isDefinition: true
    commentId: N:CardBattle.Display.Panels
  IPunObservable:
    name:
      CSharp:
      - id: IPunObservable
        name: IPunObservable
        nameWithType: IPunObservable
        qualifiedName: IPunObservable
        isExternal: true
      VB:
      - id: IPunObservable
        name: IPunObservable
        nameWithType: IPunObservable
        qualifiedName: IPunObservable
        isExternal: true
    isDefinition: true
    commentId: '!:IPunObservable'
  CardBattle.Networking.HexagonalFieldController.IsLerped*:
    name:
      CSharp:
      - id: CardBattle.Networking.HexagonalFieldController.IsLerped*
        name: IsLerped
        nameWithType: HexagonalFieldController.IsLerped
        qualifiedName: CardBattle.Networking.HexagonalFieldController.IsLerped
      VB:
      - id: CardBattle.Networking.HexagonalFieldController.IsLerped*
        name: IsLerped
        nameWithType: HexagonalFieldController.IsLerped
        qualifiedName: CardBattle.Networking.HexagonalFieldController.IsLerped
    isDefinition: true
    commentId: Overload:CardBattle.Networking.HexagonalFieldController.IsLerped
  CardBattle.Networking:
    name:
      CSharp:
      - name: CardBattle.Networking
        nameWithType: CardBattle.Networking
        qualifiedName: CardBattle.Networking
      VB:
      - name: CardBattle.Networking
        nameWithType: CardBattle.Networking
        qualifiedName: CardBattle.Networking
    isDefinition: true
    commentId: N:CardBattle.Networking
  CardBattle.Networking.MapGeneration:
    name:
      CSharp:
      - id: CardBattle.Networking.MapGeneration
        name: MapGeneration
        nameWithType: MapGeneration
        qualifiedName: CardBattle.Networking.MapGeneration
      VB:
      - id: CardBattle.Networking.MapGeneration
        name: MapGeneration
        nameWithType: MapGeneration
        qualifiedName: CardBattle.Networking.MapGeneration
    isDefinition: true
    parent: CardBattle.Networking
    commentId: T:CardBattle.Networking.MapGeneration
  CardBattle.Networking.HexagonalFieldController.Initialize*:
    name:
      CSharp:
      - id: CardBattle.Networking.HexagonalFieldController.Initialize*
        name: Initialize
        nameWithType: HexagonalFieldController.Initialize
        qualifiedName: CardBattle.Networking.HexagonalFieldController.Initialize
      VB:
      - id: CardBattle.Networking.HexagonalFieldController.Initialize*
        name: Initialize
        nameWithType: HexagonalFieldController.Initialize
        qualifiedName: CardBattle.Networking.HexagonalFieldController.Initialize
    isDefinition: true
    commentId: Overload:CardBattle.Networking.HexagonalFieldController.Initialize
  PhotonStream:
    name:
      CSharp:
      - id: PhotonStream
        name: PhotonStream
        nameWithType: PhotonStream
        qualifiedName: PhotonStream
        isExternal: true
      VB:
      - id: PhotonStream
        name: PhotonStream
        nameWithType: PhotonStream
        qualifiedName: PhotonStream
        isExternal: true
    isDefinition: true
    commentId: '!:PhotonStream'
  PhotonMessageInfo:
    name:
      CSharp:
      - id: PhotonMessageInfo
        name: PhotonMessageInfo
        nameWithType: PhotonMessageInfo
        qualifiedName: PhotonMessageInfo
        isExternal: true
      VB:
      - id: PhotonMessageInfo
        name: PhotonMessageInfo
        nameWithType: PhotonMessageInfo
        qualifiedName: PhotonMessageInfo
        isExternal: true
    isDefinition: true
    commentId: '!:PhotonMessageInfo'
  CardBattle.Networking.HexagonalFieldController.OnPhotonSerializeView*:
    name:
      CSharp:
      - id: CardBattle.Networking.HexagonalFieldController.OnPhotonSerializeView*
        name: OnPhotonSerializeView
        nameWithType: HexagonalFieldController.OnPhotonSerializeView
        qualifiedName: CardBattle.Networking.HexagonalFieldController.OnPhotonSerializeView
      VB:
      - id: CardBattle.Networking.HexagonalFieldController.OnPhotonSerializeView*
        name: OnPhotonSerializeView
        nameWithType: HexagonalFieldController.OnPhotonSerializeView
        qualifiedName: CardBattle.Networking.HexagonalFieldController.OnPhotonSerializeView
    isDefinition: true
    commentId: Overload:CardBattle.Networking.HexagonalFieldController.OnPhotonSerializeView
  HexagonalField:
    name:
      CSharp:
      - id: HexagonalField
        name: HexagonalField
        nameWithType: HexagonalField
        qualifiedName: HexagonalField
        isExternal: true
      VB:
      - id: HexagonalField
        name: HexagonalField
        nameWithType: HexagonalField
        qualifiedName: HexagonalField
        isExternal: true
    isDefinition: true
    commentId: '!:HexagonalField'
  DIRECTION:
    name:
      CSharp:
      - id: DIRECTION
        name: DIRECTION
        nameWithType: DIRECTION
        qualifiedName: DIRECTION
        isExternal: true
      VB:
      - id: DIRECTION
        name: DIRECTION
        nameWithType: DIRECTION
        qualifiedName: DIRECTION
        isExternal: true
    isDefinition: true
    commentId: '!:DIRECTION'
  CardBattle.Networking.HexagonalFieldController.GetNeighbor*:
    name:
      CSharp:
      - id: CardBattle.Networking.HexagonalFieldController.GetNeighbor*
        name: GetNeighbor
        nameWithType: HexagonalFieldController.GetNeighbor
        qualifiedName: CardBattle.Networking.HexagonalFieldController.GetNeighbor
      VB:
      - id: CardBattle.Networking.HexagonalFieldController.GetNeighbor*
        name: GetNeighbor
        nameWithType: HexagonalFieldController.GetNeighbor
        qualifiedName: CardBattle.Networking.HexagonalFieldController.GetNeighbor
    isDefinition: true
    commentId: Overload:CardBattle.Networking.HexagonalFieldController.GetNeighbor
  CardBattle.Networking.HexagonalFieldController.GetNeighbors*:
    name:
      CSharp:
      - id: CardBattle.Networking.HexagonalFieldController.GetNeighbors*
        name: GetNeighbors
        nameWithType: HexagonalFieldController.GetNeighbors
        qualifiedName: CardBattle.Networking.HexagonalFieldController.GetNeighbors
      VB:
      - id: CardBattle.Networking.HexagonalFieldController.GetNeighbors*
        name: GetNeighbors
        nameWithType: HexagonalFieldController.GetNeighbors
        qualifiedName: CardBattle.Networking.HexagonalFieldController.GetNeighbors
    isDefinition: true
    commentId: Overload:CardBattle.Networking.HexagonalFieldController.GetNeighbors
  CardBattle.Networking.HexagonalFieldController.Lerp*:
    name:
      CSharp:
      - id: CardBattle.Networking.HexagonalFieldController.Lerp*
        name: Lerp
        nameWithType: HexagonalFieldController.Lerp
        qualifiedName: CardBattle.Networking.HexagonalFieldController.Lerp
      VB:
      - id: CardBattle.Networking.HexagonalFieldController.Lerp*
        name: Lerp
        nameWithType: HexagonalFieldController.Lerp
        qualifiedName: CardBattle.Networking.HexagonalFieldController.Lerp
    isDefinition: true
    commentId: Overload:CardBattle.Networking.HexagonalFieldController.Lerp
  CardBattle.Networking.HexagonalFieldController:
    name:
      CSharp:
      - id: CardBattle.Networking.HexagonalFieldController
        name: HexagonalFieldController
        nameWithType: HexagonalFieldController
        qualifiedName: CardBattle.Networking.HexagonalFieldController
      VB:
      - id: CardBattle.Networking.HexagonalFieldController
        name: HexagonalFieldController
        nameWithType: HexagonalFieldController
        qualifiedName: CardBattle.Networking.HexagonalFieldController
    isDefinition: true
    commentId: T:CardBattle.Networking.HexagonalFieldController
  Animator:
    name:
      CSharp:
      - id: Animator
        name: Animator
        nameWithType: Animator
        qualifiedName: Animator
        isExternal: true
      VB:
      - id: Animator
        name: Animator
        nameWithType: Animator
        qualifiedName: Animator
        isExternal: true
    isDefinition: true
    commentId: '!:Animator'
  CardBattle.Networking.LevelChanger.FadeToLevel*:
    name:
      CSharp:
      - id: CardBattle.Networking.LevelChanger.FadeToLevel*
        name: FadeToLevel
        nameWithType: LevelChanger.FadeToLevel
        qualifiedName: CardBattle.Networking.LevelChanger.FadeToLevel
      VB:
      - id: CardBattle.Networking.LevelChanger.FadeToLevel*
        name: FadeToLevel
        nameWithType: LevelChanger.FadeToLevel
        qualifiedName: CardBattle.Networking.LevelChanger.FadeToLevel
    isDefinition: true
    commentId: Overload:CardBattle.Networking.LevelChanger.FadeToLevel
  CardBattle.Networking.LevelChanger.OnFadeComplete*:
    name:
      CSharp:
      - id: CardBattle.Networking.LevelChanger.OnFadeComplete*
        name: OnFadeComplete
        nameWithType: LevelChanger.OnFadeComplete
        qualifiedName: CardBattle.Networking.LevelChanger.OnFadeComplete
      VB:
      - id: CardBattle.Networking.LevelChanger.OnFadeComplete*
        name: OnFadeComplete
        nameWithType: LevelChanger.OnFadeComplete
        qualifiedName: CardBattle.Networking.LevelChanger.OnFadeComplete
    isDefinition: true
    commentId: Overload:CardBattle.Networking.LevelChanger.OnFadeComplete
  CardBattle.Networking.LevelChanger.OnFadeCompleteNetwork*:
    name:
      CSharp:
      - id: CardBattle.Networking.LevelChanger.OnFadeCompleteNetwork*
        name: OnFadeCompleteNetwork
        nameWithType: LevelChanger.OnFadeCompleteNetwork
        qualifiedName: CardBattle.Networking.LevelChanger.OnFadeCompleteNetwork
      VB:
      - id: CardBattle.Networking.LevelChanger.OnFadeCompleteNetwork*
        name: OnFadeCompleteNetwork
        nameWithType: LevelChanger.OnFadeCompleteNetwork
        qualifiedName: CardBattle.Networking.LevelChanger.OnFadeCompleteNetwork
    isDefinition: true
    commentId: Overload:CardBattle.Networking.LevelChanger.OnFadeCompleteNetwork
  CardBattle.Networking.LevelChanger:
    name:
      CSharp:
      - id: CardBattle.Networking.LevelChanger
        name: LevelChanger
        nameWithType: LevelChanger
        qualifiedName: CardBattle.Networking.LevelChanger
      VB:
      - id: CardBattle.Networking.LevelChanger
        name: LevelChanger
        nameWithType: LevelChanger
        qualifiedName: CardBattle.Networking.LevelChanger
    isDefinition: true
    parent: CardBattle.Networking
    commentId: T:CardBattle.Networking.LevelChanger
  System.Collections.Generic.Dictionary{Vector2,GameObject}:
    name:
      CSharp:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: <
        nameWithType: <
        qualifiedName: <
      - id: Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Vector2
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      - name: '>'
        nameWithType: '>'
        qualifiedName: '>'
      VB:
      - id: System.Collections.Generic.Dictionary`2
        name: Dictionary
        nameWithType: Dictionary
        qualifiedName: System.Collections.Generic.Dictionary
        isExternal: true
      - name: '(Of '
        nameWithType: '(Of '
        qualifiedName: '(Of '
      - id: Vector2
        name: Vector2
        nameWithType: Vector2
        qualifiedName: Vector2
        isExternal: true
      - name: ', '
        nameWithType: ', '
        qualifiedName: ', '
      - id: GameObject
        name: GameObject
        nameWithType: GameObject
        qualifiedName: GameObject
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: false
    definition: System.Collections.Generic.Dictionary`2
    parent: System.Collections.Generic
    commentId: T:System.Collections.Generic.Dictionary{Vector2,GameObject}
  CardBattle.Networking.MapGeneration.AllFieldsSlerped*:
    name:
      CSharp:
      - id: CardBattle.Networking.MapGeneration.AllFieldsSlerped*
        name: AllFieldsSlerped
        nameWithType: MapGeneration.AllFieldsSlerped
        qualifiedName: CardBattle.Networking.MapGeneration.AllFieldsSlerped
      VB:
      - id: CardBattle.Networking.MapGeneration.AllFieldsSlerped*
        name: AllFieldsSlerped
        nameWithType: MapGeneration.AllFieldsSlerped
        qualifiedName: CardBattle.Networking.MapGeneration.AllFieldsSlerped
    isDefinition: true
    commentId: Overload:CardBattle.Networking.MapGeneration.AllFieldsSlerped
  TMP_Text:
    name:
      CSharp:
      - id: TMP_Text
        name: TMP_Text
        nameWithType: TMP_Text
        qualifiedName: TMP_Text
        isExternal: true
      VB:
      - id: TMP_Text
        name: TMP_Text
        nameWithType: TMP_Text
        qualifiedName: TMP_Text
        isExternal: true
    isDefinition: true
    commentId: '!:TMP_Text'
  CardBattle.Networking.NetworkManager.SetSelectedMatchType*:
    name:
      CSharp:
      - id: CardBattle.Networking.NetworkManager.SetSelectedMatchType*
        name: SetSelectedMatchType
        nameWithType: NetworkManager.SetSelectedMatchType
        qualifiedName: CardBattle.Networking.NetworkManager.SetSelectedMatchType
      VB:
      - id: CardBattle.Networking.NetworkManager.SetSelectedMatchType*
        name: SetSelectedMatchType
        nameWithType: NetworkManager.SetSelectedMatchType
        qualifiedName: CardBattle.Networking.NetworkManager.SetSelectedMatchType
    isDefinition: true
    commentId: Overload:CardBattle.Networking.NetworkManager.SetSelectedMatchType
  CardBattle.Networking.NetworkManager.SetPlayersNickName*:
    name:
      CSharp:
      - id: CardBattle.Networking.NetworkManager.SetPlayersNickName*
        name: SetPlayersNickName
        nameWithType: NetworkManager.SetPlayersNickName
        qualifiedName: CardBattle.Networking.NetworkManager.SetPlayersNickName
      VB:
      - id: CardBattle.Networking.NetworkManager.SetPlayersNickName*
        name: SetPlayersNickName
        nameWithType: NetworkManager.SetPlayersNickName
        qualifiedName: CardBattle.Networking.NetworkManager.SetPlayersNickName
    isDefinition: true
    commentId: Overload:CardBattle.Networking.NetworkManager.SetPlayersNickName
  CardBattle.Networking.NetworkManager.OnConnectedToMaster*:
    name:
      CSharp:
      - id: CardBattle.Networking.NetworkManager.OnConnectedToMaster*
        name: OnConnectedToMaster
        nameWithType: NetworkManager.OnConnectedToMaster
        qualifiedName: CardBattle.Networking.NetworkManager.OnConnectedToMaster
      VB:
      - id: CardBattle.Networking.NetworkManager.OnConnectedToMaster*
        name: OnConnectedToMaster
        nameWithType: NetworkManager.OnConnectedToMaster
        qualifiedName: CardBattle.Networking.NetworkManager.OnConnectedToMaster
    isDefinition: true
    commentId: Overload:CardBattle.Networking.NetworkManager.OnConnectedToMaster
  DisconnectCause:
    name:
      CSharp:
      - id: DisconnectCause
        name: DisconnectCause
        nameWithType: DisconnectCause
        qualifiedName: DisconnectCause
        isExternal: true
      VB:
      - id: DisconnectCause
        name: DisconnectCause
        nameWithType: DisconnectCause
        qualifiedName: DisconnectCause
        isExternal: true
    isDefinition: true
  CardBattle.Networking.NetworkManager.OnDisconnected*:
    name:
      CSharp:
      - id: CardBattle.Networking.NetworkManager.OnDisconnected*
        name: OnDisconnected
        nameWithType: NetworkManager.OnDisconnected
        qualifiedName: CardBattle.Networking.NetworkManager.OnDisconnected
      VB:
      - id: CardBattle.Networking.NetworkManager.OnDisconnected*
        name: OnDisconnected
        nameWithType: NetworkManager.OnDisconnected
        qualifiedName: CardBattle.Networking.NetworkManager.OnDisconnected
    isDefinition: true
    commentId: Overload:CardBattle.Networking.NetworkManager.OnDisconnected
  CardBattle.Networking.NetworkManager.OnJoinedLobby*:
    name:
      CSharp:
      - id: CardBattle.Networking.NetworkManager.OnJoinedLobby*
        name: OnJoinedLobby
        nameWithType: NetworkManager.OnJoinedLobby
        qualifiedName: CardBattle.Networking.NetworkManager.OnJoinedLobby
      VB:
      - id: CardBattle.Networking.NetworkManager.OnJoinedLobby*
        name: OnJoinedLobby
        nameWithType: NetworkManager.OnJoinedLobby
        qualifiedName: CardBattle.Networking.NetworkManager.OnJoinedLobby
    isDefinition: true
    commentId: Overload:CardBattle.Networking.NetworkManager.OnJoinedLobby
  TMP_InputField:
    name:
      CSharp:
      - id: TMP_InputField
        name: TMP_InputField
        nameWithType: TMP_InputField
        qualifiedName: TMP_InputField
        isExternal: true
      VB:
      - id: TMP_InputField
        name: TMP_InputField
        nameWithType: TMP_InputField
        qualifiedName: TMP_InputField
        isExternal: true
    isDefinition: true
    commentId: '!:TMP_InputField'
  CardBattle.Networking.NetworkManager.OnJoinMatchButtonPressed*:
    name:
      CSharp:
      - id: CardBattle.Networking.NetworkManager.OnJoinMatchButtonPressed*
        name: OnJoinMatchButtonPressed
        nameWithType: NetworkManager.OnJoinMatchButtonPressed
        qualifiedName: CardBattle.Networking.NetworkManager.OnJoinMatchButtonPressed
      VB:
      - id: CardBattle.Networking.NetworkManager.OnJoinMatchButtonPressed*
        name: OnJoinMatchButtonPressed
        nameWithType: NetworkManager.OnJoinMatchButtonPressed
        qualifiedName: CardBattle.Networking.NetworkManager.OnJoinMatchButtonPressed
    isDefinition: true
    commentId: Overload:CardBattle.Networking.NetworkManager.OnJoinMatchButtonPressed
  CardBattle.Networking.NetworkManager.JoinSpecificMatch*:
    name:
      CSharp:
      - id: CardBattle.Networking.NetworkManager.JoinSpecificMatch*
        name: JoinSpecificMatch
        nameWithType: NetworkManager.JoinSpecificMatch
        qualifiedName: CardBattle.Networking.NetworkManager.JoinSpecificMatch
      VB:
      - id: CardBattle.Networking.NetworkManager.JoinSpecificMatch*
        name: JoinSpecificMatch
        nameWithType: NetworkManager.JoinSpecificMatch
        qualifiedName: CardBattle.Networking.NetworkManager.JoinSpecificMatch
    isDefinition: true
    commentId: Overload:CardBattle.Networking.NetworkManager.JoinSpecificMatch
  System.Int16:
    name:
      CSharp:
      - id: System.Int16
        name: Int16
        nameWithType: Int16
        qualifiedName: System.Int16
        isExternal: true
      VB:
      - id: System.Int16
        name: Int16
        nameWithType: Int16
        qualifiedName: System.Int16
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.Int16
  CardBattle.Networking.NetworkManager.OnJoinRandomFailed*:
    name:
      CSharp:
      - id: CardBattle.Networking.NetworkManager.OnJoinRandomFailed*
        name: OnJoinRandomFailed
        nameWithType: NetworkManager.OnJoinRandomFailed
        qualifiedName: CardBattle.Networking.NetworkManager.OnJoinRandomFailed
      VB:
      - id: CardBattle.Networking.NetworkManager.OnJoinRandomFailed*
        name: OnJoinRandomFailed
        nameWithType: NetworkManager.OnJoinRandomFailed
        qualifiedName: CardBattle.Networking.NetworkManager.OnJoinRandomFailed
    isDefinition: true
    commentId: Overload:CardBattle.Networking.NetworkManager.OnJoinRandomFailed
  CardBattle.Networking.NetworkManager.OnJoinedRoom*:
    name:
      CSharp:
      - id: CardBattle.Networking.NetworkManager.OnJoinedRoom*
        name: OnJoinedRoom
        nameWithType: NetworkManager.OnJoinedRoom
        qualifiedName: CardBattle.Networking.NetworkManager.OnJoinedRoom
      VB:
      - id: CardBattle.Networking.NetworkManager.OnJoinedRoom*
        name: OnJoinedRoom
        nameWithType: NetworkManager.OnJoinedRoom
        qualifiedName: CardBattle.Networking.NetworkManager.OnJoinedRoom
    isDefinition: true
    commentId: Overload:CardBattle.Networking.NetworkManager.OnJoinedRoom
  CardBattle.Networking.NetworkManager.LeaveMatch*:
    name:
      CSharp:
      - id: CardBattle.Networking.NetworkManager.LeaveMatch*
        name: LeaveMatch
        nameWithType: NetworkManager.LeaveMatch
        qualifiedName: CardBattle.Networking.NetworkManager.LeaveMatch
      VB:
      - id: CardBattle.Networking.NetworkManager.LeaveMatch*
        name: LeaveMatch
        nameWithType: NetworkManager.LeaveMatch
        qualifiedName: CardBattle.Networking.NetworkManager.LeaveMatch
    isDefinition: true
    commentId: Overload:CardBattle.Networking.NetworkManager.LeaveMatch
  CardBattle.Networking.NetworkManager:
    name:
      CSharp:
      - id: CardBattle.Networking.NetworkManager
        name: NetworkManager
        nameWithType: NetworkManager
        qualifiedName: CardBattle.Networking.NetworkManager
      VB:
      - id: CardBattle.Networking.NetworkManager
        name: NetworkManager
        nameWithType: NetworkManager
        qualifiedName: CardBattle.Networking.NetworkManager
    isDefinition: true
    commentId: T:CardBattle.Networking.NetworkManager
  CardBattle.Networking.NetworkManagers:
    name:
      CSharp:
      - id: CardBattle.Networking.NetworkManagers
        name: NetworkManagers
        nameWithType: NetworkManagers
        qualifiedName: CardBattle.Networking.NetworkManagers
      VB:
      - id: CardBattle.Networking.NetworkManagers
        name: NetworkManagers
        nameWithType: NetworkManagers
        qualifiedName: CardBattle.Networking.NetworkManagers
    isDefinition: true
    parent: CardBattle.Networking
    commentId: T:CardBattle.Networking.NetworkManagers
  CardBattle.Networking.NetworkManagers.Send*:
    name:
      CSharp:
      - id: CardBattle.Networking.NetworkManagers.Send*
        name: Send
        nameWithType: NetworkManagers.Send
        qualifiedName: CardBattle.Networking.NetworkManagers.Send
      VB:
      - id: CardBattle.Networking.NetworkManagers.Send*
        name: Send
        nameWithType: NetworkManagers.Send
        qualifiedName: CardBattle.Networking.NetworkManagers.Send
    isDefinition: true
    commentId: Overload:CardBattle.Networking.NetworkManagers.Send
  CardBattle.Networking.NetworkManagers.SendSecure*:
    name:
      CSharp:
      - id: CardBattle.Networking.NetworkManagers.SendSecure*
        name: SendSecure
        nameWithType: NetworkManagers.SendSecure
        qualifiedName: CardBattle.Networking.NetworkManagers.SendSecure
      VB:
      - id: CardBattle.Networking.NetworkManagers.SendSecure*
        name: SendSecure
        nameWithType: NetworkManagers.SendSecure
        qualifiedName: CardBattle.Networking.NetworkManagers.SendSecure
    isDefinition: true
    commentId: Overload:CardBattle.Networking.NetworkManagers.SendSecure
  CardBattle.Networking.NetworkSceneManager.currentIndex*:
    name:
      CSharp:
      - id: CardBattle.Networking.NetworkSceneManager.currentIndex*
        name: currentIndex
        nameWithType: NetworkSceneManager.currentIndex
        qualifiedName: CardBattle.Networking.NetworkSceneManager.currentIndex
      VB:
      - id: CardBattle.Networking.NetworkSceneManager.currentIndex*
        name: currentIndex
        nameWithType: NetworkSceneManager.currentIndex
        qualifiedName: CardBattle.Networking.NetworkSceneManager.currentIndex
    isDefinition: true
    commentId: Overload:CardBattle.Networking.NetworkSceneManager.currentIndex
  CardBattle.Networking.NetworkSceneManager.currentName*:
    name:
      CSharp:
      - id: CardBattle.Networking.NetworkSceneManager.currentName*
        name: currentName
        nameWithType: NetworkSceneManager.currentName
        qualifiedName: CardBattle.Networking.NetworkSceneManager.currentName
      VB:
      - id: CardBattle.Networking.NetworkSceneManager.currentName*
        name: currentName
        nameWithType: NetworkSceneManager.currentName
        qualifiedName: CardBattle.Networking.NetworkSceneManager.currentName
    isDefinition: true
    commentId: Overload:CardBattle.Networking.NetworkSceneManager.currentName
  CardBattle.Networking.NetworkSceneManager.IsSceneLoaded*:
    name:
      CSharp:
      - id: CardBattle.Networking.NetworkSceneManager.IsSceneLoaded*
        name: IsSceneLoaded
        nameWithType: NetworkSceneManager.IsSceneLoaded
        qualifiedName: CardBattle.Networking.NetworkSceneManager.IsSceneLoaded
      VB:
      - id: CardBattle.Networking.NetworkSceneManager.IsSceneLoaded*
        name: IsSceneLoaded
        nameWithType: NetworkSceneManager.IsSceneLoaded
        qualifiedName: CardBattle.Networking.NetworkSceneManager.IsSceneLoaded
    isDefinition: true
    commentId: Overload:CardBattle.Networking.NetworkSceneManager.IsSceneLoaded
  CardBattle.Networking.NetworkSceneManager:
    name:
      CSharp:
      - id: CardBattle.Networking.NetworkSceneManager
        name: NetworkSceneManager
        nameWithType: NetworkSceneManager
        qualifiedName: CardBattle.Networking.NetworkSceneManager
      VB:
      - id: CardBattle.Networking.NetworkSceneManager
        name: NetworkSceneManager
        nameWithType: NetworkSceneManager
        qualifiedName: CardBattle.Networking.NetworkSceneManager
    isDefinition: true
    commentId: T:CardBattle.Networking.NetworkSceneManager
  CardBattle.Networking.Quit.ExitRoom*:
    name:
      CSharp:
      - id: CardBattle.Networking.Quit.ExitRoom*
        name: ExitRoom
        nameWithType: Quit.ExitRoom
        qualifiedName: CardBattle.Networking.Quit.ExitRoom
      VB:
      - id: CardBattle.Networking.Quit.ExitRoom*
        name: ExitRoom
        nameWithType: Quit.ExitRoom
        qualifiedName: CardBattle.Networking.Quit.ExitRoom
    isDefinition: true
    commentId: Overload:CardBattle.Networking.Quit.ExitRoom
  CardBattle.Networking.Quit.Exit*:
    name:
      CSharp:
      - id: CardBattle.Networking.Quit.Exit*
        name: Exit
        nameWithType: Quit.Exit
        qualifiedName: CardBattle.Networking.Quit.Exit
      VB:
      - id: CardBattle.Networking.Quit.Exit*
        name: Exit
        nameWithType: Quit.Exit
        qualifiedName: CardBattle.Networking.Quit.Exit
    isDefinition: true
    commentId: Overload:CardBattle.Networking.Quit.Exit
  CardBattle.Networking.Quit.OnLeftRoom*:
    name:
      CSharp:
      - id: CardBattle.Networking.Quit.OnLeftRoom*
        name: OnLeftRoom
        nameWithType: Quit.OnLeftRoom
        qualifiedName: CardBattle.Networking.Quit.OnLeftRoom
      VB:
      - id: CardBattle.Networking.Quit.OnLeftRoom*
        name: OnLeftRoom
        nameWithType: Quit.OnLeftRoom
        qualifiedName: CardBattle.Networking.Quit.OnLeftRoom
    isDefinition: true
    commentId: Overload:CardBattle.Networking.Quit.OnLeftRoom
  CardBattle.Networking.Quit.OnLeftLobby*:
    name:
      CSharp:
      - id: CardBattle.Networking.Quit.OnLeftLobby*
        name: OnLeftLobby
        nameWithType: Quit.OnLeftLobby
        qualifiedName: CardBattle.Networking.Quit.OnLeftLobby
      VB:
      - id: CardBattle.Networking.Quit.OnLeftLobby*
        name: OnLeftLobby
        nameWithType: Quit.OnLeftLobby
        qualifiedName: CardBattle.Networking.Quit.OnLeftLobby
    isDefinition: true
    commentId: Overload:CardBattle.Networking.Quit.OnLeftLobby
  CardBattle.Networking.Quit.OnDisconnected*:
    name:
      CSharp:
      - id: CardBattle.Networking.Quit.OnDisconnected*
        name: OnDisconnected
        nameWithType: Quit.OnDisconnected
        qualifiedName: CardBattle.Networking.Quit.OnDisconnected
      VB:
      - id: CardBattle.Networking.Quit.OnDisconnected*
        name: OnDisconnected
        nameWithType: Quit.OnDisconnected
        qualifiedName: CardBattle.Networking.Quit.OnDisconnected
    isDefinition: true
    commentId: Overload:CardBattle.Networking.Quit.OnDisconnected
  CardBattle.Networking.Quit:
    name:
      CSharp:
      - id: CardBattle.Networking.Quit
        name: Quit
        nameWithType: Quit
        qualifiedName: CardBattle.Networking.Quit
      VB:
      - id: CardBattle.Networking.Quit
        name: Quit
        nameWithType: Quit
        qualifiedName: CardBattle.Networking.Quit
    isDefinition: true
    commentId: T:CardBattle.Networking.Quit
  GeneralMatchController:
    name:
      CSharp:
      - id: GeneralMatchController
        name: GeneralMatchController
        nameWithType: GeneralMatchController
        qualifiedName: GeneralMatchController
        isExternal: true
      VB:
      - id: GeneralMatchController
        name: GeneralMatchController
        nameWithType: GeneralMatchController
        qualifiedName: GeneralMatchController
        isExternal: true
    isDefinition: true
    commentId: '!:GeneralMatchController'
  CardBattle.Networking.PlayerSync.EndTurnButton:
    name:
      CSharp:
      - id: CardBattle.Networking.PlayerSync.EndTurnButton
        name: EndTurnButton
        nameWithType: EndTurnButton
        qualifiedName: CardBattle.Networking.PlayerSync.EndTurnButton
      VB:
      - id: CardBattle.Networking.PlayerSync.EndTurnButton
        name: EndTurnButton
        nameWithType: EndTurnButton
        qualifiedName: CardBattle.Networking.PlayerSync.EndTurnButton
    isDefinition: true
    commentId: T:CardBattle.Networking.PlayerSync.EndTurnButton
  CardBattle.Networking.PlayerSync:
    name:
      CSharp:
      - name: CardBattle.Networking.PlayerSync
        nameWithType: CardBattle.Networking.PlayerSync
        qualifiedName: CardBattle.Networking.PlayerSync
      VB:
      - name: CardBattle.Networking.PlayerSync
        nameWithType: CardBattle.Networking.PlayerSync
        qualifiedName: CardBattle.Networking.PlayerSync
    isDefinition: true
    commentId: N:CardBattle.Networking.PlayerSync
  CardBattle.RemoteConfig:
    name:
      CSharp:
      - name: CardBattle.RemoteConfig
        nameWithType: CardBattle.RemoteConfig
        qualifiedName: CardBattle.RemoteConfig
      VB:
      - name: CardBattle.RemoteConfig
        nameWithType: CardBattle.RemoteConfig
        qualifiedName: CardBattle.RemoteConfig
    isDefinition: true
    commentId: N:CardBattle.RemoteConfig
  CardBattle.RemoteConfig.Configs:
    name:
      CSharp:
      - id: CardBattle.RemoteConfig.Configs
        name: Configs
        nameWithType: Configs
        qualifiedName: CardBattle.RemoteConfig.Configs
      VB:
      - id: CardBattle.RemoteConfig.Configs
        name: Configs
        nameWithType: Configs
        qualifiedName: CardBattle.RemoteConfig.Configs
    isDefinition: true
    parent: CardBattle.RemoteConfig
    commentId: T:CardBattle.RemoteConfig.Configs
  CardBattle.RemoteConfig.Configs.Fetched*:
    name:
      CSharp:
      - id: CardBattle.RemoteConfig.Configs.Fetched*
        name: Fetched
        nameWithType: Configs.Fetched
        qualifiedName: CardBattle.RemoteConfig.Configs.Fetched
      VB:
      - id: CardBattle.RemoteConfig.Configs.Fetched*
        name: Fetched
        nameWithType: Configs.Fetched
        qualifiedName: CardBattle.RemoteConfig.Configs.Fetched
    isDefinition: true
    commentId: Overload:CardBattle.RemoteConfig.Configs.Fetched
  CardBattle.RemoteConfig.Configs.FinanceBox_DiceAmount*:
    name:
      CSharp:
      - id: CardBattle.RemoteConfig.Configs.FinanceBox_DiceAmount*
        name: FinanceBox_DiceAmount
        nameWithType: Configs.FinanceBox_DiceAmount
        qualifiedName: CardBattle.RemoteConfig.Configs.FinanceBox_DiceAmount
      VB:
      - id: CardBattle.RemoteConfig.Configs.FinanceBox_DiceAmount*
        name: FinanceBox_DiceAmount
        nameWithType: Configs.FinanceBox_DiceAmount
        qualifiedName: CardBattle.RemoteConfig.Configs.FinanceBox_DiceAmount
    isDefinition: true
    commentId: Overload:CardBattle.RemoteConfig.Configs.FinanceBox_DiceAmount
  CardBattle.RemoteConfig.Configs.Debt_Interest*:
    name:
      CSharp:
      - id: CardBattle.RemoteConfig.Configs.Debt_Interest*
        name: Debt_Interest
        nameWithType: Configs.Debt_Interest
        qualifiedName: CardBattle.RemoteConfig.Configs.Debt_Interest
      VB:
      - id: CardBattle.RemoteConfig.Configs.Debt_Interest*
        name: Debt_Interest
        nameWithType: Configs.Debt_Interest
        qualifiedName: CardBattle.RemoteConfig.Configs.Debt_Interest
    isDefinition: true
    commentId: Overload:CardBattle.RemoteConfig.Configs.Debt_Interest
  CardBattle.RemoteConfig.Configs.Revenue_TownFactor*:
    name:
      CSharp:
      - id: CardBattle.RemoteConfig.Configs.Revenue_TownFactor*
        name: Revenue_TownFactor
        nameWithType: Configs.Revenue_TownFactor
        qualifiedName: CardBattle.RemoteConfig.Configs.Revenue_TownFactor
      VB:
      - id: CardBattle.RemoteConfig.Configs.Revenue_TownFactor*
        name: Revenue_TownFactor
        nameWithType: Configs.Revenue_TownFactor
        qualifiedName: CardBattle.RemoteConfig.Configs.Revenue_TownFactor
    isDefinition: true
    commentId: Overload:CardBattle.RemoteConfig.Configs.Revenue_TownFactor
  CardBattle.RemoteConfig.Configs.Revenue_VillageFactor*:
    name:
      CSharp:
      - id: CardBattle.RemoteConfig.Configs.Revenue_VillageFactor*
        name: Revenue_VillageFactor
        nameWithType: Configs.Revenue_VillageFactor
        qualifiedName: CardBattle.RemoteConfig.Configs.Revenue_VillageFactor
      VB:
      - id: CardBattle.RemoteConfig.Configs.Revenue_VillageFactor*
        name: Revenue_VillageFactor
        nameWithType: Configs.Revenue_VillageFactor
        qualifiedName: CardBattle.RemoteConfig.Configs.Revenue_VillageFactor
    isDefinition: true
    commentId: Overload:CardBattle.RemoteConfig.Configs.Revenue_VillageFactor
  CardBattle.RemoteConfig.Configs.GameManager_InitialMoney*:
    name:
      CSharp:
      - id: CardBattle.RemoteConfig.Configs.GameManager_InitialMoney*
        name: GameManager_InitialMoney
        nameWithType: Configs.GameManager_InitialMoney
        qualifiedName: CardBattle.RemoteConfig.Configs.GameManager_InitialMoney
      VB:
      - id: CardBattle.RemoteConfig.Configs.GameManager_InitialMoney*
        name: GameManager_InitialMoney
        nameWithType: Configs.GameManager_InitialMoney
        qualifiedName: CardBattle.RemoteConfig.Configs.GameManager_InitialMoney
    isDefinition: true
    commentId: Overload:CardBattle.RemoteConfig.Configs.GameManager_InitialMoney
  CardBattle.RemoteConfig.Configs.PlayerController_Speed*:
    name:
      CSharp:
      - id: CardBattle.RemoteConfig.Configs.PlayerController_Speed*
        name: PlayerController_Speed
        nameWithType: Configs.PlayerController_Speed
        qualifiedName: CardBattle.RemoteConfig.Configs.PlayerController_Speed
      VB:
      - id: CardBattle.RemoteConfig.Configs.PlayerController_Speed*
        name: PlayerController_Speed
        nameWithType: Configs.PlayerController_Speed
        qualifiedName: CardBattle.RemoteConfig.Configs.PlayerController_Speed
    isDefinition: true
    commentId: Overload:CardBattle.RemoteConfig.Configs.PlayerController_Speed
  CardBattle.RemoteConfig.Configs.ConfigVersion*:
    name:
      CSharp:
      - id: CardBattle.RemoteConfig.Configs.ConfigVersion*
        name: ConfigVersion
        nameWithType: Configs.ConfigVersion
        qualifiedName: CardBattle.RemoteConfig.Configs.ConfigVersion
      VB:
      - id: CardBattle.RemoteConfig.Configs.ConfigVersion*
        name: ConfigVersion
        nameWithType: Configs.ConfigVersion
        qualifiedName: CardBattle.RemoteConfig.Configs.ConfigVersion
    isDefinition: true
    commentId: Overload:CardBattle.RemoteConfig.Configs.ConfigVersion
  System.ValueType:
    name:
      CSharp:
      - id: System.ValueType
        name: ValueType
        nameWithType: ValueType
        qualifiedName: System.ValueType
        isExternal: true
      VB:
      - id: System.ValueType
        name: ValueType
        nameWithType: ValueType
        qualifiedName: System.ValueType
        isExternal: true
    isDefinition: true
    parent: System
    commentId: T:System.ValueType
  System.ValueType.Equals(System.Object):
    name:
      CSharp:
      - id: System.ValueType.Equals(System.Object)
        name: Equals
        nameWithType: ValueType.Equals
        qualifiedName: System.ValueType.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ValueType.Equals(System.Object)
        name: Equals
        nameWithType: ValueType.Equals
        qualifiedName: System.ValueType.Equals
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - id: System.Object
        name: Object
        nameWithType: Object
        qualifiedName: System.Object
        isExternal: true
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ValueType
    commentId: M:System.ValueType.Equals(System.Object)
  System.ValueType.GetHashCode:
    name:
      CSharp:
      - id: System.ValueType.GetHashCode
        name: GetHashCode
        nameWithType: ValueType.GetHashCode
        qualifiedName: System.ValueType.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ValueType.GetHashCode
        name: GetHashCode
        nameWithType: ValueType.GetHashCode
        qualifiedName: System.ValueType.GetHashCode
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ValueType
    commentId: M:System.ValueType.GetHashCode
  System.ValueType.ToString:
    name:
      CSharp:
      - id: System.ValueType.ToString
        name: ToString
        nameWithType: ValueType.ToString
        qualifiedName: System.ValueType.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
      VB:
      - id: System.ValueType.ToString
        name: ToString
        nameWithType: ValueType.ToString
        qualifiedName: System.ValueType.ToString
        isExternal: true
      - name: (
        nameWithType: (
        qualifiedName: (
      - name: )
        nameWithType: )
        qualifiedName: )
    isDefinition: true
    parent: System.ValueType
    commentId: M:System.ValueType.ToString
  CardBattle.RemoteConfig.Configs.userAttributes:
    name:
      CSharp:
      - id: CardBattle.RemoteConfig.Configs.userAttributes
        name: Configs.userAttributes
        nameWithType: Configs.userAttributes
        qualifiedName: CardBattle.RemoteConfig.Configs.userAttributes
      VB:
      - id: CardBattle.RemoteConfig.Configs.userAttributes
        name: Configs.userAttributes
        nameWithType: Configs.userAttributes
        qualifiedName: CardBattle.RemoteConfig.Configs.userAttributes
    isDefinition: true
    commentId: T:CardBattle.RemoteConfig.Configs.userAttributes
  CardBattle.RemoteConfig.Configs.appAttributes:
    name:
      CSharp:
      - id: CardBattle.RemoteConfig.Configs.appAttributes
        name: Configs.appAttributes
        nameWithType: Configs.appAttributes
        qualifiedName: CardBattle.RemoteConfig.Configs.appAttributes
      VB:
      - id: CardBattle.RemoteConfig.Configs.appAttributes
        name: Configs.appAttributes
        nameWithType: Configs.appAttributes
        qualifiedName: CardBattle.RemoteConfig.Configs.appAttributes
    isDefinition: true
    commentId: T:CardBattle.RemoteConfig.Configs.appAttributes
  Assets.Scripts.Networking.GeneralMatchController.Turn*:
    name:
      CSharp:
      - id: Assets.Scripts.Networking.GeneralMatchController.Turn*
        name: Turn
        nameWithType: GeneralMatchController.Turn
        qualifiedName: Assets.Scripts.Networking.GeneralMatchController.Turn
      VB:
      - id: Assets.Scripts.Networking.GeneralMatchController.Turn*
        name: Turn
        nameWithType: GeneralMatchController.Turn
        qualifiedName: Assets.Scripts.Networking.GeneralMatchController.Turn
    isDefinition: true
    commentId: Overload:Assets.Scripts.Networking.GeneralMatchController.Turn
  Assets.Scripts.Networking.GeneralMatchController.CurrentPlayerId*:
    name:
      CSharp:
      - id: Assets.Scripts.Networking.GeneralMatchController.CurrentPlayerId*
        name: CurrentPlayerId
        nameWithType: GeneralMatchController.CurrentPlayerId
        qualifiedName: Assets.Scripts.Networking.GeneralMatchController.CurrentPlayerId
      VB:
      - id: Assets.Scripts.Networking.GeneralMatchController.CurrentPlayerId*
        name: CurrentPlayerId
        nameWithType: GeneralMatchController.CurrentPlayerId
        qualifiedName: Assets.Scripts.Networking.GeneralMatchController.CurrentPlayerId
    isDefinition: true
    commentId: Overload:Assets.Scripts.Networking.GeneralMatchController.CurrentPlayerId
  Assets.Scripts.Networking.GeneralMatchController.StartTurn*:
    name:
      CSharp:
      - id: Assets.Scripts.Networking.GeneralMatchController.StartTurn*
        name: StartTurn
        nameWithType: GeneralMatchController.StartTurn
        qualifiedName: Assets.Scripts.Networking.GeneralMatchController.StartTurn
      VB:
      - id: Assets.Scripts.Networking.GeneralMatchController.StartTurn*
        name: StartTurn
        nameWithType: GeneralMatchController.StartTurn
        qualifiedName: Assets.Scripts.Networking.GeneralMatchController.StartTurn
    isDefinition: true
    commentId: Overload:Assets.Scripts.Networking.GeneralMatchController.StartTurn
  Assets.Scripts.Networking.GeneralMatchController.EndTurn*:
    name:
      CSharp:
      - id: Assets.Scripts.Networking.GeneralMatchController.EndTurn*
        name: EndTurn
        nameWithType: GeneralMatchController.EndTurn
        qualifiedName: Assets.Scripts.Networking.GeneralMatchController.EndTurn
      VB:
      - id: Assets.Scripts.Networking.GeneralMatchController.EndTurn*
        name: EndTurn
        nameWithType: GeneralMatchController.EndTurn
        qualifiedName: Assets.Scripts.Networking.GeneralMatchController.EndTurn
    isDefinition: true
    commentId: Overload:Assets.Scripts.Networking.GeneralMatchController.EndTurn
  Assets.Scripts.Networking.GeneralMatchController:
    name:
      CSharp:
      - id: Assets.Scripts.Networking.GeneralMatchController
        name: GeneralMatchController
        nameWithType: GeneralMatchController
        qualifiedName: Assets.Scripts.Networking.GeneralMatchController
      VB:
      - id: Assets.Scripts.Networking.GeneralMatchController
        name: GeneralMatchController
        nameWithType: GeneralMatchController
        qualifiedName: Assets.Scripts.Networking.GeneralMatchController
    isDefinition: true
    commentId: T:Assets.Scripts.Networking.GeneralMatchController
  Assets.Scripts.Networking:
    name:
      CSharp:
      - name: Assets.Scripts.Networking
        nameWithType: Assets.Scripts.Networking
        qualifiedName: Assets.Scripts.Networking
      VB:
      - name: Assets.Scripts.Networking
        nameWithType: Assets.Scripts.Networking
        qualifiedName: Assets.Scripts.Networking
    isDefinition: true
    commentId: N:Assets.Scripts.Networking
  TheInvaders.Battlefield.PlayerController.IsOnTurn*:
    name:
      CSharp:
      - id: TheInvaders.Battlefield.PlayerController.IsOnTurn*
        name: IsOnTurn
        nameWithType: PlayerController.IsOnTurn
        qualifiedName: TheInvaders.Battlefield.PlayerController.IsOnTurn
      VB:
      - id: TheInvaders.Battlefield.PlayerController.IsOnTurn*
        name: IsOnTurn
        nameWithType: PlayerController.IsOnTurn
        qualifiedName: TheInvaders.Battlefield.PlayerController.IsOnTurn
    isDefinition: true
    commentId: Overload:TheInvaders.Battlefield.PlayerController.IsOnTurn
  TheInvaders.Battlefield.PlayerController.P*:
    name:
      CSharp:
      - id: TheInvaders.Battlefield.PlayerController.P*
        name: P
        nameWithType: PlayerController.P
        qualifiedName: TheInvaders.Battlefield.PlayerController.P
      VB:
      - id: TheInvaders.Battlefield.PlayerController.P*
        name: P
        nameWithType: PlayerController.P
        qualifiedName: TheInvaders.Battlefield.PlayerController.P
    isDefinition: true
    commentId: Overload:TheInvaders.Battlefield.PlayerController.P
  TheInvaders.Battlefield.PlayerController:
    name:
      CSharp:
      - id: TheInvaders.Battlefield.PlayerController
        name: PlayerController
        nameWithType: PlayerController
        qualifiedName: TheInvaders.Battlefield.PlayerController
      VB:
      - id: TheInvaders.Battlefield.PlayerController
        name: PlayerController
        nameWithType: PlayerController
        qualifiedName: TheInvaders.Battlefield.PlayerController
    isDefinition: true
    commentId: T:TheInvaders.Battlefield.PlayerController
  TheInvaders.Battlefield:
    name:
      CSharp:
      - name: TheInvaders.Battlefield
        nameWithType: TheInvaders.Battlefield
        qualifiedName: TheInvaders.Battlefield
      VB:
      - name: TheInvaders.Battlefield
        nameWithType: TheInvaders.Battlefield
        qualifiedName: TheInvaders.Battlefield
    isDefinition: true
    commentId: N:TheInvaders.Battlefield
